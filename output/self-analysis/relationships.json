[
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "SCHEMA_VERSION",
      "SCHEMA_METADATA"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "TSCodeGraph",
      "Config"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "TSParser"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "GraphTransformer"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "Neo4jImporter"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "QueryExecutor"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "imports": [
      "QueryExecutor"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../src/neo4j/query-executor",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig->self:Variable:scripts/analyze-codebase-relationships.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      17
    ],
    "referenceLocationColumns": [
      28
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4788
    ],
    "arguments": [
      "'This may be due to missing file relationships in the data.'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4788
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      18
    ],
    "referenceLocationColumns": [
      25
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor->self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      40
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3536
    ],
    "arguments": [
      "`\n        MATCH (sourceFile:File)-[:DEFINES_VARIABLE|DEFINES_FUNCTION|DEFINES_CLASS|DEFINES_INTERFACE]->(source:Node)\n        MATCH (source)-[r]->(target:Node)\n        MATCH (targetFile:File)-[:DEFINES_VARIABLE|DEFINES_FUNCTION|DEFINES_CLASS|DEFINES_INTERFACE]->(target)\n        WHERE source.codebaseId <> target.codebaseId\n        WITH\n          sourceFile.path AS sourcePath,\n          targetFile.path AS targetPath,\n          source.codebaseId AS sourceCodebase,\n          target.codebaseId AS targetCodebase,\n          count(*) AS dependencyCount\n        RETURN\n          sourceCodebase,\n          targetCodebase,\n          sourcePath,\n          targetPath,\n          dependencyCount\n        ORDER BY dependencyCount DESC\n        LIMIT 20\n      `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      106
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      520
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4631
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      750
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1049
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1197
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:record.labels.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:record.labels.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1249
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1449
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1976
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4717
    ],
    "arguments": [
      "'Error analyzing file-level dependencies:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4774
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2490
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3005
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts->self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/analyze-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3536
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4485
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4922
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4922
    ]
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "imports": [
      "QueryExecutor"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../src/neo4j/query-executor",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:neo4jConfig->self:Variable:scripts/cleanup-codebase.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      17
    ],
    "referenceLocationColumns": [
      15
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2432
    ],
    "arguments": [
      "'This is not critical - the main nodes have been deleted'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2540
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      18
    ],
    "referenceLocationColumns": [
      12
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2591
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:queryExecutor->self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      27
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:countResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1828
    ],
    "arguments": [
      "`MATCH ()-[r]-()\n           WHERE r.codebaseId = $codebaseId OR\n                 r.sourceCodebaseId = $codebaseId OR\n                 r.targetCodebaseId = $codebaseId\n           DELETE r\n           RETURN count(r) as deletedRelCount`",
      "{ codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:countResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      67
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:countResult->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      386
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:nodeCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:nodeCount->self:Variable:scripts/cleanup-codebase.ts:countResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      438
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      542
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:resolve",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:resolve",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      939
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:deleteResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1121
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:deleteResult->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1486
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:deletedCount->self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1547
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1633
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:cleanupResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:cleanupResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1828
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedRelCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:deletedRelCount->self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2170
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2265
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2343
    ],
    "arguments": [
      "`Warning: Could not clean up dangling relationships: ${relError}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:relError",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:relError",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2411
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2540
    ],
    "arguments": [
      "`Error deleting nodes for codebase ${codebaseId}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2626
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2692
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2692
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts->self:Variable:scripts/cleanup-codebase.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/cleanup-codebase.ts",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/cleanup-codebase.ts:codebaseId->self:Variable:scripts/cleanup-codebase.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:codebaseId",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2788
    ]
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "imports": [
      "QueryExecutor"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../src/neo4j/query-executor",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig->self:Variable:scripts/fix-cross-codebase-relationships.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      20
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2463
    ],
    "arguments": [
      "`${record.sourceCodebase} -> ${record.targetCodebase} [${record.relationshipType}]: ${record.count} relationships`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2463
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor->self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      188
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2021
    ],
    "arguments": [
      "`\n        MATCH (source:Node)-[r {isCrossCodebase: true}]->(target:Node)\n        RETURN \n          r.type AS relationshipType,\n          source.codebaseId AS sourceCodebase,\n          target.codebaseId AS targetCodebase,\n          count(*) AS count\n        ORDER BY count DESC\n      `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      293
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      468
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      601
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      872
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1312
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1388
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1529
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1724
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1955
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/fix-cross-codebase-relationships.ts",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2021
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2424
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2561
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2659
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2659
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "imports": [
      "QueryExecutor"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../src/neo4j/query-executor",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      19
    ],
    "referenceLocationColumns": [
      12
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5183
    ],
    "arguments": [
      "`Successfully imported ${importedNodes} nodes and ${importedRels} relationships`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5183
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      5
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      438
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor->self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      106
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      267
    ],
    "arguments": [
      "jsonDir",
      "'relationships.json'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:nodesPath->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      213
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      277
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:fs.existsSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      348
    ],
    "arguments": [
      "relationshipsPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      333
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      362
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5031
    ],
    "arguments": [
      "`Error importing ${relType} relationships:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      456
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      456
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:JSON.parse",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:JSON.parse",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      572
    ],
    "arguments": [
      "fs.readFileSync(relationshipsPath, 'utf8')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:fs.readFileSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      583
    ],
    "arguments": [
      "relationshipsPath",
      "'utf8'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:nodes->self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      525
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:relationships->self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      599
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1911
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4956
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:importedNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedNodes"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batchSize"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:i",
    "referenceType": "readwrite",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2577
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2582
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:nodes.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:nodes.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      910
    ],
    "arguments": [
      "i",
      "i + batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      910
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2631
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2635
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:query",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:query"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4299
    ],
    "arguments": [
      "query",
      "{ relationships: transformedBatch }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4299
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:query",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:query",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4326
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1374
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:count",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:count"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4473
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:record",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:record"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:record->self:Variable:scripts/import-json-to-neo4j.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:record",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4529
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4812
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:count",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:count",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4888
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:record.get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:record.get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4622
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4622
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:importedNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5220
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:importedRels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedRels"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relsByType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2363
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2324
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:relsByType[rel.type].push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:relsByType[rel.type].push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2298
    ],
    "arguments": [
      "rel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:rels->self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2396
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:rels->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2407
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2564
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5064
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:rels.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:rels.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2617
    ],
    "arguments": [
      "i",
      "i + batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2617
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch"
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:batch.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:batch.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2729
    ],
    "arguments": [
      "rel => {\n          // Clone the relationship to avoid modifying the original\n          const transformed = { ...rel };\n          \n          // Handle complex properties\n          if (transformed.bindings) {\n            // Convert Map to string representation\n            transformed.bindingsJson = JSON.stringify(transformed.bindings);\n            delete transformed.bindings;\n          }\n          \n          // Handle event handlers in LISTENS_TO relationships\n          if (relType === 'LISTENS_TO' && transformed.handlers) {\n            // Convert handlers to string representation\n            transformed.handlersJson = JSON.stringify(transformed.handlers);\n            delete transformed.handlers;\n          }\n          \n          // Convert any object properties to JSON strings\n          for (const key in transformed) {\n            if (transformed[key] !== null &&\n                typeof transformed[key] === 'object' &&\n                !Array.isArray(transformed[key])) {\n              transformed[key + 'Json'] = JSON.stringify(transformed[key]);\n              delete transformed[key];\n            }\n          }\n          \n          return transformed;\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2729
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:transformed",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformed"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:transformed",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformed",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3890
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3216
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3830
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:query->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:query",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4166
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4350
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:importedRels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedRels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5247
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5090
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5331
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5331
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:jsonDir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:jsonDir"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:jsonDir->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:jsonDir",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5443
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts->self:Variable:scripts/import-json-to-neo4j.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/scripts/import-json-to-neo4j.ts",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:scripts/import-json-to-neo4j.ts:codebaseId->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:codebaseId",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5479
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "imports": [
      "TSCodeGraph"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/index.ts"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:args",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:args"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:args->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:args",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      15
    ],
    "referenceLocationColumns": [
      13
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:command",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:command"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:command->self:Variable:src/cli.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:command",
    "endNodeId": "self:Variable:src/cli.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      15
    ],
    "referenceLocationColumns": [
      52
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Function:src/cli.ts:main",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Function:src/cli.ts:main"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:command",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:command",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      229
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Function:src/cli.ts:analyzeProject",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:analyzeProject",
    "callCount": 1,
    "callLocationLines": [
      19
    ],
    "callLocationColumns": [
      46
    ],
    "arguments": [
      "args.slice(1)"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Method:src/cli.ts:args.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:args.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      85
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      85
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Function:src/cli.ts:ingestProject",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:ingestProject",
    "callCount": 1,
    "callLocationLines": [
      20
    ],
    "callLocationColumns": [
      52
    ],
    "arguments": [
      "args.slice(1)"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Function:src/cli.ts:queryGraph",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:queryGraph",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      74
    ],
    "arguments": [
      "args.slice(1)"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      249
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      318
    ],
    "arguments": [
      "'Error:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      318
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:main->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      354
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      354
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      342
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Function:src/cli.ts:printUsage"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:printUsage->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:printUsage",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      439
    ],
    "arguments": [
      "`\nTypeScript Code Graph - A tool for analyzing TypeScript codebases and importing them into Neo4j\n\nUsage:\n  sage analyze <project-path> [output-dir] [codebase-id] [--skip-validation]\n  sage ingest <codebase-id> [--skip-validation] [--no-cleanup]\n  sage query <codebase-id> <cypher-query>\n  sage help\n\nCommands:\n  analyze    Analyze a TypeScript project and import it into Neo4j\n  ingest     Analyze and import the current directory with the specified codebase ID\n  query      Run a Cypher query against the Neo4j database\n  help       Show this help message\n\nOptions:\n  --skip-validation    Skip validation of the graph model (useful for projects with complex imports)\n  --no-cleanup         Skip cleaning up existing data for the codebase (ingest command only)\n\nExamples:\n  sage analyze ./my-project\n  sage analyze ./my-project ./output my-project\n  sage analyze ./my-project ./output my-project --skip-validation\n  sage ingest my-project\n  sage ingest my-project --skip-validation\n  sage ingest my-project --no-cleanup\n  sage query my-project \"MATCH (n:Class) RETURN n.name LIMIT 10\"\n\nEnvironment Variables:\n  NEO4J_URI       URI of the Neo4j database (e.g., neo4j://localhost:7687)\n  NEO4J_USERNAME  Username for the Neo4j database (default: neo4j)\n  NEO4J_PASSWORD  Password for the Neo4j database (default: password)\n  NEO4J_DATABASE  Name of the Neo4j database (optional)\n  `"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:printUsage->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:printUsage",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      439
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Function:src/cli.ts:analyzeProject",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Function:src/cli.ts:analyzeProject"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/cli.ts:analyzeProject->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1932
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2560
    ],
    "arguments": [
      "`Error: Project path does not exist: ${projectPath}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3714
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2009
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2633
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2633
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:skipValidation",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:skipValidation"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:args.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:args.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2114
    ],
    "arguments": [
      "'--skip-validation'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:skipValidation->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:skipValidation",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2114
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:args.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:args.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2215
    ],
    "arguments": [
      "arg => arg !== '--skip-validation'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:cleanArgs->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2215
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:projectPath"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.resolve",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.resolve",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2352
    ],
    "arguments": [
      "cleanArgs[1]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:projectPath->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:projectPath",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2302
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:outputDir"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2365
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2381
    ],
    "arguments": [
      "process.cwd()",
      "'output'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:process.cwd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:process.cwd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2391
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2391
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:codebaseId->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2438
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2454
    ],
    "arguments": [
      "projectPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:codebaseId->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2468
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:fs.existsSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2526
    ],
    "arguments": [
      "projectPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2704
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3714
    ],
    "arguments": [
      "`Graph data imported to Neo4j at ${neo4jConfig.uri}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3666
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2799
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:neo4jConfig->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6159
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3761
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:config",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:config"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:config->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:config",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11701
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:config->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:config",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11756
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:codeGraph->self:Variable:src/cli.ts:config",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:codeGraph",
    "endNodeId": "self:Variable:src/cli.ts:config",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11852
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.process",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3549
    ],
    "arguments": [
      "skipValidation"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3836
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:skipValidation",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:skipValidation",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3567
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3836
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Function:src/cli.ts:queryGraph",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Function:src/cli.ts:queryGraph"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/cli.ts:queryGraph->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3969
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3992
    ],
    "arguments": [
      "'Error: Codebase ID and Cypher query are required'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5128
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4063
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4081
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4081
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:codebaseId->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4126
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:cypherQuery",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:cypherQuery"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:cypherQuery->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4157
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5128
    ],
    "arguments": [
      "`  Execution time: ${result.summary.executionTime}ms`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4501
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4551
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:cypherQuery",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4597
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:codeGraph.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4875
    ],
    "arguments": [
      "cypherQuery",
      "{ codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4875
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:cypherQuery",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4898
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4985
    ],
    "arguments": [
      "result.records",
      "null",
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5161
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5245
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5245
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Function:src/cli.ts:ingestProject",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Function:src/cli.ts:ingestProject"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/cli.ts:ingestProject->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5452
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20817
    ],
    "arguments": [
      "'Error during import:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20817
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5528
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20867
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20867
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:codebaseId->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5610
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:args.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:args.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5700
    ],
    "arguments": [
      "'--no-cleanup'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:skipValidation->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:skipValidation",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5644
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:noCleanup",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:noCleanup"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:noCleanup->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:noCleanup",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5700
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:process.cwd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:process.cwd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5799
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:projectPath->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:projectPath",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5799
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12935
    ],
    "arguments": [
      "outputDir",
      "'relationships.json'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5844
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5870
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20703
    ],
    "arguments": [
      "`\\nIngestion complete! Codebase '${codebaseId}' is now available in Neo4j.`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6229
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20750
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6353
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13112
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:noCleanup",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:noCleanup",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6481
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:{ QueryExecutor }",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:{ QueryExecutor }"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:queryExecutor->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12770
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:countResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:countResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19716
    ],
    "arguments": [
      "query",
      "{ relationships: transformedBatch }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:countResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:countResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6944
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:countResult->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:countResult",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7281
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:nodeCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:nodeCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:countResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:countResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7420
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:record",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:record"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:countResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:countResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7477
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20229
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodeCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodeCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7885
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('nodeCount').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('nodeCount').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7571
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20039
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Parameter:src/cli.ts:ingestProject:resolve",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:resolve",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8302
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:deleteResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:deleteResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:deleteResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8512
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:deleteResult->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:deleteResult",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8917
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:deletedCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deleteResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deleteResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9084
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:deleteResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:deleteResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9146
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deletedCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deletedCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9580
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('deletedCount').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('deletedCount').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9252
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:cleanupResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:cleanupResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:cleanupResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9797
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:deletedRelCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:cleanupResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10276
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:cleanupResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10341
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deletedRelCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10818
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('deletedRelCount').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('deletedRelCount').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10455
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10904
    ],
    "arguments": [
      "`Warning: Could not clean up dangling relationships: ${relError}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relError",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relError",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10972
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20855
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20936
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20936
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:analysisConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:analysisConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:analysisConfig->self:Variable:src/cli.ts:config",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:analysisConfig",
    "endNodeId": "self:Variable:src/cli.ts:config",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11995
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:analysisCodeGraph",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:analysisCodeGraph"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:analysisCodeGraph->self:Variable:src/cli.ts:analysisConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:analysisCodeGraph",
    "endNodeId": "self:Variable:src/cli.ts:analysisConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12125
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:analysisCodeGraph.process",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:analysisCodeGraph.process",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12152
    ],
    "arguments": [
      "skipValidation"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:analysisCodeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:analysisCodeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12205
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:skipValidation",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:skipValidation",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12178
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:analysisCodeGraph.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:analysisCodeGraph.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12205
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12377
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12377
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:nodesPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:nodesPath->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:nodesPath",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12879
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:relationshipsPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:relationshipsPath->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12945
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:fs.existsSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13022
    ],
    "arguments": [
      "relationshipsPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodesPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodesPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13007
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13036
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:nodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:nodes"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:JSON.parse",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:JSON.parse",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13252
    ],
    "arguments": [
      "fs.readFileSync(relationshipsPath, 'utf8')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:fs.readFileSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13263
    ],
    "arguments": [
      "relationshipsPath",
      "'utf8'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:nodes->self:Variable:src/cli.ts:nodesPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:nodes",
    "endNodeId": "self:Variable:src/cli.ts:nodesPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13205
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:relationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:relationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:relationships->self:Variable:src/cli.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:relationships",
    "endNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13279
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16315
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20373
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:importedNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:importedNodes"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:batchSize",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:batchSize"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:i",
    "referenceType": "readwrite",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16989
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16994
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:batch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:batch"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:nodes.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:nodes.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13602
    ],
    "arguments": [
      "i",
      "i + batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13602
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17043
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17047
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:processedBatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:processedBatch"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:batch.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:batch.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17141
    ],
    "arguments": [
      "(rel: any) => {\n          // Clone the relationship to avoid modifying the original\n          const transformed = { ...rel };\n          \n          // Handle complex properties\n          if (transformed.bindings) {\n            // Convert Map to string representation\n            transformed.bindingsJson = JSON.stringify(transformed.bindings);\n            delete transformed.bindings;\n          }\n          \n          // Handle event handlers in LISTENS_TO relationships\n          if (relType === 'LISTENS_TO' && transformed.handlers) {\n            // Convert handlers to string representation\n            transformed.handlersJson = JSON.stringify(transformed.handlers);\n            delete transformed.handlers;\n          }\n          \n          // Convert any object properties to JSON strings\n          for (const key in transformed) {\n            // Check for Map objects specifically\n            if (transformed[key] &&\n                typeof transformed[key] === 'object' &&\n                transformed[key].constructor &&\n                transformed[key].constructor.name === 'Map') {\n              console.log(`Converting Map in relationship ${rel.nodeId}, property ${key} to JSON string`);\n              try {\n                // Convert Map to object then to JSON string\n                const mapObj: Record<string, any> = {};\n                for (const [k, v] of Object.entries(transformed[key])) {\n                  mapObj[k] = v;\n                }\n                transformed[key + 'Json'] = JSON.stringify(mapObj);\n                delete transformed[key];\n              } catch (e) {\n                console.log(`Error converting Map in relationship ${rel.nodeId}, property ${key}: ${e}`);\n                delete transformed[key];\n              }\n            }\n            // Handle other non-primitive objects\n            else if (transformed[key] !== null &&\n                typeof transformed[key] === 'object' &&\n                !Array.isArray(transformed[key])) {\n              transformed[key + 'Json'] = JSON.stringify(transformed[key]);\n              delete transformed[key];\n            }\n          }\n          \n          return transformed;\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13714
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:processed",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:processed"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:processed",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:processed",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15309
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15243
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15126
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:mapObj",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:mapObj"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:mapObj",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:mapObj",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14517
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:e",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:e",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15206
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:query",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:query"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19716
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:query",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:query",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19743
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:processedBatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:processedBatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15769
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:count",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:count"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19890
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19946
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:count",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:count",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20305
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20039
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:importedNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:importedNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20641
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:importedRels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:importedRels"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:relsByType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:relsByType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16775
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16732
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:relsByType[rel.type].push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:relsByType[rel.type].push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16706
    ],
    "arguments": [
      "rel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:rels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:rels"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:rels->self:Variable:src/cli.ts:relsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:rels",
    "endNodeId": "self:Variable:src/cli.ts:relsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16808
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:rels->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:rels",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16819
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:rels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:rels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16976
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20481
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:rels.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:rels.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17029
    ],
    "arguments": [
      "i",
      "i + batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:rels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:rels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17029
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:transformedBatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:transformedBatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17141
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts->self:Variable:src/cli.ts:transformed",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/cli.ts",
    "endNodeId": "self:Variable:src/cli.ts:transformed"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:transformed",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:transformed",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19299
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17635
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19239
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18761
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:mapObj",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:mapObj",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18667
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:e",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:e",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18845
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:query->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:query",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19575
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:transformedBatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19767
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:importedRels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:importedRels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20668
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "imports": [
      "TSCodeGraph"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/index.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Function:src/examples/analyze-project.ts:main",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Function:src/examples/analyze-project.ts:main"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.argv.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.argv.slice",
    "callCount": 1,
    "callLocationLines": [
      12
    ],
    "callLocationColumns": [
      55
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:args->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      12
    ],
    "referenceLocationColumns": [
      55
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      14
    ],
    "referenceLocationColumns": [
      13
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4107
    ],
    "arguments": [
      "'Error analyzing project:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4107
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4161
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4161
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.resolve",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.resolve",
    "callCount": 1,
    "callLocationLines": [
      19
    ],
    "callLocationColumns": [
      28
    ],
    "arguments": [
      "args[1]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:projectPath->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      18
    ],
    "referenceLocationColumns": [
      42
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:outputDir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:outputDir->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      19
    ],
    "referenceLocationColumns": [
      41
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      19
    ],
    "callLocationColumns": [
      52
    ],
    "arguments": [
      "process.cwd()",
      "'output'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.cwd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.cwd",
    "callCount": 1,
    "callLocationLines": [
      19
    ],
    "callLocationColumns": [
      62
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:outputDir->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      19
    ],
    "referenceLocationColumns": [
      62
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:codebaseId->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      34
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      20
    ],
    "callLocationColumns": [
      45
    ],
    "arguments": [
      "projectPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:codebaseId->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4010
    ],
    "arguments": [
      "`Graph data imported to Neo4j at ${neo4jConfig.uri}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      66
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:outputDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3962
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      161
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:neo4jConfig->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      425
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4057
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:config",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:config"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:config->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      702
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:config->self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      757
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:codeGraph->self:Variable:src/examples/analyze-project.ts:config",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      853
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.process",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      911
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4227
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:nodeCountsResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3348
    ],
    "arguments": [
      "`\n        MATCH (f:File)-[:EXPORTS_LOCAL|EXPORTS_DEFAULT]->(e)\n        WHERE f.codebaseId = $codebaseId\n        AND NOT EXISTS((e)<-[:IMPORTS]-())\n        RETURN f.path AS file, e.name AS export\n        LIMIT 10\n      `",
      "{ codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:nodeCountsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1187
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1413
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:record.labels.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:record.labels.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1466
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3838
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:relCountsResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:relCountsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1656
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1885
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:complexClassesResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:complexClassesResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2129
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2444
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:circularDepsResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:circularDepsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2710
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3124
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts->self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/examples/analyze-project.ts",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:unusedExportsResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/examples/analyze-project.ts:unusedExportsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3348
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3764
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4149
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4227
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "imports": [
      "TSParser"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./parser/ts-parser",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "imports": [
      "VueParser"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./parser/vue-parser",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "imports": [
      "PackageParser"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./parser/package-parser",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "SCHEMA_VERSION",
      "SCHEMA_METADATA"
    ],
    "importCount": 2,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "imports": [
      "Neo4jImporter"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./neo4j/importer",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "imports": [
      "GraphTransformer"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./transformer/graph-transformer",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "imports": [
      "QueryExecutor"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./neo4j/query-executor",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Interface:src/index.ts:Config",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Interface:src/index.ts:Config"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/index.ts:Config->self:InterfaceProperty:src/index.ts:Config.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/index.ts:Config",
    "endNodeId": "self:InterfaceProperty:src/index.ts:Config.rootDir",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/index.ts:Config->self:InterfaceProperty:src/index.ts:Config.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/index.ts:Config",
    "endNodeId": "self:InterfaceProperty:src/index.ts:Config.codebaseId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/index.ts:Config->self:InterfaceProperty:src/index.ts:Config.outputDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/index.ts:Config",
    "endNodeId": "self:InterfaceProperty:src/index.ts:Config.outputDir",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/index.ts:Config->self:InterfaceProperty:src/index.ts:Config.neo4j",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/index.ts:Config",
    "endNodeId": "self:InterfaceProperty:src/index.ts:Config.neo4j",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Class:src/index.ts:TSCodeGraph",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Class:src/index.ts:TSCodeGraph"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.config",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/index.ts:TSCodeGraph.config->self:Interface:src/index.ts:Config",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/index.ts:TSCodeGraph.config",
    "endNodeId": "self:Interface:src/index.ts:Config",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.tsParser",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.tsParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.vueParser",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.vueParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.packageParser",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.packageParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.transformer",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.transformer"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/index.ts:TSCodeGraph->self:Property:src/index.ts:TSCodeGraph.queryExecutor",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Property:src/index.ts:TSCodeGraph.queryExecutor"
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.process",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.process"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.process->self:Parameter:src/index.ts:process:skipValidation",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Parameter:src/index.ts:process:skipValidation",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.process->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6034
    ],
    "arguments": [
      "'Processing complete'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6034
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:codebaseNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:codebaseNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2314
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:codebaseNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:codebaseNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5721
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.findSourceFiles",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.findSourceFiles",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2632
    ],
    "arguments": [
      "this.config.rootDir"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:vueFileCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:vueFileCount"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:sourceFiles.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:sourceFiles.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2700
    ],
    "arguments": [
      "(file: string) => file.endsWith('.vue')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:vueFileCount->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:vueFileCount",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2700
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:tsFileCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:tsFileCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:tsFileCount->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:tsFileCount",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2792
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:tsFileCount->self:Variable:src/index.ts:vueFileCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:tsFileCount",
    "endNodeId": "self:Variable:src/index.ts:vueFileCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2813
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:tsFileCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:tsFileCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2852
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:vueFileCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:vueFileCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2888
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.tsParser.initialize",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.tsParser.initialize",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2964
    ],
    "arguments": [
      "sourceFiles"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3127
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:parseResults",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:parseResults"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:parseStart",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:parseStart"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:performance.now",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:performance.now",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5307
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:parseStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:parseStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3084
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:file",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:file",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3727
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:file.endsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:file.endsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3230
    ],
    "arguments": [
      "'.vue'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3650
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.vueParser.parseFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.vueParser.parseFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3452
    ],
    "arguments": [
      "file"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.tsParser.parseFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.tsParser.parseFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3583
    ],
    "arguments": [
      "file"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:parseResults.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:parseResults.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3632
    ],
    "arguments": [
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:parseResults",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:parseResults",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4112
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3691
    ],
    "arguments": [
      "`Error parsing file ${file}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3736
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - parseStart ).toFixed",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - parseStart ).toFixed",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3821
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5307
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:parseStart",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:parseStart",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3843
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:resolveStart",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:resolveStart"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:resolveStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:resolveStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4057
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.resolveComponentReferences",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.resolveComponentReferences",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4080
    ],
    "arguments": [
      "parseResults"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - resolveStart ).toFixed",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - resolveStart ).toFixed",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4179
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:resolveStart",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:resolveStart",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4201
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:transformStart",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:transformStart"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:transformStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:transformStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4266
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:transformResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:transformResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.transformer.transform",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.transformer.transform",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4367
    ],
    "arguments": [
      "parseResults"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:transformResult->self:Variable:src/index.ts:parseResults",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:transformResult",
    "endNodeId": "self:Variable:src/index.ts:parseResults",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4394
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Parameter:src/index.ts:process:skipValidation",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Parameter:src/index.ts:process:skipValidation",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4472
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:isValid",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:isValid"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.transformer.validate",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.transformer.validate",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4512
    ],
    "arguments": [
      "transformResult"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:isValid->self:Variable:src/index.ts:transformResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:isValid",
    "endNodeId": "self:Variable:src/index.ts:transformResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4538
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:isValid",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:isValid",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4567
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:{ nodes, relationships }",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:{ nodes, relationships }"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - transformStart ).toFixed",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - transformStart ).toFixed",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4877
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:transformStart",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:transformStart",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4899
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:packageStart",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:packageStart"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:packageStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:packageStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5046
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:packageResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:packageResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.packageParser.parseAllPackageJsonFiles",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.packageParser.parseAllPackageJsonFiles",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5190
    ],
    "arguments": [
      "nodes",
      "relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - packageStart ).toFixed",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - packageStart ).toFixed",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5305
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:packageStart",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:packageStart",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5327
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:packageResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:packageResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5621
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5710
    ],
    "arguments": [
      "codebaseNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5599
    ],
    "arguments": [
      "...packageResult.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.saveResults",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.saveResults",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5854
    ],
    "arguments": [
      "nodes",
      "relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.importToNeo4j",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.importToNeo4j",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5977
    ],
    "arguments": [
      "nodes",
      "relationships"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Parameter:src/index.ts:findSourceFiles:dir",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Parameter:src/index.ts:findSourceFiles:dir",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:files",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:files"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:walk",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:walk"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:entries",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:entries"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:fs.readdirSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:fs.readdirSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6295
    ],
    "arguments": [
      "directory",
      "{ withFileTypes: true }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:entries",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:entries",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6380
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:fullPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:fullPath"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6416
    ],
    "arguments": [
      "directory",
      "entry.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:fullPath->self:Variable:src/index.ts:entry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:fullPath",
    "endNodeId": "self:Variable:src/index.ts:entry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6437
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.isDirectory",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.isDirectory",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6471
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:entry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:entry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6992
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.name.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.name.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6637
    ],
    "arguments": [
      "'.'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Function:src/index.ts:walk",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Function:src/index.ts:walk",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6679
    ],
    "arguments": [
      "fullPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:walk",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:walk",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6679
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:fullPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:fullPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7046
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.isFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.isFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6726
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.name.endsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.name.endsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6992
    ],
    "arguments": [
      "'.vue'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:walk->self:Method:src/index.ts:files.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:files.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7035
    ],
    "arguments": [
      "fullPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:files",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:files",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7035
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Function:src/index.ts:walk",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Function:src/index.ts:walk",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7103
    ],
    "arguments": [
      "dir"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Variable:src/index.ts:walk",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Variable:src/index.ts:walk",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7103
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Parameter:src/index.ts:findSourceFiles:dir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Parameter:src/index.ts:findSourceFiles:dir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7108
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Variable:src/index.ts:files",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Variable:src/index.ts:files",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7125
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.saveResults",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:relationships",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:nodesPath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7374
    ],
    "arguments": [
      "this.config.outputDir",
      "'relationships.json'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:relationshipsPath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:fs.writeFileSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:fs.writeFileSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7504
    ],
    "arguments": [
      "relationshipsPath",
      "JSON.stringify(relationships, null, 2)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:nodesPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:nodesPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7620
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7540
    ],
    "arguments": [
      "relationships",
      "null",
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7482
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:relationshipsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7676
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7555
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7638
    ],
    "arguments": [
      "`Saved relationships to ${relationshipsPath}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7638
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:relationships",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9337
    ],
    "arguments": [
      "`  ${record.labels.join(':')}: ${record.count.low}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9446
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:importer",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:importer"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:importer.import",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:importer.import",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8320
    ],
    "arguments": [
      "nodes",
      "relationships"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:importer",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:importer",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9568
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8336
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8343
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9089
    ],
    "arguments": [
      "`\n        MATCH (n)\n        RETURN labels(n) AS labels, count(n) AS count\n        ORDER BY count DESC\n      `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9311
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:record.labels.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:record.labels.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9354
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9382
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9446
    ],
    "arguments": [
      "'Error importing to Neo4j:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9509
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:importer.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:importer.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9568
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:componentRegistry",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:componentRegistry"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10355
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10404
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10219
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:node.labels.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:node.labels.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10013
    ],
    "arguments": [
      "'VueComponent'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:componentRegistry.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:componentRegistry.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10109
    ],
    "arguments": [
      "node.name",
      "node.nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:componentRegistry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:componentRegistry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12287
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12242
    ],
    "arguments": [
      "`Component registry built with ${componentRegistry.size} components`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12242
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:['RENDERS', 'PROVIDES_PROPS', 'LISTENS_TO', 'USES_SLOT'].includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:['RENDERS', 'PROVIDES_PROPS', 'LISTENS_TO', 'USES_SLOT'].includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10485
    ],
    "arguments": [
      "relationship.type"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12159
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:relationship.endNodeId.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:relationship.endNodeId.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11996
    ],
    "arguments": [
      "`${relationship.codebaseId}:`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:componentName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:componentName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:componentName->self:Variable:src/index.ts:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:componentName",
    "endNodeId": "self:Variable:src/index.ts:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10827
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:resolvedNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:resolvedNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:componentRegistry.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:componentRegistry.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10886
    ],
    "arguments": [
      "componentName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:resolvedNodeId->self:Variable:src/index.ts:componentRegistry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "endNodeId": "self:Variable:src/index.ts:componentRegistry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10886
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:resolvedNodeId->self:Variable:src/index.ts:componentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "endNodeId": "self:Variable:src/index.ts:componentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10908
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:resolvedNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11162
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:componentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:componentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11271
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11216
    ],
    "arguments": [
      "`Could not resolve component reference: ${componentName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:cypher",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:parameters",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12661
    ],
    "arguments": [
      "cypher",
      "parameters"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12693
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12701
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Method:src/index.ts:this.queryExecutor.executeCodebaseScopedQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeCodebaseScopedQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13063
    ],
    "arguments": [
      "this.config.codebaseId",
      "cypher",
      "parameters"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13133
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13141
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Method:src/index.ts:this.queryExecutor.executeCrossCodebaseQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeCrossCodebaseQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13508
    ],
    "arguments": [
      "cypher",
      "parameters"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13553
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13561
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.close",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.close"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.close->self:Method:src/index.ts:this.queryExecutor.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.close",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13702
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any[]"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14029
    ],
    "arguments": [
      "`\n      MATCH (n:Node)\n      WITH DISTINCT n.codebaseId AS codebaseId\n      MATCH (n:Node {codebaseId: codebaseId})\n      WITH codebaseId, count(n) AS nodeCount\n      RETURN codebaseId, nodeCount\n      ORDER BY codebaseId\n    `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14307
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any[]"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14615
    ],
    "arguments": [
      "`\n      MATCH (source:Node)-[r {isCrossCodebase: true}]->(target:Node)\n      RETURN\n        r.type AS relationshipType,\n        source.nodeId AS sourceNodeId,\n        target.nodeId AS targetNodeId,\n        source.codebaseId AS sourceCodebaseId,\n        target.codebaseId AS targetCodebaseId,\n        count(*) AS count\n      ORDER BY count DESC\n    `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15015
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/index.ts:TSCodeGraph->self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/index.ts:TSCodeGraph",
    "endNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "any[]"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15319
    ],
    "arguments": [
      "`\n      MATCH (source:Node)-[r {isCrossCodebase: true}]->(target:Node)\n      WITH source.codebaseId AS sourceCodebase, target.codebaseId AS targetCodebase, count(*) AS relationshipCount\n      RETURN sourceCodebase, targetCodebase, relationshipCount\n      ORDER BY relationshipCount DESC\n    `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Variable:src/index.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15662
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Function:src/index.ts:main",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Function:src/index.ts:main"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/index.ts:main->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:args"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:process.argv.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.argv.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15857
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:args->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:args",
    "endNodeId": "self:Variable:src/index.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15857
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/index.ts:main->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15889
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15912
    ],
    "arguments": [
      "'Usage: sage <root-dir> [output-dir] [codebase-id]'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/index.ts:main->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15912
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:process.exit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.exit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15984
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/index.ts:main->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15984
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:rootDir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:rootDir"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:path.resolve",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.resolve",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16079
    ],
    "arguments": [
      "args[1]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:rootDir->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:rootDir",
    "endNodeId": "self:Variable:src/index.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16039
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:outputDir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:outputDir"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:outputDir->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:outputDir",
    "endNodeId": "self:Variable:src/index.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16092
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16103
    ],
    "arguments": [
      "process.cwd()",
      "'output'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:process.cwd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.cwd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16113
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:outputDir->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:outputDir",
    "endNodeId": "self:Variable:src/index.ts:process",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16113
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:codebaseId->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:codebaseId",
    "endNodeId": "self:Variable:src/index.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16160
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16171
    ],
    "arguments": [
      "rootDir"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:codebaseId->self:Variable:src/index.ts:rootDir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:codebaseId",
    "endNodeId": "self:Variable:src/index.ts:rootDir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16185
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:config",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/index.ts:config->self:Interface:src/index.ts:Config",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/index.ts:config",
    "endNodeId": "self:Interface:src/index.ts:Config",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->self:Variable:src/index.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "self:Variable:src/index.ts:codeGraph"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/index.ts:codeGraph->self:Variable:src/index.ts:config",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/index.ts:codeGraph",
    "endNodeId": "self:Variable:src/index.ts:config",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16371
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/index.ts:main->self:Method:src/index.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:codeGraph.process",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16388
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/index.ts:main->self:Variable:src/index.ts:codeGraph",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:codeGraph",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16388
    ]
  },
  {
    "nodeId": "self:EXPORTS_LOCAL:self:File:/Users/zach/Dev/SAGE/cli/src/index.ts->local",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/index.ts",
    "endNodeId": "local",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": false,
    "exportNames": [
      "TSCodeGraph",
      "Config"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Package:neo4j-driver",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Package:neo4j-driver",
    "imports": [
      "neo4j",
      "Driver",
      "Session"
    ],
    "importCount": 3,
    "hasDefaultImport": true,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "neo4j-driver",
    "isRelative": false,
    "isResolved": true,
    "packageName": "neo4j-driver"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "Node",
      "Relationship",
      "SCHEMA_VERSION",
      "SCHEMA_METADATA"
    ],
    "importCount": 4,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "imports": [
      "createSchemaConstraints",
      "verifySchemaConstraints",
      "createCodebaseSchema"
    ],
    "importCount": 3,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./schema-constraints",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "imports": [
      "SchemaMigration"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./schema-migration",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.uri",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.uri",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.username",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.username",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.password",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.password",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.database",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.database",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.batchSize",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.batchSize",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig->self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.migration",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/importer.ts:Neo4jImporterConfig.migration",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Property:src/neo4j/importer.ts:Neo4jImporter.driver",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Property:src/neo4j/importer.ts:Neo4jImporter.driver"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Property:src/neo4j/importer.ts:Neo4jImporter.config",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Property:src/neo4j/importer.ts:Neo4jImporter.config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/neo4j/importer.ts:Neo4jImporter.config->self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/neo4j/importer.ts:Neo4jImporter.config",
    "endNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:relationships",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2447
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:createSchemaConstraints",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:createSchemaConstraints",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1051
    ],
    "arguments": [
      "session"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1097
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1097
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:verifySession",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verifySession"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:verified",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verified"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:verifySchemaConstraints",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:verifySchemaConstraints",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1232
    ],
    "arguments": [
      "verifySession"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:verified->self:Variable:src/neo4j/importer.ts:verifySession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:verified",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verifySession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1256
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:verifySession.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:verifySession.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1284
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:verifySession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verifySession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1284
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:verified",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verified",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1325
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1345
    ],
    "arguments": [
      "'Schema constraints verification failed. Proceeding with import anyway.'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3040
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationNeeded"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.isMigrationNeeded",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.isMigrationNeeded",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1631
    ],
    "arguments": [
      "migrationSession"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:migrationNeeded->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1665
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1705
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2980
    ],
    "arguments": [
      "'Import complete'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.createBackup",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.createBackup",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1930
    ],
    "arguments": [
      "migrationSession",
      "'pre_migration_backup'"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2255
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:migrationResults",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationResults"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.migrateAllToCurrentVersion",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.migrateAllToCurrentVersion",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2097
    ],
    "arguments": [
      "migrationSession"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:migrationResults->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:migrationResults",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2140
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationResults",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationResults",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2203
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:migrationSession.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:migrationSession.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2255
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2647
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:codebaseId->self:Parameter:src/neo4j/importer.ts:import:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2394
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:codebaseSession",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseSession"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:createCodebaseSchema",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:createCodebaseSchema",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2480
    ],
    "arguments": [
      "codebaseSession",
      "codebaseId"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:codebaseSession",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseSession",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2545
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2518
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:codebaseSession.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:codebaseSession.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2545
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.importNodes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importNodes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2630
    ],
    "arguments": [
      "nodes"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.importRelationships",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importRelationships",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2715
    ],
    "arguments": [
      "relationships"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2740
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.updateNodeProperties",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.updateNodeProperties",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2824
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.linkInsightsToCodebases",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.linkInsightsToCodebases",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2935
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3040
    ],
    "arguments": [
      "'Error importing to Neo4j:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3103
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.driver.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3138
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:batches",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batches"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:Math.ceil",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.ceil",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3360
    ],
    "arguments": [
      "nodes.length / batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batches->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3370
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batches->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6800
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3716
    ],
    "arguments": [
      "`Imported nodes batch ${i + 1}/${batches}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3716
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3431
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:batches",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3761
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3752
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:start",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:start"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:start->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7830
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:start->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7834
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:end",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:end"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:Math.min",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.min",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3574
    ],
    "arguments": [
      "start + batchSize",
      "nodes.length"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:end->self:Variable:src/neo4j/importer.ts:start",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7872
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:end->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7880
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:end->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3602
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:batch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batch"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:nodes.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:nodes.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3637
    ],
    "arguments": [
      "start",
      "end"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batch->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3637
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batch->self:Variable:src/neo4j/importer.ts:start",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7954
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batch->self:Variable:src/neo4j/importer.ts:end",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7961
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:this.importNodeBatch",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importNodeBatch",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3681
    ],
    "arguments": [
      "batch"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3702
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3922
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:createNodesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5968
    ],
    "arguments": [
      "`\n            MATCH (n:Node {nodeId: $nodeId})\n            WITH n, $labels AS labels\n            CALL apoc.create.addLabels(n, labels) YIELD node\n            RETURN node\n          `",
      "{\n            nodeId: node.nodeId,\n            labels: prepared._labels\n          }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:createNodesResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4094
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:nodes.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:nodes.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4243
    ],
    "arguments": [
      "node => node.nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:createNodesResult->self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4243
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6443
    ],
    "arguments": [
      "`Imported ${processedCount} nodes`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6443
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4320
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4320
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:createNodesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4320
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:processedCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedCount"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6389
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:this.prepareNodeForImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareNodeForImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4535
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:prepared->self:Variable:src/neo4j/importer.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4561
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6218
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5524
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:value",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:value"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9797
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14450
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:value",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5443
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6185
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5917
    ],
    "arguments": [
      "prepared._labels"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5832
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5428
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:e",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:e",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5556
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6520
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:processedCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6467
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6520
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Math.ceil",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.ceil",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6767
    ],
    "arguments": [
      "relationships.length / batchSize"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batches->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6777
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8029
    ],
    "arguments": [
      "`Imported relationships batch ${i + 1}/${batches}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8029
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7034
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:batches",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8082
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:typeCounts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:typeCounts"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:typeCounts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:typeCounts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7261
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7092
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7246
    ],
    "arguments": [
      "typeCounts"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:defineVueComponentRel"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:relationships.find",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:relationships.find",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7432
    ],
    "arguments": [
      "rel => rel.type === 'DEFINES_VUE_COMPONENT'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:defineVueComponentRel->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7432
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7628
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7613
    ],
    "arguments": [
      "defineVueComponentRel",
      "null",
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8073
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Math.min",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.min",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7863
    ],
    "arguments": [
      "start + batchSize",
      "relationships.length"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:end->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7891
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:relationships.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:relationships.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7934
    ],
    "arguments": [
      "start",
      "end"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:batch->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7934
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:this.importRelationshipBatch",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importRelationshipBatch",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7986
    ],
    "arguments": [
      "batch"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:batch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8015
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8275
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relationshipsByType"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.groupRelationshipsByType",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.groupRelationshipsByType",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8411
    ],
    "arguments": [
      "relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:relationshipsByType->self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8441
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:totalCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:totalCount"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8577
    ],
    "arguments": [
      "relationshipsByType"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8592
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15988
    ],
    "arguments": [
      "`Imported ${totalCount} relationships in total`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15988
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15178
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:resolvedRels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:resolvedRels"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:rels.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:rels.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9135
    ],
    "arguments": [
      "rel =>\n          rel.unresolvedComponent || rel.unresolvedComposable || rel.unresolvedImport"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:unresolvedRels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:unresolvedRels"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:count",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:count"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:resolvedRels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:resolvedRels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11572
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.prepareRelationshipForImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareRelationshipForImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9489
    ],
    "arguments": [
      "rel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:prepared->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9523
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9742
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:value",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15193
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15286
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15606
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14929
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10545
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:e",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:e",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15336
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15431
    ],
    "arguments": [
      "createRelQuery",
      "{\n                startNodeId: rel.startNodeId,\n                endNodeId: `${rel.codebaseId}:${nodeType}:${nodeName}`,\n                relNodeId: rel.nodeId,\n                properties: safeRelProps\n              }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28466
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11318
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11362
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11402
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:count",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:count",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15932
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15759
    ],
    "arguments": [
      "`Error processing unresolved relationship:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15818
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:unresolvedRels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:unresolvedRels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12163
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:nodeName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:nodeName->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12352
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15555
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodeQuery"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:createNodeQuery->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12825
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13270
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13219
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:nodeName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13140
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13381
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16078
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13470
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:nodeName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15567
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13586
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:createRelQuery",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createRelQuery"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:relProperties",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relProperties"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.prepareRelationshipPropertiesForImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareRelationshipPropertiesForImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14170
    ],
    "arguments": [
      "rel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:relProperties->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14214
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:safeRelProps",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeRelProps"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:relProperties",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14389
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:relProperties",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14436
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeRelProps",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeRelProps",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15646
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:createRelQuery",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createRelQuery",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15443
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:totalCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:totalCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16012
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16078
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:groups",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:groups"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16461
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:groups",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:groups",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16913
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16667
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:groups[rel.type].push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:groups[rel.type].push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16554
    ],
    "arguments": [
      "rel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:typeCounts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:typeCounts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16834
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16855
    ],
    "arguments": [
      "`  ${type}: ${count}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16855
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16819
    ],
    "arguments": [
      "typeCounts"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:{ labels: originalLabels, ...nodeProperties }",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:{ labels: originalLabels, ...nodeProperties }"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:labels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:labels"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:processedProperties",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedProperties"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17331
    ],
    "arguments": [
      "nodeProperties"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18354
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:labels.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:labels.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17993
    ],
    "arguments": [
      "'Codebase'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:labels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:labels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17993
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:labels.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:labels.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17626
    ],
    "arguments": [
      "'CodeElement'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17757
    ],
    "arguments": [
      "`Node ${node.nodeId} does not have a codebaseId. Using 'default' as fallback.`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18597
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18597
    ],
    "arguments": [
      "`Fixed node ID from ${originalNodeId} to ${nodeProperties.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:node.nodeId.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:node.nodeId.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18354
    ],
    "arguments": [
      "`${nodeProperties.codebaseId}:`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:originalNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:originalNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:originalNodeId->self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:originalNodeId",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18498
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:originalNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:originalNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18631
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:nodeWithVersion->self:Variable:src/neo4j/importer.ts:processedProperties",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedProperties",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18754
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:nodeWithVersion->self:Variable:src/neo4j/importer.ts:labels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:labels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18828
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19108
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19060
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:relForImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relForImport"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:relForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19360
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:{ type, startNodeId, endNodeId, unresolvedComponent, unresolvedComposable, unresolvedImport, ...properties }",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:{ type, startNodeId, endNodeId, unresolvedComponent, unresolvedComposable, unresolvedImport, ...properties }"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:SCHEMA_METADATA.relationshipTypes.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SCHEMA_METADATA.relationshipTypes.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19612
    ],
    "arguments": [
      "type"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19890
    ],
    "arguments": [
      "`Relationship ${relationship.nodeId} does not have a codebaseId. Using 'default' as fallback.`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19890
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19919
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21118
    ],
    "arguments": [
      "properties"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:propertiesWithVersion->self:Variable:src/neo4j/importer.ts:processedProperties",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedProperties",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22991
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21779
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21571
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:relForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22062
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22344
    ],
    "arguments": [
      "`Relationship ${relationship.nodeId} does not have a codebaseId. Using 'default' as fallback.`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22344
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22373
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22845
    ],
    "arguments": [
      "properties"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23346
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23298
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24622
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:mapObj",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:mapObj"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:obj.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:obj.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23747
    ],
    "arguments": [
      "(value, key) => {\n        mapObj[String(key)] = this.convertComplexPropertiesToPrimitives(value);\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:mapObj",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:mapObj",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23895
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23799
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:value",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:value",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23849
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23880
    ],
    "arguments": [
      "mapObj"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.from(obj).map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.from(obj).map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23987
    ],
    "arguments": [
      "item => this.convertComplexPropertiesToPrimitives(item)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.from",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.from",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23987
    ],
    "arguments": [
      "obj"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:item",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:item",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24213
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24080
    ],
    "arguments": [
      "obj"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:obj.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:obj.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24155
    ],
    "arguments": [
      "item => this.convertComplexPropertiesToPrimitives(item)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Object.prototype.hasOwnProperty.call",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.prototype.hasOwnProperty.call",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24397
    ],
    "arguments": [
      "obj",
      "key"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24517
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24555
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24471
    ],
    "arguments": [
      "obj[key]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25309
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24875
    ],
    "arguments": [
      "`Found Map object at ${path}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24875
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25322
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24954
    ],
    "arguments": [
      "obj"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25135
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:this.checkForMapObjects",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.checkForMapObjects",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25285
    ],
    "arguments": [
      "obj[key]",
      "`${path}.${key}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25330
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25502
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27619
    ],
    "arguments": [
      "`Updated crossCodebaseImportCount for ${crossImportNodesUpdated} nodes`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27619
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:codebaseResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      26855
    ],
    "arguments": [
      "`\n        MATCH (f:File {codebaseId: $codebaseId})-[r:IMPORTS]->(target)\n        WHERE target.codebaseId <> $codebaseId\n        WITH f, count(r) AS crossImportCount\n        SET f.crossCodebaseImportCount = crossImportCount\n        RETURN count(f) AS updatedNodes\n      `",
      "{ codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:codebaseResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25748
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:codebaseId->self:Variable:src/neo4j/importer.ts:codebaseResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25929
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:codebaseResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:codebaseResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25929
    ],
    "arguments": [
      "'codebaseId'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26061
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:importCountResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importCountResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:importCountResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:importCountResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26189
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:exportCountResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportCountResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:exportCountResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:exportCountResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26527
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26855
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importNodesUpdated"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:importCountResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:importCountResult.records[0].get('updatedNodes').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27196
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:importCountResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:importCountResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27196
    ],
    "arguments": [
      "'updatedNodes'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:importNodesUpdated->self:Variable:src/neo4j/importer.ts:importCountResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importCountResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27196
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportNodesUpdated"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get('updatedNodes').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27290
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27290
    ],
    "arguments": [
      "'updatedNodes'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:exportNodesUpdated->self:Variable:src/neo4j/importer.ts:exportCountResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportCountResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27290
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get('updatedNodes').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27389
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27389
    ],
    "arguments": [
      "'updatedNodes'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated->self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27389
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27510
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27584
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27671
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27733
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27733
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.getLabelsParam",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.getLabelsParam"
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession->self:Method:src/neo4j/importer.ts:this.driver.session",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.session",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27998
    ],
    "arguments": [
      "{\n      database: this.config.database\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29891
    ],
    "arguments": [
      "'Finished linking Insight nodes to Codebase nodes'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29984
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28317
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29383
    ],
    "arguments": [
      "`\n            MATCH (i:Insight {nodeId: $insightId})\n            SET i.codebaseId = $codebaseId\n            WITH i\n            MATCH (c:Codebase {nodeId: $codebaseId})\n            MERGE (i)-[:BELONGS_TO]->(c)\n            RETURN i, c\n          `",
      "{ insightId, codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28794
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:insightId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:insightId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28888
    ],
    "arguments": [
      "'codebaseId'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:insightId->self:Variable:src/neo4j/importer.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28838
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:codebaseId->self:Variable:src/neo4j/importer.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28888
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29745
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:insightId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29846
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts->self:Variable:src/neo4j/importer.ts:parts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/importer.ts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:parts"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:insightId.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:insightId.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29072
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/importer.ts:parts->self:Variable:src/neo4j/importer.ts:insightId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:parts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29072
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29153
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30084
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29787
    ],
    "arguments": [
      "`Could not determine codebaseId for Insight ${insightId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29984
    ],
    "arguments": [
      "'Error linking Insight nodes to Codebase nodes:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30048
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30084
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/importer.ts:Neo4jImporter->self:Method:src/neo4j/importer.ts:Neo4jImporter.close",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/importer.ts:Neo4jImporter",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.close"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/importer.ts:Neo4jImporter.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/importer.ts:Neo4jImporter.close->self:Method:src/neo4j/importer.ts:this.driver.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.close",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30204
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Package:neo4j-driver",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Package:neo4j-driver",
    "imports": [
      "neo4j",
      "Driver",
      "Session",
      "Neo4jRecord"
    ],
    "importCount": 4,
    "hasDefaultImport": true,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "neo4j-driver",
    "isRelative": false,
    "isResolved": true,
    "packageName": "neo4j-driver"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryResult->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryResult.records",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryResult.records",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryResult->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryResult.summary",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryResult.summary",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.uri",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.uri",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.username",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.username",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.password",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.password",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.database",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.database",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.defaultTimeout",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.defaultTimeout",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig->self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.defaultCodebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/query-executor.ts:QueryExecutorConfig.defaultCodebaseId",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Property:src/neo4j/query-executor.ts:QueryExecutor.driver",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Property:src/neo4j/query-executor.ts:QueryExecutor.driver"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Property:src/neo4j/query-executor.ts:QueryExecutor.config",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Property:src/neo4j/query-executor.ts:QueryExecutor.config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/neo4j/query-executor.ts:QueryExecutor.config->self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/neo4j/query-executor.ts:QueryExecutor.config",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "index": 2,
    "isOptional": true,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "QueryResult"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1686
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:startTime",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:startTime"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:Date.now",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Date.now",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3073
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:txConfig",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:txConfig->self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1829
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1937
    ],
    "arguments": [
      "cypher",
      "parameters",
      "txConfig"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1937
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1949
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1957
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:txConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1969
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:executionTime",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:executionTime"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:executionTime->self:Variable:src/neo4j/query-executor.ts:startTime",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:executionTime",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:startTime",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5709
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:records",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:records"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:result.records.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.records.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2150
    ],
    "arguments": [
      "record => this.recordToObject(record)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:records->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4127
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:stats",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:stats"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2270
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:stats->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4259
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:records",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2411
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:stats",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2836
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2925
    ],
    "arguments": [
      "'Error executing Cypher query:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2925
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3183
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3246
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3310
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3310
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "index": 1,
    "isOptional": true,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "QueryResult[]"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "referenceType": "variable",
    "isArray": true,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:this.getSession",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.getSession",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3572
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:Date.now",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Date.now",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5696
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:txConfig->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3715
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:results",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:results"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/neo4j/query-executor.ts:results->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:results",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "referenceType": "variable",
    "isArray": true,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:tx",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:tx"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:session.beginTransaction",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.beginTransaction",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3867
    ],
    "arguments": [
      "txConfig"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:tx->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3867
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:tx->self:Variable:src/neo4j/query-executor.ts:txConfig",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3892
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3950
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3992
    ],
    "arguments": [
      "query.cypher",
      "query.parameters || {}"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3992
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:query",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:query",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4013
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:result.records.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.records.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4127
    ],
    "arguments": [
      "record => this.recordToObject(record)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4259
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:results.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:results.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4315
    ],
    "arguments": [
      "{\n            records,\n            summary: {\n              executionTime: 0, // Will be updated after transaction completes\n              recordCount: records.length,\n              success: true,\n              stats: {\n                nodesCreated: stats.nodesCreated || 0,\n                nodesDeleted: stats.nodesDeleted || 0,\n                relationshipsCreated: stats.relationshipsCreated || 0,\n                relationshipsDeleted: stats.relationshipsDeleted || 0,\n                propertiesSet: stats.propertiesSet || 0,\n                labelsAdded: stats.labelsAdded || 0,\n                labelsRemoved: stats.labelsRemoved || 0\n              }\n            }\n          }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:results",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:results",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5377
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:records",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4480
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:stats",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4941
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.commit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.commit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5077
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5460
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5297
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:executionTime",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:executionTime",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5328
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.rollback",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.rollback",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5460
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5806
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5537
    ],
    "arguments": [
      "'Error executing Cypher transaction:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5537
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:session.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5907
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5907
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6119
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:value",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:value"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Method:src/neo4j/query-executor.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6154
    ],
    "arguments": [
      "key"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:value->self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6154
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:value->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6165
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6255
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6323
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6262
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:value",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6285
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7952
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6565
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7827
    ],
    "arguments": [
      "value[key]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.identity.toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.identity.toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6899
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isRelationship",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isRelationship",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6787
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.start.toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.start.toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6975
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.end.toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.end.toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7019
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isPath",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isPath",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7093
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.segments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.segments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7149
    ],
    "arguments": [
      "segment => ({\n          start: this.convertNeo4jValue(segment.start),\n          relationship: this.convertNeo4jValue(segment.relationship),\n          end: this.convertNeo4jValue(segment.end)\n        })"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:segment",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:segment",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7346
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7550
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7587
    ],
    "arguments": [
      "item => this.convertNeo4jValue(item)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:item",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:item",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7628
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:Object.keys",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Object.keys",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7783
    ],
    "arguments": [
      "value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7891
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7856
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession->self:Method:src/neo4j/query-executor.ts:this.driver.session",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.driver.session",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8048
    ],
    "arguments": [
      "{\n      database: this.config.database\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.close",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.close"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.close->self:Method:src/neo4j/query-executor.ts:this.driver.close",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.close",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.driver.close",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8212
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "index": 3,
    "isOptional": true,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "QueryResult"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8639
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8692
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:hasWhere",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:hasWhere"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:/\\bWHERE\\b/i.test",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:/\\bWHERE\\b/i.test",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8862
    ],
    "arguments": [
      "cypher"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:hasWhere->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:hasWhere",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8880
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:scopedCypher"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:scopedCypher->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8971
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10327
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:scopedCypher.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:scopedCypher.replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9135
    ],
    "arguments": [
      "/MATCH\\s*\\(([^)]+)\\)/gi",
      "(match, nodePattern) => {\n        // Check if the node pattern already has a codebaseId filter\n        if (nodePattern.includes('codebaseId') || nodePattern.includes('nodeId')) {\n          return match;\n        }\n        \n        // Check if the node pattern has properties\n        if (nodePattern.includes('{')) {\n          // Add codebaseId to existing properties\n          return match.replace(/{([^}]*)}/g, '{$1, codebaseId: $codebaseId}');\n        } else {\n          // Add codebaseId as a new property\n          const parts = nodePattern.split(':');\n          const varName = parts[0].trim();\n          const labels = parts.slice(1).join(':');\n          \n          if (labels) {\n            return `MATCH (${varName}:${labels} {codebaseId: $codebaseId})`;\n          } else {\n            return `MATCH (${varName} {codebaseId: $codebaseId})`;\n          }\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9480
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:match",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:match",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9577
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:parts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:parts"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:parts->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9726
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:varName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:varName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:varName->self:Variable:src/neo4j/query-executor.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:varName",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9776
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts->self:Variable:src/neo4j/query-executor.ts:labels",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/query-executor.ts",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:labels"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/query-executor.ts:labels->self:Variable:src/neo4j/query-executor.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:labels",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9818
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:labels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:labels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9919
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:varName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:varName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10004
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10213
    ],
    "arguments": [
      "`Scoped query: ${scopedCypher}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10213
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10148
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10198
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10309
    ],
    "arguments": [
      "scopedCypher",
      "paramsWithCodebase",
      "timeout"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10341
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10361
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/query-executor.ts:QueryExecutor->self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/query-executor.ts:QueryExecutor",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "index": 2,
    "isOptional": true,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "QueryResult"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10718
    ],
    "arguments": [
      "'Executing cross-codebase query. This may have performance implications.'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10811
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10811
    ],
    "arguments": [
      "`Cross-codebase query: ${cypher}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10939
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10921
    ],
    "arguments": [
      "cypher",
      "parameters",
      "timeout"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10947
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10959
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Package:neo4j-driver",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Package:neo4j-driver",
    "imports": [
      "Session"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "neo4j-driver",
    "isRelative": false,
    "isResolved": true,
    "packageName": "neo4j-driver"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "SCHEMA_METADATA"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1822
    ],
    "arguments": [
      "'Schema constraints and indexes created successfully'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1914
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:query",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      17
    ],
    "referenceLocationColumns": [
      60
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1332
    ],
    "arguments": [
      "query"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1332
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:query",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1344
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      48
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:index",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:index",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      250
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:index",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:index",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      361
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:proceduresResult->self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      531
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      928
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      694
    ],
    "arguments": [
      "'available'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      694
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1690
    ],
    "arguments": [
      "\"Full-text index feature is not available in this Neo4j instance. Skipping full-text index creation.\""
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1996
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1213
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map(label => `'${label}'`).join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map(label => `'${label}'`).join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1142
    ],
    "arguments": [
      "', '"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1142
    ],
    "arguments": [
      "label => `'${label}'`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map(prop => `'${prop}'`).join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map(prop => `'${prop}'`).join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1213
    ],
    "arguments": [
      "', '"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1213
    ],
    "arguments": [
      "prop => `'${prop}'`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1626
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1420
    ],
    "arguments": [
      "', '"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1449
    ],
    "arguments": [
      "', '"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1914
    ],
    "arguments": [
      "'Error creating schema constraints and indexes:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3389
    ],
    "arguments": [
      "'Schema constraints and indexes dropped successfully'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3481
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3081
    ],
    "arguments": [
      "`CALL db.index.fulltext.drop('${ftIndex.name}')`"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:constraintsResult->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2318
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2376
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:name",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2802
    ],
    "arguments": [
      "'type'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:name->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6641
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3081
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2931
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2611
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2665
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:record.get('type').includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get('type').includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2802
    ],
    "arguments": [
      "'FULLTEXT'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2802
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3339
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3283
    ],
    "arguments": [
      "`Warning: Could not drop full-text index ${ftIndex.name}: ${error}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3563
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3481
    ],
    "arguments": [
      "'Error dropping schema constraints and indexes:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6040
    ],
    "arguments": [
      "`Schema for codebase ${codebaseId} created successfully`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6135
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6187
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5319
    ],
    "arguments": [
      "`\n        CREATE INDEX relationship_target_codebase IF NOT EXISTS\n        FOR ()-[r]-()\n        ON (r.targetCodebaseId)\n      `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5319
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4211
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:nodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:nodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4400
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5663
    ],
    "arguments": [
      "`Warning: Could not create relationship indexes: ${error}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6220
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6135
    ],
    "arguments": [
      "`Error creating schema for codebase ${codebaseId}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "void"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7501
    ],
    "arguments": [
      "`Schema for codebase ${codebaseId} dropped successfully`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7596
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7648
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7183
    ],
    "arguments": [
      "`\n      MATCH (n:Node {codebaseId: $codebaseId})\n      DETACH DELETE n\n      RETURN count(n) as deletedCount\n    `",
      "{ codebaseId }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6538
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6597
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:record.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6892
    ],
    "arguments": [
      "'populationPercent'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6731
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:labelsAndProperties.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:labelsAndProperties.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6836
    ],
    "arguments": [
      "'codebaseId'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6836
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6892
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6992
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7064
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deleteResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:deleteResult->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7183
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deletedCount"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get('deletedCount').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get('deletedCount').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7358
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7358
    ],
    "arguments": [
      "'deletedCount'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:deletedCount->self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7358
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7441
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7596
    ],
    "arguments": [
      "`Error dropping schema for codebase ${codebaseId}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7681
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "boolean"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11910
    ],
    "arguments": [
      "'Schema constraints and indexes verified successfully'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12020
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10979
    ],
    "arguments": [
      "\"CALL dbms.procedures() YIELD name WHERE name = 'db.index.fulltext.createNodeIndex' RETURN count(*) > 0 as available\""
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:constraintsResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8006
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8086
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:sampleRecord"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:sampleRecord->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8153
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:Object.keys",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:Object.keys",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8240
    ],
    "arguments": [
      "sampleRecord.toObject()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:sampleRecord.toObject",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:sampleRecord.toObject",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8326
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8326
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:constraintsResult.records.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:constraintsResult.records.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8387
    ],
    "arguments": [
      "record => ({\n      name: record.get('name'),\n      label: record.get('labelsOrTypes'),\n      property: record.get('properties'),\n      type: record.get('type')\n    })"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:constraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8387
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8630
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8702
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexes"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:indexesResult.records.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:indexesResult.records.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8751
    ],
    "arguments": [
      "record => ({\n      name: record.get('name'),\n      label: record.get('labelsOrTypes'),\n      property: record.get('properties'),\n      type: record.get('type')\n    })"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:indexes->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8751
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10364
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:found",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:constraints.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:constraints.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9269
    ],
    "arguments": [
      "constraint => {\n        // Convert arrays to strings for comparison if needed\n        const constraintLabel = Array.isArray(constraint.label) ? constraint.label[0] : constraint.label;\n        const constraintProperty = Array.isArray(constraint.property) ? constraint.property[0] : constraint.property;\n        \n        // Check if the constraint matches what we're looking for\n        const labelMatch = constraintLabel === requiredConstraint.label;\n        const propertyMatch = constraintProperty === requiredConstraint.property;\n        \n        // For type, be more specific - check for exact match with \"UNIQUENESS\"\n        const typeMatch = constraint.type === requiredConstraint.type;\n        \n        if (labelMatch && propertyMatch) {\n          console.log(`Found potential match: ${constraintLabel}.${constraintProperty} with type ${constraint.type}`);\n        }\n        \n        return labelMatch && propertyMatch && typeMatch;\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9269
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintLabel"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintProperty"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:labelMatch->self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9690
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:labelMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9710
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:propertyMatch->self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9766
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:propertyMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9789
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts->self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-constraints.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:typeMatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:typeMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9953
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10183
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10197
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10040
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10078
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10097
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10214
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:found",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11651
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11797
    ],
    "arguments": [
      "\"Full-text index feature is not available. Skipping full-text index verification.\""
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:indexes.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:indexes.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11505
    ],
    "arguments": [
      "index =>\n          index.name === requiredFTIndex.name &&\n          index.type.includes('FULLTEXT')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11505
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10648
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10771
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:proceduresResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10979
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11381
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11142
    ],
    "arguments": [
      "'available'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11142
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12085
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11552
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11711
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12020
    ],
    "arguments": [
      "'Error verifying schema constraints and indexes:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Package:neo4j-driver",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Package:neo4j-driver",
    "imports": [
      "Session"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "neo4j-driver",
    "isRelative": false,
    "isResolved": true,
    "packageName": "neo4j-driver"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "SCHEMA_VERSION"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig->self:InterfaceProperty:src/neo4j/schema-migration.ts:SchemaMigrationConfig.autoMigrate",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:SchemaMigrationConfig.autoMigrate",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig->self:InterfaceProperty:src/neo4j/schema-migration.ts:SchemaMigrationConfig.backupBeforeMigration",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:SchemaMigrationConfig",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:SchemaMigrationConfig.backupBeforeMigration",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:MigrationResult->self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.success",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.success",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:MigrationResult->self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.nodesMigrated",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.nodesMigrated",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:MigrationResult->self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.relationshipsMigrated",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.relationshipsMigrated",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/neo4j/schema-migration.ts:MigrationResult->self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.error",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "endNodeId": "self:InterfaceProperty:src/neo4j/schema-migration.ts:MigrationResult.error",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration"
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/schema-migration.ts:SchemaMigration->self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "boolean"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      301
    ],
    "arguments": [
      "`\n        MATCH (n)\n        WHERE n._schemaVersion IS NOT NULL AND n._schemaVersion <> $currentVersion\n        RETURN count(n) AS count\n      `",
      "{ currentVersion: SCHEMA_VERSION }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      301
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:count",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:count"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:result.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      522
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:result.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      522
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:count->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:count",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      522
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:count",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:count",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      578
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      617
    ],
    "arguments": [
      "'Error checking if migration is needed:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      617
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      673
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/schema-migration.ts:SchemaMigration->self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "string[]"
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      892
    ],
    "arguments": [
      "`\n        MATCH (n)\n        WHERE n._schemaVersion IS NOT NULL\n        RETURN DISTINCT n._schemaVersion AS version\n      `"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      892
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:result.records.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1049
    ],
    "arguments": [
      "record => record.get('version')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1049
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:record",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:record",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1078
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1130
    ],
    "arguments": [
      "'Error getting current schema versions:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1130
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1186
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/schema-migration.ts:SchemaMigration->self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "MigrationResult"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4323
    ],
    "arguments": [
      "`Migration successful: ${nodesMigrated} nodes and ${relationshipsMigrated} relationships migrated`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4706
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1780
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1807
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:session.beginTransaction",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.beginTransaction",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1596
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:tx->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1596
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:nodesMigrated",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodesMigrated"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3896
    ],
    "arguments": [
      "`\n            MATCH ()-[r]->()\n            WHERE r._schemaVersion = $fromVersion\n            SET r._schemaVersion = $toVersion, r.updatedAt = datetime()\n            RETURN count(r) AS count\n          `",
      "{ fromVersion, toVersion }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2001
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodesMigrated",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodesMigrated",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4360
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2434
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2434
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2434
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:relResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:relResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:relResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3896
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4387
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4180
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4180
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:relResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4180
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3004
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3274
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3274
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3274
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeResult"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:nodeResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3486
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get('count').toNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3755
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3755
    ],
    "arguments": [
      "'count'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3755
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.commit",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.commit",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4293
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4629
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.rollback",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.rollback",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4629
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4876
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4706
    ],
    "arguments": [
      "'Error migrating schema:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/schema-migration.ts:SchemaMigration->self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "MigrationResult[]"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "referenceType": "variable",
    "isArray": true,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:versions",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:versions"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:this.getCurrentVersions",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:this.getCurrentVersions",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5123
    ],
    "arguments": [
      "session"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:versions->self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:versions",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5147
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:results",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:results"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/neo4j/schema-migration.ts:results->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:results",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "referenceType": "variable",
    "isArray": true,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:versions",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:versions",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5231
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:version",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:version",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5253
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:this.migrateSchema",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:this.migrateSchema",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5312
    ],
    "arguments": [
      "session",
      "version"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5331
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:result->self:Variable:src/neo4j/schema-migration.ts:version",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:version",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5340
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:results.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:results.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5358
    ],
    "arguments": [
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:results",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:results",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5410
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5371
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/neo4j/schema-migration.ts:SchemaMigration->self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/neo4j/schema-migration.ts:SchemaMigration",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "boolean"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:timestamp",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:timestamp"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:new Date().toISOString().replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:new Date().toISOString().replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5749
    ],
    "arguments": [
      "/[:.]/g",
      "'-'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:new Date().toISOString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5749
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts->self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/neo4j/schema-migration.ts",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:backupFileName->self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5829
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/neo4j/schema-migration.ts:backupFileName->self:Variable:src/neo4j/schema-migration.ts:timestamp",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:timestamp",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5843
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5869
    ],
    "arguments": [
      "`Creating backup: ${backupFileName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6152
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5901
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5985
    ],
    "arguments": [
      "`\n        CALL apoc.export.json.all($backupFileName, {useTypes: true})\n      `",
      "{ backupFileName }"
    ],
    "isAsync": false,
    "isAwait": true,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5985
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6152
    ],
    "arguments": [
      "'Error creating backup:'",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6192
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Package:typescript",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Package:typescript",
    "imports": [
      "ts"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "typescript",
    "isRelative": false,
    "isResolved": true,
    "packageName": "typescript"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Interface:src/parser/package-parser.ts:PackageParserConfig"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/package-parser.ts:PackageParserConfig->self:InterfaceProperty:src/parser/package-parser.ts:PackageParserConfig.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "endNodeId": "self:InterfaceProperty:src/parser/package-parser.ts:PackageParserConfig.rootDir",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/package-parser.ts:PackageParserConfig->self:InterfaceProperty:src/parser/package-parser.ts:PackageParserConfig.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "endNodeId": "self:InterfaceProperty:src/parser/package-parser.ts:PackageParserConfig.codebaseId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Class:src/parser/package-parser.ts:PackageParser",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Class:src/parser/package-parser.ts:PackageParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/package-parser.ts:PackageParser->self:Property:src/parser/package-parser.ts:PackageParser.config",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/parser/package-parser.ts:PackageParser.config->self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.config",
    "endNodeId": "self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/package-parser.ts:PackageParser->self:Property:src/parser/package-parser.ts:PackageParser.packageCache",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.packageCache"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/parser/package-parser.ts:PackageParser.packageCache->self:Interface:node_modules/typescript/lib/lib.es2015.collection.d.ts:Map",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.packageCache",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es2015.collection.d.ts:Map",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "string",
      "any"
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:walk"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:entries",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entries"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:fs.readdirSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:fs.readdirSync",
    "callCount": 1,
    "callLocationLines": [
      20
    ],
    "callLocationColumns": [
      20
    ],
    "arguments": [
      "directory",
      "{ withFileTypes: true }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:entries",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entries",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      48
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:fullPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:fullPath"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:path.join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      84
    ],
    "arguments": [
      "directory",
      "entry.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:fullPath->self:Variable:src/parser/package-parser.ts:entry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:fullPath",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      105
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.isDirectory",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.isDirectory",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      139
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:entry",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entry",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      412
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.name.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.name.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      305
    ],
    "arguments": [
      "'.'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Function:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      347
    ],
    "arguments": [
      "fullPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      347
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:fullPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:fullPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      477
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.isFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.isFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      394
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:packageJsonFiles.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageJsonFiles.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      455
    ],
    "arguments": [
      "fullPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      455
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Function:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      522
    ],
    "arguments": [
      "this.config.rootDir"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Variable:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      522
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      560
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.has",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.has",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      740
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2295
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      788
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:content",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:content"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:fs.readFileSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      860
    ],
    "arguments": [
      "filePath",
      "'utf8'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:content->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:content",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      876
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageJson",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJson"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:JSON.parse",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.parse",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      921
    ],
    "arguments": [
      "content"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageJson->self:Variable:src/parser/package-parser.ts:content",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:content",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      932
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNode->self:Variable:src/parser/package-parser.ts:packageJson",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1713
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1156
    ],
    "arguments": [
      "path.dirname(filePath)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.dirname",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1170
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNode->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1277
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1209
    ],
    "arguments": [
      "this.config.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1487
    ],
    "arguments": [
      "packageJson.author"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:dependencies",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencies"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.parseDependencies",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.parseDependencies",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1923
    ],
    "arguments": [
      "packageJson",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:dependencies->self:Variable:src/parser/package-parser.ts:packageJson",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1946
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:dependencies->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1959
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:result"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:packageNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2016
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:dependencies",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2076
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2151
    ],
    "arguments": [
      "filePath",
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2212
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2248
    ],
    "arguments": [
      "`Error parsing package.json at ${filePath}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2248
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2308
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:nodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:nodes"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:relationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:relationships"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageName->self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2636
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2656
    ],
    "arguments": [
      "path.dirname(filePath)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.dirname",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2670
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageName->self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2683
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2758
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6152
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:Object.entries",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:Object.entries",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6137
    ],
    "arguments": [
      "packageJson.peerDependencies"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6818
    ],
    "arguments": [
      "{\n          nodeId: `${this.config.codebaseId}:Package:${depName}`,\n          name: depName,\n          version: depVersion as string,\n          path: `node_modules/${depName}`,\n          absolutePath: `node_modules/${depName}`,\n          isLocal: false,\n          codebaseId: this.config.codebaseId,\n          labels: ['Package', 'Node']\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6818
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7421
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7227
    ],
    "arguments": [
      "{\n          nodeId: `${this.config.codebaseId}:depends_on:${packageName}:${depName}`,\n          type: 'DEPENDS_ON',\n          startNodeId: packageNodeId,\n          endNodeId: depNodeId,\n          dependencyType: 'peer',\n          isStrong: true,\n          isWeak: false,\n          weight: 0.8,\n          codebaseId: this.config.codebaseId\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7227
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7306
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:packageNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7385
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": true,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.findPackageJsonFiles",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.findPackageJsonFiles",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8034
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8270
    ],
    "arguments": [
      "`Parsing package.json at ${filePath}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8270
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8244
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:allNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allNodes"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:allRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allRelationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8309
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.parsePackageJson",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.parsePackageJson",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8343
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8365
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:allNodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:allNodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8389
    ],
    "arguments": [
      "...result.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:allNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8811
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8452
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:allRelationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:allRelationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8427
    ],
    "arguments": [
      "...result.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:allRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8836
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:combinedNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:combinedNodes->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8600
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:combinedNodes->self:Variable:src/parser/package-parser.ts:allNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8618
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:combinedRelationships->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8667
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:combinedRelationships->self:Variable:src/parser/package-parser.ts:allRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8693
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.linkDependenciesToImports",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.linkDependenciesToImports",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8716
    ],
    "arguments": [
      "combinedNodes",
      "combinedRelationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:combinedNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8747
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8762
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyNodes"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:nodes.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9223
    ],
    "arguments": [
      "node =>\n      node.labels &&\n      node.labels.includes('Package') &&\n      !node.labels.includes('Dependency')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:dependencyNodes->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9048
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodes"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNodes->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9223
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:dependencyMap",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyMap"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11654
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10797
    ],
    "arguments": [
      "moduleName",
      "depNodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dependencyMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14713
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dep",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dep",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12231
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:builtInModules",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:builtInModules"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:builtInModules",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:builtInModules",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10042
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.has",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.has",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10071
    ],
    "arguments": [
      "moduleName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11153
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10170
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:depNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:depNode->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10271
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:depNode->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10298
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10942
    ],
    "arguments": [
      "{\n          nodeId: `${this.config.codebaseId}:Package:${moduleName}`,\n          name: moduleName,\n          version: 'built-in',\n          path: `node:${moduleName}`,\n          absolutePath: `node:${moduleName}`,\n          isLocal: false,\n          isBuiltIn: true,\n          codebaseId: this.config.codebaseId,\n          labels: ['Package', 'Node', 'BuiltInModule']\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10942
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:depNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10737
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14134
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:packageMap",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageMap"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11490
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:packageMap.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageMap.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11512
    ],
    "arguments": [
      "pkg.name",
      "pkg.nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11512
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:pkg",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:pkg",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11537
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:packageMap.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageMap.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11701
    ],
    "arguments": [
      "dep.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:packageMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11701
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:dep",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dep",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11716
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12003
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13922
    ],
    "arguments": [
      "{\n        nodeId: `${this.config.codebaseId}:imports_dependency:${rel.startNodeId}:${packageName}`,\n        type: 'IMPORTS_DEPENDENCY',\n        startNodeId: rel.startNodeId,\n        endNodeId: depNodeId,\n        imports: rel.imports || [],\n        importCount: rel.importCount || 1,\n        hasDefaultImport: rel.hasDefaultImport || false,\n        hasNamedImports: rel.hasNamedImports || false,\n        hasNamespaceImport: rel.hasNamespaceImport || false,\n        isTypeOnly: rel.isTypeOnly || false,\n        importPath: rel.importPath,\n        isRelative: false,\n        isResolved: true,\n        packageName: packageName,\n        codebaseId: this.config.codebaseId\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13922
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:importRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:importRelationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:relationships.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12411
    ],
    "arguments": [
      "rel =>\n      rel.type === 'IMPORTS_FROM_PACKAGE'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:importRelationships->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:importRelationships",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12411
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15161
    ],
    "arguments": [
      "`  ${rel.importPath} -> ${packageName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15161
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:importRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:importRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14927
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12758
    ],
    "arguments": [
      "importRelationships[0]",
      "null",
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15178
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:packageName->self:Variable:src/parser/package-parser.ts:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15023
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15199
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:this.extractPackageNameFromImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.extractPackageNameFromImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15092
    ],
    "arguments": [
      "rel.importPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13581
    ],
    "arguments": [
      "packageName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:dependencyMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13581
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13599
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14713
    ],
    "arguments": [
      "(nodeId, name) => {\n      console.log(`  ${name} -> ${nodeId}`);\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14778
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14789
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/package-parser.ts:PackageParser->self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/package-parser.ts:PackageParser",
    "endNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Method:src/parser/package-parser.ts:importPath.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Method:src/parser/package-parser.ts:importPath.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15429
    ],
    "arguments": [
      "'@'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15429
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts->self:Variable:src/parser/package-parser.ts:parts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/package-parser.ts",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:parts"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Method:src/parser/package-parser.ts:importPath.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Method:src/parser/package-parser.ts:importPath.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15691
    ],
    "arguments": [
      "'/'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/package-parser.ts:parts->self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:parts",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15691
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Variable:src/parser/package-parser.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15725
    ]
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Package:typescript",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Package:typescript",
    "imports": [
      "ts"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "typescript",
    "isRelative": false,
    "isResolved": true,
    "packageName": "typescript"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "Node",
      "Relationship",
      "File",
      "Class",
      "Interface",
      "TypeAlias",
      "Function",
      "Method",
      "Property",
      "Variable",
      "Parameter",
      "InterfaceProperty",
      "Imports",
      "ImportsFromPackage",
      "ExportsLocal",
      "HasParameter",
      "InterfaceHasProperty",
      "Extends",
      "InterfaceExtends",
      "Calls",
      "ReferencesType",
      "ReferencesVariable"
    ],
    "importCount": 22,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:ClassImplements->self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:ClassImplements->self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.isPartial",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.isPartial",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:ClassImplements->self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:ClassImplements.typeArguments",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Interface:src/parser/ts-parser.ts:TSParserOptions",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:TSParserOptions"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:TSParserOptions->self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:TSParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.rootDir",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:TSParserOptions->self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:TSParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.codebaseId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:TSParserOptions->self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.compilerOptions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:TSParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:TSParserOptions.compilerOptions",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:ParseResult->self:InterfaceProperty:src/parser/ts-parser.ts:ParseResult.nodes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:ParseResult.nodes",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/ts-parser.ts:ParseResult->self:InterfaceProperty:src/parser/ts-parser.ts:ParseResult.relationships",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "endNodeId": "self:InterfaceProperty:src/parser/ts-parser.ts:ParseResult.relationships",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Class:src/parser/ts-parser.ts:TSParser",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Class:src/parser/ts-parser.ts:TSParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/ts-parser.ts:TSParser->self:Property:src/parser/ts-parser.ts:TSParser.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.rootDir"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/ts-parser.ts:TSParser->self:Property:src/parser/ts-parser.ts:TSParser.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.codebaseId"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/ts-parser.ts:TSParser->self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions->self:Interface:node_modules/typescript/lib/typescript.d.ts:CompilerOptions",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CompilerOptions",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/ts-parser.ts:TSParser->self:Property:src/parser/ts-parser.ts:TSParser.program",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.program"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/parser/ts-parser.ts:TSParser.program->self:Interface:node_modules/typescript/lib/typescript.d.ts:Program",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.program",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Program",
    "referenceType": "property",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/ts-parser.ts:TSParser->self:Property:src/parser/ts-parser.ts:TSParser.typeChecker",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.typeChecker"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/parser/ts-parser.ts:TSParser.typeChecker->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeChecker",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.typeChecker",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeChecker",
    "referenceType": "property",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Method:src/parser/ts-parser.ts:ts.createProgram",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.createProgram",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1310
    ],
    "arguments": [
      "filePaths",
      "this.compilerOptions"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1327
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Method:src/parser/ts-parser.ts:this.program.getTypeChecker",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getTypeChecker",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1384
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1706
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:sourceFile->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1733
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2982
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1815
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:result"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/parser/ts-parser.ts:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2003
    ],
    "arguments": [
      "'File'",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:fileNode->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2416
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2113
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2194
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.extname(filePath).substring",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname(filePath).substring",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2236
    ],
    "arguments": [
      "1"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.extname",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2236
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2320
    ],
    "arguments": [
      "sourceFile.end"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:fileNode->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2549
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.getFileSize",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getFileSize",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2399
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.hasDefaultExport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.hasDefaultExport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2451
    ],
    "arguments": [
      "sourceFile"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.getDefaultExportExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getDefaultExportExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2517
    ],
    "arguments": [
      "sourceFile"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2887
    ],
    "arguments": [
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3029
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3002
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.visitNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.visitNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2967
    ],
    "arguments": [
      "sourceFile",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:visitNode:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:visitNode:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5320
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractClass",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractClass",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3410
    ],
    "arguments": [
      "node as ts.ClassDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5357
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5365
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractInterface",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractInterface",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3555
    ],
    "arguments": [
      "node as ts.InterfaceDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractTypeAlias",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractTypeAlias",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3708
    ],
    "arguments": [
      "node as ts.TypeAliasDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractFunction",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractFunction",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3860
    ],
    "arguments": [
      "node as ts.FunctionDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractMethod",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractMethod",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4008
    ],
    "arguments": [
      "node as ts.MethodDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractProperty",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractProperty",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4154
    ],
    "arguments": [
      "node as ts.PropertyDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractVariableStatement",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractVariableStatement",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4302
    ],
    "arguments": [
      "node as ts.VariableStatement",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4457
    ],
    "arguments": [
      "node as ts.ImportDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractExport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractExport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4601
    ],
    "arguments": [
      "node as ts.ExportDeclaration",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractFunctionCall",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractFunctionCall",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4812
    ],
    "arguments": [
      "node as ts.CallExpression",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractTypeReference",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractTypeReference",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4990
    ],
    "arguments": [
      "node as ts.TypeReferenceNode",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractVariableReference",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractVariableReference",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5173
    ],
    "arguments": [
      "node as ts.Identifier",
      "result",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5304
    ],
    "arguments": [
      "node",
      "child => this.visitNode(child, result, fileNode)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:child",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:child",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5350
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractClass:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractClass:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7221
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5623
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5623
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8661
    ],
    "arguments": [
      "'IMPLEMENTS'",
      "`${classNode.nodeId}->${interfaceNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:classNode->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5831
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:classNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5738
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5915
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5882
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:classNode->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6608
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5934
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6524
    ],
    "arguments": [
      "m =>\n        m.kind === ts.SyntaxKind.ExportKeyword &&\n        node.modifiers?.some(m2 => m2.kind === ts.SyntaxKind.DefaultKeyword)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6065
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.members.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6189
    ],
    "arguments": [
      "m => ts.isConstructorDeclaration(m)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.members.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6345
    ],
    "arguments": [
      "m => ts.isPropertyDeclaration(m)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6767
    ],
    "arguments": [
      "classNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9081
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7078
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9081
    ],
    "arguments": [
      "implementsRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7044
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:clause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:clause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8300
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:baseClassName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassName"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8350
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseClassName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7385
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8465
    ],
    "arguments": [
      "type.expression",
      "'Interface'",
      "fileNode.path"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseClassNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7519
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseClassNodeId->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7545
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7590
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:extendsRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7859
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7904
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8051
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8997
    ],
    "arguments": [
      "t => t.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:extendsRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8161
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:interfaceName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8350
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8488
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceNodeId->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8518
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8563
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:implementsRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8849
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8894
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8997
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:implementsRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9107
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractInterface:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractInterface:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9377
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9377
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11601
    ],
    "arguments": [
      "'INTERFACE_EXTENDS'",
      "`${interfaceNode.nodeId}->${baseInterfaceNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9601
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9504
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9685
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9652
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10309
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9704
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9739
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.members.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9939
    ],
    "arguments": [
      "m => ts.isPropertySignature(m)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.heritageClauses.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.heritageClauses.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10019
    ],
    "arguments": [
      "h => h.token === ts.SyntaxKind.ExtendsKeyword"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10225
    ],
    "arguments": [
      "m =>\n        m.kind === ts.SyntaxKind.ExportKeyword &&\n        node.modifiers?.some(m2 => m2.kind === ts.SyntaxKind.DefaultKeyword)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10411
    ],
    "arguments": [
      "interfaceNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12095
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10962
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12095
    ],
    "arguments": [
      "interfaceExtendsRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10952
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.members.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      10812
    ],
    "arguments": [
      "(member, index) => {\n      if (ts.isPropertySignature(member)) {\n        this.extractInterfaceProperty(member, result, fileNode, interfaceNode, index);\n      }\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11107
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:member",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:member",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10936
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:index",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:index",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10977
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:clause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:clause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11221
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:baseInterfaceName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceName"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11275
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseInterfaceName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11275
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11394
    ],
    "arguments": [
      "type.expression",
      "'Interface'",
      "fileNode.path"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11417
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11447
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11492
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11811
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11860
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12011
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12011
    ],
    "arguments": [
      "t => t.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12121
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "index": 3,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:index",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:index",
    "index": 4,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertySignature",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertySignature",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12462
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12536
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12536
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:typeNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12578
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:typeString",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeString"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeString->self:Variable:src/parser/ts-parser.ts:typeNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeString",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12623
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:typeNode.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:typeNode.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12623
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:description",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:description"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12675
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:description->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:description",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12696
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:isOptional",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isOptional"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:isOptional->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isOptional",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12728
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13376
    ],
    "arguments": [
      "'HAS_PROPERTY'",
      "`${interfaceNode.nodeId}->${propertyNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12894
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12911
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20305
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13238
    ],
    "arguments": [
      "propertyNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13652
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13256
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:relationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationship"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:relationship->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13546
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:relationship->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13585
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13652
    ],
    "arguments": [
      "relationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Variable:src/parser/ts-parser.ts:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13678
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13898
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13898
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14906
    ],
    "arguments": [
      "'DEFINES_TYPE_ALIAS'",
      "`${fileNode.nodeId}->${typeAliasNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14122
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14025
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14206
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14173
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14687
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14225
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.type.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14259
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14603
    ],
    "arguments": [
      "m =>\n        m.kind === ts.SyntaxKind.ExportKeyword &&\n        node.modifiers?.some(m2 => m2.kind === ts.SyntaxKind.DefaultKeyword)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14789
    ],
    "arguments": [
      "typeAliasNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15407
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15425
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14864
    ],
    "arguments": [
      "{\n      nodeId: this.generateNodeId('DEFINES_TYPE_ALIAS', `${fileNode.nodeId}->${typeAliasNode.nodeId}`),\n      codebaseId: this.codebaseId,\n      type: 'DEFINES_TYPE_ALIAS',\n      startNodeId: fileNode.nodeId,\n      endNodeId: typeAliasNode.nodeId\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15415
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:ts.isTypeLiteralNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeLiteralNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15225
    ],
    "arguments": [
      "node.type"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15266
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.type.members.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.members.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15266
    ],
    "arguments": [
      "(member, index) => {\n        if (ts.isPropertySignature(member)) {\n          this.extractInterfaceProperty(member, result, fileNode, typeAliasNode as any, index);\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:member",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:member",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15399
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:index",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:index",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15447
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractFunction:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractFunction:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17309
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15741
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15741
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:functionNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17016
    ],
    "arguments": [
      "'DEFINES_FUNCTION'",
      "`${fileNode.nodeId}->${functionNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:functionNode->self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15961
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:functionNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15865
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16045
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16012
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:functionNode->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16853
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16064
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16380
    ],
    "arguments": [
      "m =>\n        m.kind === ts.SyntaxKind.ExportKeyword &&\n        node.modifiers?.some(m2 => m2.kind === ts.SyntaxKind.DefaultKeyword)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16189
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16757
    ],
    "arguments": [
      "p => !!p.questionToken"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16900
    ],
    "arguments": [
      "functionNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17326
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Variable:src/parser/ts-parser.ts:functionNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17334
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16974
    ],
    "arguments": [
      "{\n      nodeId: this.generateNodeId('DEFINES_FUNCTION', `${fileNode.nodeId}->${functionNode.nodeId}`),\n      codebaseId: this.codebaseId,\n      type: 'DEFINES_FUNCTION',\n      startNodeId: fileNode.nodeId,\n      endNodeId: functionNode.nodeId\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17189
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17286
    ],
    "arguments": [
      "node.parameters",
      "result",
      "functionNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractMethod:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractMethod:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17593
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19191
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17766
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17649
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17840
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parentName->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50190
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17885
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17885
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:methodNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19378
    ],
    "arguments": [
      "'HAS_METHOD'",
      "`${parentNodeId}->${methodNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodNode->self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18111
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodNode->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18003
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18017
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18195
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18162
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodNode->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19028
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18214
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18521
    ],
    "arguments": [
      "m => m.kind === ts.SyntaxKind.AbstractKeyword"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18430
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18475
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18932
    ],
    "arguments": [
      "p => !!p.questionToken"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19075
    ],
    "arguments": [
      "methodNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19666
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:methodNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19674
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19213
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19255
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21179
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19336
    ],
    "arguments": [
      "{\n      nodeId: this.generateNodeId('HAS_METHOD', `${parentNodeId}->${methodNode.nodeId}`),\n      codebaseId: this.codebaseId,\n      type: 'HAS_METHOD',\n      startNodeId: parentNodeId,\n      endNodeId: methodNode.nodeId\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19534
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19626
    ],
    "arguments": [
      "node.parameters",
      "result",
      "methodNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19649
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractProperty:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractProperty:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19926
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19948
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20048
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20122
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20167
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20167
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21282
    ],
    "arguments": [
      "'HAS_PROPERTY'",
      "`${parentNodeId}->${propertyNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20401
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20291
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20485
    ],
    "arguments": [
      "node.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20452
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20913
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20504
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20815
    ],
    "arguments": [
      "m => m.kind === ts.SyntaxKind.ReadonlyKeyword"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20630
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.type.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20686
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.initializer.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.initializer.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20757
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21039
    ],
    "arguments": [
      "propertyNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21240
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21475
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21162
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21240
    ],
    "arguments": [
      "{\n      nodeId: this.generateNodeId('HAS_PROPERTY', `${parentNodeId}->${propertyNode.nodeId}`),\n      codebaseId: this.codebaseId,\n      type: 'HAS_PROPERTY',\n      startNodeId: parentNodeId,\n      endNodeId: propertyNode.nodeId\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21444
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21720
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21776
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36115
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:variableNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22607
    ],
    "arguments": [
      "'DEFINES_VARIABLE'",
      "`${fileNode.nodeId}->${variableNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNode->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22015
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21911
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22110
    ],
    "arguments": [
      "declaration.getEnd()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22068
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNode->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22406
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.getEnd",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getEnd",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22129
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNode->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22273
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.getVariableScope",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableScope",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22251
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.type.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.type.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22319
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.initializer.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.initializer.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22406
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22474
    ],
    "arguments": [
      "variableNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22563
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Variable:src/parser/ts-parser.ts:variableNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22822
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22563
    ],
    "arguments": [
      "{\n        nodeId: this.generateNodeId('DEFINES_VARIABLE', `${fileNode.nodeId}->${variableNode.nodeId}`),\n        codebaseId: this.codebaseId,\n        type: 'DEFINES_VARIABLE',\n        startNodeId: fileNode.nodeId,\n        endNodeId: variableNode.nodeId\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22786
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters->self:Interface:node_modules/typescript/lib/typescript.d.ts:NodeArray",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:NodeArray",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": true,
    "typeArguments": [
      "ts.ParameterDeclaration"
    ]
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters->self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractParameters:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Method:src/parser/ts-parser.ts:parameters.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parameters.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23078
    ],
    "arguments": [
      "(param, index) => {\n      const name = param.name.getText();\n      const paramNode: Parameter = {\n        nodeId: this.generateNodeId('Parameter', `${parent.file}:${parent.name}:${name}`),\n        codebaseId: this.codebaseId,\n        labels: ['Parameter'],\n        name,\n        file: parent.file,\n        startLine: this.getLineNumber(param.getStart()),\n        endLine: this.getLineNumber(param.getEnd()),\n        index,\n        isOptional: !!param.questionToken,\n        isRest: !!param.dotDotDotToken,\n        typeString: param.type ? param.type.getText() : undefined,\n        initializer: param.initializer ? param.initializer.getText() : undefined,\n        isParameterProperty: false, // Default value, should be updated for actual parameter properties\n        hasDecorators: false // Default value, should be updated if decorators are present\n      };\n      \n      result.nodes.push(paramNode);\n      \n      // Add HAS_PARAMETER relationship\n      const hasParamRel: HasParameter = {\n        nodeId: this.generateNodeId('HAS_PARAMETER', `${parent.nodeId}->${paramNode.nodeId}`),\n        codebaseId: this.codebaseId,\n        type: 'HAS_PARAMETER',\n        startNodeId: parent.nodeId,\n        endNodeId: paramNode.nodeId,\n        index,\n        isOptional: !!param.questionToken,\n        isRest: !!param.dotDotDotToken,\n        hasDefaultValue: !!param.initializer,\n        isDestructured: ts.isObjectBindingPattern(param.name) || ts.isArrayBindingPattern(param.name)\n      };\n      result.relationships.push(hasParamRel);\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23078
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23136
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:paramNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:paramNode->self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23382
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:paramNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23277
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:paramNode->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23711
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24585
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Variable:src/parser/ts-parser.ts:paramNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23987
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24272
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Variable:src/parser/ts-parser.ts:paramNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24306
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24558
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24611
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractImport:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractImport:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24836
    ],
    "arguments": [
      "/['\"]/g",
      "''"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24836
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:moduleSpecifier->self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24836
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importClause->self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24914
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25921
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefaultImport"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasDefaultImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25033
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamedImports"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasNamedImports->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25130
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:ts.isNamedImports",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamedImports",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25581
    ],
    "arguments": [
      "importClause.namedBindings"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamespaceImport"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:hasNamespaceImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25243
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:ts.isNamespaceImport",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamespaceImport",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25850
    ],
    "arguments": [
      "importClause.namedBindings"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:isTypeOnly",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isTypeOnly"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:isTypeOnly->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isTypeOnly",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25297
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:imports",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:imports"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25398
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:imports.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:imports.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25908
    ],
    "arguments": [
      "importClause.namedBindings.name.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:imports",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:imports",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25908
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:importClause.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:importClause.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25458
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25532
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:element.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:element.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25718
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:element",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:element",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25718
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25798
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:importClause.namedBindings.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:importClause.namedBindings.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25921
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      26104
    ],
    "arguments": [
      "'/'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:isPackageImport->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28941
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:relationshipType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:relationshipType->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29012
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29097
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27161
    ],
    "arguments": [
      "relationshipType",
      "`${fileNode.nodeId}->${targetNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29248
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27636
    ],
    "arguments": [
      "fileNode.path",
      "moduleSpecifier"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26412
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26459
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:importRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:relationshipType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27181
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importRel->self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27659
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27358
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:imports",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:imports",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27410
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27674
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27706
    ],
    "arguments": [
      "importRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27706
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:importRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27732
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractExport:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractExport:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27977
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:exportRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29409
    ],
    "arguments": [
      "relationshipType",
      "`${fileNode.nodeId}->${targetNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:exportRel->self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29618
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:exportRel->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29890
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:ts.isNamedExports",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamedExports",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29839
    ],
    "arguments": [
      "node.exportClause"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.exportClause.elements.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.exportClause.elements.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29890
    ],
    "arguments": [
      "e => e.name.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30080
    ],
    "arguments": [
      "exportRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30080
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Variable:src/parser/ts-parser.ts:exportRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30106
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28821
    ],
    "arguments": [
      "/['\"]/g",
      "''"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28821
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:moduleSpecifier->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28821
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28941
    ],
    "arguments": [
      "'/'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29210
    ],
    "arguments": [
      "fileNode.path",
      "moduleSpecifier"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29233
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:exportRel->self:Variable:src/parser/ts-parser.ts:relationshipType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29429
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:exportRel->self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29654
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile->self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefault"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30294
    ],
    "arguments": [
      "sourceFile",
      "node => {\n      if (\n        (ts.isExportAssignment(node) && !node.isExportEquals) ||\n        (ts.isFunctionDeclaration(node) && node.modifiers?.some(m =>\n          m.kind === ts.SyntaxKind.ExportKeyword\n        ) && node.modifiers?.some(m =>\n          m.kind === ts.SyntaxKind.DefaultKeyword\n        )) ||\n        (ts.isClassDeclaration(node) && node.modifiers?.some(m =>\n          m.kind === ts.SyntaxKind.ExportKeyword\n        ) && node.modifiers?.some(m =>\n          m.kind === ts.SyntaxKind.DefaultKeyword\n        ))\n      ) {\n        hasDefault = true;\n      }\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30310
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30757
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:m",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:m",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30793
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Variable:src/parser/ts-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefault",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30913
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile->self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31137
    ],
    "arguments": [
      "sourceFile",
      "node => {\n      if (ts.isExportAssignment(node) && !node.isExportEquals) {\n        expression = node.expression.getText();\n      }\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31153
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31261
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31320
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31566
    ],
    "arguments": [
      "this.program.getRootFileNames()[0]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31593
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31691
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31691
    ],
    "arguments": [
      "pos"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31732
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:jsDocComments"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:ts.getJSDocCommentsAndTags",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.getJSDocCommentsAndTags",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31893
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:jsDocComments->self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31920
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32011
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:jsDocComments.map(comment => comment.getText()).join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:jsDocComments.map(comment => comment.getText()).join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32011
    ],
    "arguments": [
      "'\\n'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:jsDocComments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:jsDocComments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32011
    ],
    "arguments": [
      "comment => comment.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Parameter:src/parser/ts-parser.ts:getJsDocComment:comment",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:comment",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32040
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVisibility:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVisibility:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32364
    ],
    "arguments": [
      "m => m.kind === ts.SyntaxKind.ProtectedKeyword"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32364
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Parameter:src/parser/ts-parser.ts:getVisibility:m",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:m",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32390
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVariableScope:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32815
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Method:src/parser/ts-parser.ts:ts.isSourceFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isSourceFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32712
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Method:src/parser/ts-parser.ts:ts.isFunctionLike",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionLike",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32797
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:absoluteFilePath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.isAbsolute",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.isAbsolute",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33132
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:absoluteFilePath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33210
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.resolve",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.resolve",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33297
    ],
    "arguments": [
      "dir",
      "importPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:dir",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:dir"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.dirname",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33242
    ],
    "arguments": [
      "absoluteFilePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:dir->self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:dir",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33255
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:resolvedPath->self:Variable:src/parser/ts-parser.ts:dir",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:dir",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33310
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:resolvedPath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33315
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:ext",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:ext"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.extname",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33402
    ],
    "arguments": [
      "resolvedPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:ext->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:ext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33415
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:ext",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:ext",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33541
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33767
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:tsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:tsPath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:resolvedPath.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:resolvedPath.replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33633
    ],
    "arguments": [
      "/\\.js$/",
      "'.ts'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:tsPath->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:tsPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33633
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:fs.existsSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33681
    ],
    "arguments": [
      "tsPath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:tsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:tsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33729
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33933
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33941
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.hasNodeDecorators",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasNodeDecorators"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.hasNodeDecorators->self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasNodeDecorators",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:stats",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:stats"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Method:src/parser/ts-parser.ts:fs.statSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:fs.statSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34412
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:stats->self:Variable:src/parser/ts-parser.ts:statSync",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:statSync",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34415
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:stats->self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34424
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:stats",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34448
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Method:src/parser/ts-parser.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34488
    ],
    "arguments": [
      "`Error getting file size for ${filePath}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34488
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34533
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34546
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34812
    ],
    "arguments": [
      "this.program.getRootFileNames()[0]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34839
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34937
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34937
    ],
    "arguments": [
      "pos"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34978
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:currentFilePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:currentFilePath",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression->self:Interface:node_modules/typescript/lib/typescript.d.ts:Expression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Expression",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      35310
    ],
    "arguments": [
      "expression"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:symbol->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35347
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35369
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:declarations",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declarations"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:symbol.getDeclarations",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:symbol.getDeclarations",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      35472
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:declarations->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35472
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:declarations",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35523
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:declaration->self:Variable:src/parser/ts-parser.ts:declarations",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35635
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36311
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      35757
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35861
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      35835
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:declaration.getSourceFile",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getSourceFile",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      35956
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:sourceFile->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      35956
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:filePath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:filePath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:filePath->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:filePath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36008
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      36115
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relativePath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      36239
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:relativePath->self:Variable:src/parser/ts-parser.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relativePath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36267
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      36291
    ],
    "arguments": [
      "expectedType",
      "`${relativePath}:${name}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36328
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36344
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:callerNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.findCallerContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findCallerContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      36724
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callerNode->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36747
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callerNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36763
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getCallerNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getCallerNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      36902
    ],
    "arguments": [
      "callerNode",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callerNodeId->self:Variable:src/parser/ts-parser.ts:callerNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36923
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callerNodeId->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36935
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      36955
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getCalleeInfo",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getCalleeInfo",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37113
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:calleeInfo->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37132
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37148
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.generateCalleeNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateCalleeNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37311
    ],
    "arguments": [
      "calleeInfo",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:calleeNodeId->self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37337
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:calleeNodeId->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37349
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37369
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationLine"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37539
    ],
    "arguments": [
      "node.getStart()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37628
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callLocationLine->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37558
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationColumn"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37607
    ],
    "arguments": [
      "node.getStart()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callLocationColumn->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37628
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      37730
    ],
    "arguments": [
      "'CALLS'",
      "`${callerNodeId}->${calleeNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37871
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37902
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      37962
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38009
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:node.arguments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.arguments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38047
    ],
    "arguments": [
      "arg => arg.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38347
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:ts.isAwaitExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isAwaitExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38187
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38254
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.isInConditionalContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isInConditionalContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38319
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38407
    ],
    "arguments": [
      "callsRelationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38407
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38433
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:findCallerContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/parser/ts-parser.ts:current->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38719
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      38989
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38771
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38816
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38859
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      38898
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39285
    ],
    "arguments": [
      "callerNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      39946
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40370
    ],
    "arguments": [
      "'Function'",
      "`${fileNode.path}:${parent.name.getText()}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40405
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:callerNode.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:callerNode.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39744
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39484
    ],
    "arguments": [
      "callerNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40098
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39619
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40422
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40422
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:methodName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodName->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      39744
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      39836
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:methodName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      39850
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39888
    ],
    "arguments": [
      "callerNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      39922
    ],
    "arguments": [
      "callerNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40127
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isPropertyAssignment",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAssignment",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40288
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40323
    ],
    "arguments": [
      "parent.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:expression->self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40661
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40691
    ],
    "arguments": [
      "expression"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40867
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40780
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40837
    ],
    "arguments": [
      "expression"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:object",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:object"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.expression.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.expression.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40938
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:object->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:object",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40938
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:property",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:property"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      40994
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:property->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:property",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      40994
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:object",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:object",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41045
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:property",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:property",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41055
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      41297
    ],
    "arguments": [
      "calleeInfo.type",
      "`${fileNode.path}:${calleeInfo.name}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41354
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41337
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41566
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      41952
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isIfStatement",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIfStatement",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      41618
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isConditionalExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isConditionalExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      41655
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      41702
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      42318
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:context->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42344
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      43543
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      42491
    ],
    "arguments": [
      "context",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44945
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42531
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42551
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:typeName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeName"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      42691
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeName->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42691
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      42917
    ],
    "arguments": [
      "node.typeName",
      "'TypeAlias'",
      "fileNode.path"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42940
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:typeNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42968
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      42998
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:referenceType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceType"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43227
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:referenceType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceType",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      43561
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43304
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43341
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43425
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isTypeParameterDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeParameterDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43513
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43704
    ],
    "arguments": [
      "'REFERENCES_TYPE'",
      "`${contextNodeId}->${typeNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      43864
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      43896
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isArrayType",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isArrayType",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43944
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44190
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isUnionType",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isUnionType",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      43983
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isIntersectionType",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isIntersectionType",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44036
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:node.typeArguments.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeArguments.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44190
    ],
    "arguments": [
      "t => t.getText()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44255
    ],
    "arguments": [
      "referencesTypeRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44255
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44281
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.isDeclarationIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isDeclarationIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44599
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44628
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44741
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:context->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44767
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44783
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      44914
    ],
    "arguments": [
      "context",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44954
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      44974
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:variableName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableName"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:node.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45122
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableName->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45122
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45157
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:symbol->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45194
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45244
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:declaration->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45364
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45397
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45454
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45439
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getVariableNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45594
    ],
    "arguments": [
      "declaration",
      "fileNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNodeId->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45617
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:variableNodeId->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45630
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45650
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getVariableReferenceType",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableReferenceType",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45826
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referenceType->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45856
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationLine"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      45961
    ],
    "arguments": [
      "node.getStart()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46055
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referenceLocationLine->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      45980
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationColumn"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46034
    ],
    "arguments": [
      "node.getStart()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referenceLocationColumn->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46055
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46190
    ],
    "arguments": [
      "'REFERENCES_VARIABLE'",
      "`${contextNodeId}->${variableNodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46362
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46394
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46487
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46544
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46581
    ],
    "arguments": [
      "referencesVarRel"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46581
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46607
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      46821
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      47310
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46873
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46918
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      46961
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47003
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47049
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47095
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47130
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47175
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      47218
    ],
    "arguments": [
      "current"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48658
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49479
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49427
    ],
    "arguments": [
      "'Variable'",
      "`${fileNode.path}:${context.name.getText()}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49462
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:context.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:context.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49479
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48694
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49054
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49080
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49113
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49155
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:methodName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      47894
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49294
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:methodName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      47997
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48189
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48351
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48513
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49381
    ],
    "arguments": [
      "context.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48594
    ],
    "arguments": [
      "context.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:paramName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:paramName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      48820
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:paramName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      48926
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      48963
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts->self:Variable:src/parser/ts-parser.ts:propName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:propName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49203
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:propName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49308
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49344
    ],
    "arguments": [
      "context"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration->self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49731
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      49967
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49951
    ],
    "arguments": [
      "declaration.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50282
    ],
    "arguments": [
      "'Parameter'",
      "`${fileNode.path}:${parentName}:${paramName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50318
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50239
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      49920
    ],
    "arguments": [
      "declaration"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50009
    ],
    "arguments": [
      "declaration.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50035
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50148
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50077
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50113
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50190
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:paramName->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50239
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50335
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:paramName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50349
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      50554
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50592
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      51091
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      51107
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50660
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50718
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50786
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50851
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50920
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      50989
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      51057
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      51314
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      51907
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      52496
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      51962
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isPrefixUnaryExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPrefixUnaryExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      51500
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isPostfixUnaryExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPostfixUnaryExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      51703
    ],
    "arguments": [
      "parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:[\n        ts.SyntaxKind.PlusEqualsToken,\n        ts.SyntaxKind.MinusEqualsToken,\n        ts.SyntaxKind.AsteriskEqualsToken,\n        ts.SyntaxKind.SlashEqualsToken,\n        ts.SyntaxKind.PercentEqualsToken,\n        ts.SyntaxKind.AmpersandEqualsToken,\n        ts.SyntaxKind.BarEqualsToken,\n        ts.SyntaxKind.CaretEqualsToken,\n        ts.SyntaxKind.LessThanLessThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken\n      ].includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:[\n        ts.SyntaxKind.PlusEqualsToken,\n        ts.SyntaxKind.MinusEqualsToken,\n        ts.SyntaxKind.AsteriskEqualsToken,\n        ts.SyntaxKind.SlashEqualsToken,\n        ts.SyntaxKind.PercentEqualsToken,\n        ts.SyntaxKind.AmpersandEqualsToken,\n        ts.SyntaxKind.BarEqualsToken,\n        ts.SyntaxKind.CaretEqualsToken,\n        ts.SyntaxKind.LessThanLessThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken\n      ].includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      51976
    ],
    "arguments": [
      "parent.operatorToken.kind"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:isArrayType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      52714
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      52799
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Method:src/parser/ts-parser.ts:ts.isArrayTypeNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrayTypeNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      52780
    ],
    "arguments": [
      "node.parent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.isUnionType->self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:isUnionType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isUnionType->self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      52988
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isUnionType->self:Method:src/parser/ts-parser.ts:ts.isUnionTypeNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isUnionTypeNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      52969
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/ts-parser.ts:TSParser->self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/ts-parser.ts:TSParser",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType->self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": true,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType->self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      53191
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType->self:Method:src/parser/ts-parser.ts:ts.isIntersectionTypeNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIntersectionTypeNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      53165
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:@vue/compiler-sfc",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:@vue/compiler-sfc",
    "imports": [
      "parseVue",
      "SFCBlock",
      "SFCDescriptor"
    ],
    "importCount": 3,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "@vue/compiler-sfc",
    "isRelative": false,
    "isResolved": true,
    "packageName": "@vue/compiler-sfc"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:@vue/compiler-dom",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:@vue/compiler-dom",
    "imports": [
      "parseTemplate",
      "ElementNode",
      "NodeTypes"
    ],
    "importCount": 3,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "@vue/compiler-dom",
    "isRelative": false,
    "isResolved": true,
    "packageName": "@vue/compiler-dom"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:@babel/parser",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:@babel/parser",
    "imports": [
      "babelParser"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "@babel/parser",
    "isRelative": false,
    "isResolved": true,
    "packageName": "@babel/parser"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:@babel/traverse",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:@babel/traverse",
    "imports": [
      "traverse"
    ],
    "importCount": 1,
    "hasDefaultImport": true,
    "hasNamedImports": false,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "@babel/traverse",
    "isRelative": false,
    "isResolved": true,
    "packageName": "@babel/traverse"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:@babel/types",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:@babel/types",
    "imports": [
      "t"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "@babel/types",
    "isRelative": false,
    "isResolved": true,
    "packageName": "@babel/types"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:sass",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:sass",
    "imports": [
      "sass"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "sass",
    "isRelative": false,
    "isResolved": true,
    "packageName": "sass"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:postcss",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:postcss",
    "imports": [
      "postcss"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "postcss",
    "isRelative": false,
    "isResolved": true,
    "packageName": "postcss"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Package:postcss-scss",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Package:postcss-scss",
    "imports": [
      "postcssScss"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "postcss-scss",
    "isRelative": false,
    "isResolved": true,
    "packageName": "postcss-scss"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts",
    "imports": [
      "TSParser"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./ts-parser",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/parser/ts-parser.ts"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "Node",
      "Relationship",
      "File",
      "VueComponent",
      "ComponentTemplate",
      "ComponentScript",
      "ComponentStyle",
      "Prop",
      "Emit",
      "Renders",
      "ComponentRenders",
      "ProvidesProps",
      "ListensTo",
      "UsesSlot"
    ],
    "importCount": 14,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Interface:src/parser/vue-parser.ts:VueParserOptions",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParserOptions"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/vue-parser.ts:VueParserOptions->self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/vue-parser.ts:VueParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.rootDir",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/vue-parser.ts:VueParserOptions->self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/vue-parser.ts:VueParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.codebaseId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/vue-parser.ts:VueParserOptions->self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.tsParser",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/vue-parser.ts:VueParserOptions",
    "endNodeId": "self:InterfaceProperty:src/parser/vue-parser.ts:VueParserOptions.tsParser",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/vue-parser.ts:VueParseResult->self:InterfaceProperty:src/parser/vue-parser.ts:VueParseResult.nodes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "endNodeId": "self:InterfaceProperty:src/parser/vue-parser.ts:VueParseResult.nodes",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/parser/vue-parser.ts:VueParseResult->self:InterfaceProperty:src/parser/vue-parser.ts:VueParseResult.relationships",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "endNodeId": "self:InterfaceProperty:src/parser/vue-parser.ts:VueParseResult.relationships",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Class:src/parser/vue-parser.ts:VueParser",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Class:src/parser/vue-parser.ts:VueParser"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/vue-parser.ts:VueParser->self:Property:src/parser/vue-parser.ts:VueParser.rootDir",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Property:src/parser/vue-parser.ts:VueParser.rootDir"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/vue-parser.ts:VueParser->self:Property:src/parser/vue-parser.ts:VueParser.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Property:src/parser/vue-parser.ts:VueParser.codebaseId"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/parser/vue-parser.ts:VueParser->self:Property:src/parser/vue-parser.ts:VueParser.tsParser",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Property:src/parser/vue-parser.ts:VueParser.tsParser"
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:content",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:content"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:fs.readFileSync",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1017
    ],
    "arguments": [
      "filePath",
      "'utf-8'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:content->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:content",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1033
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:{ descriptor }",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:{ descriptor }"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Function:src/parser/vue-parser.ts:parseVue",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:parseVue",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1080
    ],
    "arguments": [
      "content"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Variable:src/parser/vue-parser.ts:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.createFileNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.createFileNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1296
    ],
    "arguments": [
      "filePath",
      "content"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:fileNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1316
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:fileNode->self:Variable:src/parser/vue-parser.ts:content",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:content",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1326
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2846
    ],
    "arguments": [
      "...styleNodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2902
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1841
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.createComponentNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.createComponentNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1443
    ],
    "arguments": [
      "filePath",
      "descriptor"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:componentNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1468
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1875
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2624
    ],
    "arguments": [
      "...scriptResult.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1657
    ],
    "arguments": [
      "'DEFINES_VUE_COMPONENT'",
      "`${fileNode.nodeId}->${componentNode.nodeId}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:templateNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseTemplate",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseTemplate",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2019
    ],
    "arguments": [
      "filePath",
      "descriptor.template",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:templateNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2038
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:templateNode->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2069
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:templateNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2109
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:componentRefs",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentRefs"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.extractComponentReferences",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractComponentReferences",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2211
    ],
    "arguments": [
      "descriptor.template.content",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:componentRefs->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:componentRefs",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2272
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:componentRefs",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentRefs",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2372
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:scriptResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseScript",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseScript",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2515
    ],
    "arguments": [
      "filePath",
      "descriptor",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptResult->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2532
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptResult->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2554
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:scriptResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2653
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:styleNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseStyles",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseStyles",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2778
    ],
    "arguments": [
      "filePath",
      "descriptor.styles",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:styleNodes->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2795
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:styleNodes->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2824
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:styleNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2867
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3076
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3104
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:name",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:name"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3132
    ],
    "arguments": [
      "filePath",
      "'.vue'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:name->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3146
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3197
    ],
    "arguments": [
      "'VueComponent'",
      "relativePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3327
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3361
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3575
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3965
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3993
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4036
    ],
    "arguments": [
      "'File'",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4216
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4146
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.basename",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4202
    ],
    "arguments": [
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:content.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:content.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4291
    ],
    "arguments": [
      "'\\n'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4331
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4762
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4790
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4833
    ],
    "arguments": [
      "'ComponentTemplate'",
      "`${relativePath}:template`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4877
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5156
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5064
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:template.content.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:template.content.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5102
    ],
    "arguments": [
      "'<slot'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:template.content.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:template.content.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5156
    ],
    "arguments": [
      "/<slot/g"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:ast",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:ast"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Function:src/parser/vue-parser.ts:parseTemplate",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:parseTemplate",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5556
    ],
    "arguments": [
      "templateContent",
      "{\n        // Options for the parser\n        isNativeTag: tag => /^[a-z]/.test(tag), // Native HTML tags start with lowercase\n        isCustomElement: tag => false,\n        getNamespace: () => 0, // Default namespace\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:ast->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5570
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:isNativeTag->self:Method:src/parser/vue-parser.ts:/^[a-z]/.test",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:isNativeTag",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:/^[a-z]/.test",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5651
    ],
    "arguments": [
      "tag"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5880
    ],
    "arguments": [
      "ast.children",
      "componentNode",
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:ast",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5905
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6032
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6085
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Method:src/parser/vue-parser.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      5978
    ],
    "arguments": [
      "`Error parsing template for component ${componentNode.name}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      5978
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6055
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6359
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6301
    ],
    "arguments": [
      "nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6414
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:elementNode->self:Variable:src/parser/vue-parser.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6477
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:tagName->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6522
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:/^[A-Z]/.test",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:/^[A-Z]/.test",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6624
    ],
    "arguments": [
      "tagName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8048
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      6762
    ],
    "arguments": [
      "'RENDERS'",
      "`${componentNode.nodeId}->${tagName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6928
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6973
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.hasConditionalDirective",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.hasConditionalDirective",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7084
    ],
    "arguments": [
      "elementNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7113
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7927
    ],
    "arguments": [
      "...slotsResult.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8377
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7290
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractProps",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractProps",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7380
    ],
    "arguments": [
      "this.nodeToString(elementNode)",
      "componentNode.nodeId",
      "tagName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.nodeToString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.nodeToString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7853
    ],
    "arguments": [
      "elementNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7416
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7430
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7452
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:propsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7501
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:eventsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractEventListeners",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractEventListeners",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7608
    ],
    "arguments": [
      "this.nodeToString(elementNode)",
      "componentNode.nodeId",
      "tagName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7653
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7667
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7689
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:eventsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7738
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:slotsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractSlots",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractSlots",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      7835
    ],
    "arguments": [
      "this.nodeToString(elementNode)",
      "componentNode.nodeId",
      "tagName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7871
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7885
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7907
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:slotsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7956
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.processSlotElement",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processSlotElement",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8114
    ],
    "arguments": [
      "elementNode",
      "componentNode",
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8340
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8362
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8315
    ],
    "arguments": [
      "elementNode.children",
      "componentNode",
      "result"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Method:src/parser/vue-parser.ts:node.props.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8583
    ],
    "arguments": [
      "prop =>\n      prop.type === NodeTypes.DIRECTIVE &&\n      (prop.name === 'if' || prop.name === 'else-if' || prop.name === 'else')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8583
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8706
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Method:src/parser/vue-parser.ts:node.props.some",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.some",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8876
    ],
    "arguments": [
      "prop =>\n      prop.type === NodeTypes.DIRECTIVE && prop.name === 'for'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8876
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8943
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode->self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:keyProp",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyProp"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode->self:Method:src/parser/vue-parser.ts:node.props.find",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.find",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9127
    ],
    "arguments": [
      "prop =>\n      (prop.type === NodeTypes.DIRECTIVE && prop.name === 'bind' &&\n       prop.arg && prop.arg.type === NodeTypes.SIMPLE_EXPRESSION && prop.arg.content === 'key') ||\n      (prop.type === NodeTypes.ATTRIBUTE && prop.name === 'key')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:keyProp->self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:keyProp",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9127
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode->self:Variable:src/parser/vue-parser.ts:keyProp",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyProp",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9666
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Parameter:src/parser/vue-parser.ts:processSlotElement:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Parameter:src/parser/vue-parser.ts:processSlotElement:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:result",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/parser/vue-parser.ts:processSlotElement:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:nameProp",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:nameProp"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Method:src/parser/vue-parser.ts:node.props.find",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.find",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9932
    ],
    "arguments": [
      "prop =>\n      (prop.type === NodeTypes.DIRECTIVE && prop.name === 'bind' &&\n       prop.arg && prop.arg.type === NodeTypes.SIMPLE_EXPRESSION && prop.arg.content === 'name') ||\n      (prop.type === NodeTypes.ATTRIBUTE && prop.name === 'name')"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:nameProp->self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:nameProp",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9932
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:slotName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Variable:src/parser/vue-parser.ts:nameProp",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:nameProp",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10518
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Variable:src/parser/vue-parser.ts:slotName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotName",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10507
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:result->self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10829
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10891
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11035
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11708
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:dirName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:dirName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:dirName->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:dirName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11203
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:argStr",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:argStr"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:argStr->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:argStr",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11330
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:valueStr",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:valueStr"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:valueStr->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:valueStr",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11471
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:argStr",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:argStr",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11559
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:dirName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:dirName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11624
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:valueStr",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:valueStr",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11636
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute->self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:keyMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyMatch"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute->self:Method:src/parser/vue-parser.ts:tagContent.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:tagContent.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11874
    ],
    "arguments": [
      "/:key=\"([^\"]+)\"/"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:keyMatch->self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:keyMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11874
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute->self:Variable:src/parser/vue-parser.ts:keyMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11932
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propRegex",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propRegex"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:props",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:props"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:bindings",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:bindings"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12444
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12456
    ],
    "arguments": [
      "tagContent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propRegex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propRegex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12456
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12839
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20615
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propValue",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propValue"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propValue->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12557
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:props.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:props.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13114
    ],
    "arguments": [
      "propName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:props",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:props",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13248
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13153
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:bindings",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:bindings",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13144
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propValue",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13180
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:staticPropRegex",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropRegex"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12800
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:staticPropRegex.exec",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:staticPropRegex.exec",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12818
    ],
    "arguments": [
      "tagContent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:staticPropRegex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropRegex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12818
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12887
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propValue->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12931
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:propName.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propName.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13056
    ],
    "arguments": [
      "'@'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:JSON.stringify",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13165
    ],
    "arguments": [
      "propValue"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13341
    ],
    "arguments": [
      "'PROVIDES_PROPS'",
      "`${fromNodeId}->${toComponentName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:providesPropsRelationship->self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13507
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:providesPropsRelationship->self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13538
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13684
    ],
    "arguments": [
      "providesPropsRelationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13760
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13710
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:eventRegex",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventRegex"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:events",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:events"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:handlers",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlers"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14277
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:eventRegex.exec",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:eventRegex.exec",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14290
    ],
    "arguments": [
      "tagContent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventRegex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventRegex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14290
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14306
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:eventName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:eventName->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14355
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:handlerValue",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlerValue"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:handlerValue->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:handlerValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14397
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:events.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:events.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14425
    ],
    "arguments": [
      "eventName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:events",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:events",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14510
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14464
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:handlers",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlers",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14455
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:handlerValue",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlerValue",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14477
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14596
    ],
    "arguments": [
      "'LISTENS_TO'",
      "`${fromNodeId}->${toComponentName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:listensToRelationship->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14754
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:listensToRelationship->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14785
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      14932
    ],
    "arguments": [
      "listensToRelationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15004
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      14958
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Parameter:src/parser/vue-parser.ts:extractSlots:tagContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractSlots:tagContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Parameter:src/parser/vue-parser.ts:extractSlots:fromNodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractSlots:fromNodeId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Parameter:src/parser/vue-parser.ts:extractSlots:toComponentName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractSlots:toComponentName",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15407
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15712
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15740
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:script->self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15791
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:isSetup",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:isSetup"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:isSetup->self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:isSetup",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15837
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15875
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19732
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:scriptNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16017
    ],
    "arguments": [
      "'ComponentScript'",
      "`${relativePath}:script`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16059
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16454
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16205
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:script.content.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:script.content.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16454
    ],
    "arguments": [
      "'defineOptions'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19661
    ],
    "arguments": [
      "...emitsResult.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:scriptNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19540
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:babelParser.parse",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:babelParser.parse",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16625
    ],
    "arguments": [
      "script.content",
      "{\n        sourceType: 'module',\n        plugins: [\n          'typescript',\n          'jsx',\n          'decorators-legacy',\n          'classProperties',\n        ],\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:ast->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16643
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Function:src/parser/vue-parser.ts:traverse",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:traverse",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16893
    ],
    "arguments": [
      "ast",
      "{\n        // Extract defineProps\n        CallExpression: (path) => {\n          const callee = path.node.callee;\n          if (t.isIdentifier(callee)) {\n            // Handle defineProps\n            if (callee.name === 'defineProps') {\n              const propsResult = this.extractDefinePropsFromAST(path.node, componentNode);\n              result.nodes.push(...propsResult.nodes);\n            }\n            \n            // Handle defineEmits\n            else if (callee.name === 'defineEmits') {\n              const emitsResult = this.extractDefineEmitsFromAST(path.node, componentNode);\n              result.nodes.push(...emitsResult.nodes);\n            }\n            \n            // Handle defineExpose\n            else if (callee.name === 'defineExpose') {\n              // TODO: Extract exposed properties\n            }\n            \n            // Handle defineOptions\n            else if (callee.name === 'defineOptions') {\n              // TODO: Extract component options\n            }\n            \n            // Handle composables (functions starting with \"use\")\n            else if (callee.name.startsWith('use')) {\n              const composableResult = this.extractComposableUsage(callee.name, componentNode);\n              result.relationships.push(...composableResult.relationships);\n            }\n          }\n        },\n        \n        // Extract imports\n        ImportDeclaration: (path) => {\n          const importResult = this.extractImportFromAST(path.node, componentNode);\n          result.relationships.push(...importResult.relationships);\n        },\n        \n        // Extract reactive state\n        VariableDeclarator: (path) => {\n          const init = path.node.init;\n          if (init && t.isCallExpression(init)) {\n            const callee = init.callee;\n            if (t.isIdentifier(callee)) {\n              // Check for reactive state (ref, reactive, computed, etc.)\n              if (['ref', 'reactive', 'computed', 'shallowRef', 'shallowReactive', 'readonly'].includes(callee.name)) {\n                const reactiveStateResult = this.extractReactiveStateFromAST(path.node, callee.name, componentNode);\n                result.nodes.push(...reactiveStateResult.nodes);\n              }\n            }\n          }\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:ast",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16902
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:callee->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17001
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17033
    ],
    "arguments": [
      "callee"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18912
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractDefinePropsFromAST",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefinePropsFromAST",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17176
    ],
    "arguments": [
      "path.node",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17207
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19450
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17510
    ],
    "arguments": [
      "...emitsResult.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:propsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19495
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitsResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractDefineEmitsFromAST",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmitsFromAST",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      17438
    ],
    "arguments": [
      "path.node",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      17469
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19637
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:emitsResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19682
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:callee.name.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:callee.name.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18000
    ],
    "arguments": [
      "'use'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:composableResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractComposableUsage",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractComposableUsage",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18072
    ],
    "arguments": [
      "callee.name",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:composableResult->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18100
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:composableResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18113
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18143
    ],
    "arguments": [
      "...composableResult.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:composableResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18172
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:importResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:ImportDeclaration->self:Method:src/parser/vue-parser.ts:this.extractImportFromAST",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:ImportDeclaration",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractImportFromAST",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18348
    ],
    "arguments": [
      "path.node",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:importResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18374
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:importResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18385
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:ImportDeclaration->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:ImportDeclaration",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18411
    ],
    "arguments": [
      "...importResult.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:importResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18440
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:init",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:init"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:init->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18586
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:init",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18643
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18624
    ],
    "arguments": [
      "init"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:callee->self:Variable:src/parser/vue-parser.ts:init",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      18679
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18708
    ],
    "arguments": [
      "callee"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:['ref', 'reactive', 'computed', 'shallowRef', 'shallowReactive', 'readonly'].includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:['ref', 'reactive', 'computed', 'shallowRef', 'shallowReactive', 'readonly'].includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18826
    ],
    "arguments": [
      "callee.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:this.extractReactiveStateFromAST",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractReactiveStateFromAST",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      18972
    ],
    "arguments": [
      "path.node",
      "callee.name",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19005
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19016
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19029
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19061
    ],
    "arguments": [
      "...reactiveStateResult.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19082
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19200
    ],
    "arguments": [
      "`Error parsing script for component ${componentNode.name}:`",
      "error"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19200
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19252
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:error",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:error",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19275
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19410
    ],
    "arguments": [
      "script.content",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19434
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      19597
    ],
    "arguments": [
      "script.content",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      19621
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propsMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20219
    ],
    "arguments": [
      "/defineProps[<\\(]([^>)]+)[>\\)]/"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsMatch->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20219
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propsMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20286
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propsContent",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propsContent->self:Variable:src/parser/vue-parser.ts:propsMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20327
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20536
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20548
    ],
    "arguments": [
      "propsContent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propRegex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propRegex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20548
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propsContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20563
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propType->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20654
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:propNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20737
    ],
    "arguments": [
      "'Prop'",
      "`${componentNode.path}:${propName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propNode->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      20919
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25187
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propType.trim",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propType.trim",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20957
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24566
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propType.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propType.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      20996
    ],
    "arguments": [
      "'required'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propsContent.includes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propsContent.includes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21049
    ],
    "arguments": [
      "`default:`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propsContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21133
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:this.extractDefaultValue",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefaultValue",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21108
    ],
    "arguments": [
      "propsContent",
      "propName"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21185
    ],
    "arguments": [
      "propNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21244
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21203
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Method:src/parser/vue-parser.ts:propsContent.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propsContent.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21474
    ],
    "arguments": [
      "new RegExp(`${propName}[^{]*default:\\\\s*([^,}]+)`)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:defaultMatch->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21474
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:defaultMatch->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21507
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      21572
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Method:src/parser/vue-parser.ts:defaultMatch[1].trim",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:defaultMatch[1].trim",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      21572
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:args->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22109
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22133
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25950
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:arg->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26460
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      22920
    ],
    "arguments": [
      "prop.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24866
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isObjectProperty",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectProperty",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23036
    ],
    "arguments": [
      "propOption"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22993
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23158
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      22428
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:isRequired",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:isRequired"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefault"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:defaultValue",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultValue"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23212
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:isRequired",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:isRequired",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23369
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propOption",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propOption",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24122
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23802
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefault",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      23488
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24894
    ],
    "arguments": [
      "element"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:defaultValue",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultValue",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24163
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23663
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:propOption.value.value.toString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propOption.value.value.toString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23877
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      23941
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrowFunctionExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrowFunctionExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24050
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isFunctionExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isFunctionExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24099
    ],
    "arguments": [
      "propOption.value"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25032
    ],
    "arguments": [
      "'Prop'",
      "`${componentNode.path}:${propName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propNode->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25222
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25878
    ],
    "arguments": [
      "...simpleResult.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25382
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      24810
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24912
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      24951
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25733
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptContent->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25752
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25769
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:simpleResult",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      25815
    ],
    "arguments": [
      "scriptContent",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27490
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25854
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:simpleResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      25899
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:args->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26381
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26405
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27601
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      26545
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26601
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      26629
    ],
    "arguments": [
      "element"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26647
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitName->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26686
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      26767
    ],
    "arguments": [
      "'Emit'",
      "`${componentNode.path}:${emitName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNode->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      26957
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:emitName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33697
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27529
    ],
    "arguments": [
      "...simpleResult.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:emitNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27030
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27384
    ],
    "arguments": [
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:scriptContent->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27403
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27420
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      27466
    ],
    "arguments": [
      "scriptContent",
      "componentNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27505
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:simpleResult",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      27550
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28072
    ],
    "arguments": [
      "'USES_COMPOSABLE'",
      "`${componentNode.nodeId}->${composableName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:usesComposableRelationship->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28243
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:usesComposableRelationship->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28282
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28368
    ],
    "arguments": [
      "usesComposableRelationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28439
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28394
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:source",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:source"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:source->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:source",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28738
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:importedSpecifiers",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importedSpecifiers"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefaultImport"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasNamespaceImport"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      28945
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportDefaultSpecifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportDefaultSpecifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      28974
    ],
    "arguments": [
      "specifier"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:specifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:specifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29336
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefaultImport",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29023
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:importedSpecifiers.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:importedSpecifiers.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29312
    ],
    "arguments": [
      "specifier.local.name"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:importedSpecifiers",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importedSpecifiers",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29312
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportNamespaceSpecifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportNamespaceSpecifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29120
    ],
    "arguments": [
      "specifier"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasNamespaceImport",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29171
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportSpecifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportSpecifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29270
    ],
    "arguments": [
      "specifier"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29571
    ],
    "arguments": [
      "'IMPORTS'",
      "`${componentNode.nodeId}->${source}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:importsRelationship->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29718
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:importsRelationship->self:Variable:src/parser/vue-parser.ts:source",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:source",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29757
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      29835
    ],
    "arguments": [
      "importsRelationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29899
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      29861
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30198
    ],
    "arguments": [
      "node.id"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30213
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:stateName",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:stateName"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:stateName->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:stateName",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30249
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30357
    ],
    "arguments": [
      "'ReactiveState'",
      "`${componentNode.path}:${stateName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30551
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Variable:src/parser/vue-parser.ts:stateName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:stateName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30519
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30651
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:this.getInitialValue",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getInitialValue",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30689
    ],
    "arguments": [
      "node.init"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30710
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      30743
    ],
    "arguments": [
      "reactiveStateNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30803
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      30761
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31038
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31010
    ],
    "arguments": [
      "init"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:arg->self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31085
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31121
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      31524
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31197
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:arg.value.toString",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:arg.value.toString",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31320
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31278
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31359
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31423
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      31504
    ],
    "arguments": [
      "arg"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.getNodeSource",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getNodeSource"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.getNodeSource->self:Parameter:src/parser/vue-parser.ts:getNodeSource:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getNodeSource",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getNodeSource:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32402
    ],
    "arguments": [
      "/defineEmits[<\\(]([^>)]+)[>\\)]/"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitsMatch->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32402
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32469
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitsContent",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitsContent->self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32510
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitsContent.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitsContent.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32542
    ],
    "arguments": [
      "'['"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitsContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33358
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitNames",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNames"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitsContent.match",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitsContent.match",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32659
    ],
    "arguments": [
      "/'([^']+)'/g"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNames->self:Variable:src/parser/vue-parser.ts:emitsContent",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNames",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32659
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitNames.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitNames.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      32716
    ],
    "arguments": [
      "emitName => {\n          const name = emitName.replace(/'/g, '');\n          \n          const emitNode: Emit = {\n            nodeId: this.generateNodeId('Emit', `${componentNode.path}:${name}`),\n            codebaseId: this.codebaseId,\n            labels: ['Emit'],\n            name,\n            componentId: componentNode.nodeId\n          };\n          \n          result.nodes.push(emitNode);\n        }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitNames",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNames",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32716
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:name->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:emitName",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:emitName",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32771
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNode->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33732
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:name",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      32918
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33901
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33850
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitRegex",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitRegex"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "referenceType": "write",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33331
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitRegex.exec",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitRegex.exec",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33343
    ],
    "arguments": [
      "emitsContent"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitRegex",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitRegex",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33343
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitName->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33412
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts->self:Variable:src/parser/vue-parser.ts:payloadType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/parser/vue-parser.ts",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:payloadType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:payloadType->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:payloadType",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33456
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33542
    ],
    "arguments": [
      "'Emit'",
      "`${componentNode.path}:${emitName}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:payloadType.trim",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:payloadType.trim",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33779
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:payloadType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:payloadType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      33779
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      33832
    ],
    "arguments": [
      "emitNode"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34106
    ],
    "arguments": [
      "this.rootDir",
      "filePath"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34134
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Method:src/parser/vue-parser.ts:styles.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:styles.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      34161
    ],
    "arguments": [
      "(style, index) => {\n      return {\n        nodeId: this.generateNodeId('ComponentStyle', `${relativePath}:style:${index}`),\n        codebaseId: this.codebaseId,\n        labels: ['ComponentStyle'],\n        lang: style.lang || 'css',\n        componentId: componentNode.nodeId,\n        isScoped: style.scoped || false,\n        isModule: style.module || false\n      };\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34161
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34264
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:index",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:index",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34286
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:style",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:style",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34506
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34425
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/parser/vue-parser.ts:VueParser->self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/parser/vue-parser.ts:VueParser",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34739
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      34747
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:REEXPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "codebaseId": "self",
    "type": "EXPORTS_LOCAL",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "exportCount": 1,
    "hasNamedExports": true,
    "isTypeOnly": false,
    "isReExport": true,
    "exportNames": [
      "*"
    ],
    "exportKinds": [
      "variable"
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts->self:Variable:src/schema/index.ts:SCHEMA_VERSION",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "endNodeId": "self:Variable:src/schema/index.ts:SCHEMA_VERSION"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts->self:Variable:src/schema/index.ts:SCHEMA_METADATA",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "endNodeId": "self:Variable:src/schema/index.ts:SCHEMA_METADATA"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/schema/index.ts:SCHEMA_METADATA->self:Variable:src/schema/index.ts:SCHEMA_VERSION",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/schema/index.ts:SCHEMA_METADATA",
    "endNodeId": "self:Variable:src/schema/index.ts:SCHEMA_VERSION",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      18
    ],
    "referenceLocationColumns": [
      46
    ]
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "imports": [
      "Node",
      "CodeElement",
      "NamedType",
      "Callable",
      "Decorator"
    ],
    "importCount": 5,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./types",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/types.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Codebase",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Codebase"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.createdAt",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.description",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.version",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.version",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.rootPath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.rootPath",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.repositoryUrl",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.repositoryUrl",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Codebase->self:InterfaceProperty:src/schema/nodes.ts:Codebase.language",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Codebase",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Codebase.language",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Package",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Package"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.path",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.absolutePath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.absolutePath",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.version",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.version",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.description",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.author",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.author",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.license",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.license",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.dependencies",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.dependencies",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.devDependencies",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.devDependencies",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.peerDependencies",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.peerDependencies",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Package->self:InterfaceProperty:src/schema/nodes.ts:Package.isLocal",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Package",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Package.isLocal",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Directory",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Directory"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Directory->self:InterfaceProperty:src/schema/nodes.ts:Directory.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Directory",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Directory.path",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Directory->self:InterfaceProperty:src/schema/nodes.ts:Directory.absolutePath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Directory",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Directory.absolutePath",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Directory->self:InterfaceProperty:src/schema/nodes.ts:Directory.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Directory",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Directory.name",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Directory->self:InterfaceProperty:src/schema/nodes.ts:Directory.parentPath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Directory",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Directory.parentPath",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Directory->self:InterfaceProperty:src/schema/nodes.ts:Directory.isRoot",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Directory",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Directory.isRoot",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:File",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:File"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.path",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.absolutePath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.absolutePath",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.name",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.extension",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.extension",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.language",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.language",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.lineCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.lineCount",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.size",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.size",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.hash",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.hash",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.hasDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.hasDefaultExport",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.defaultExportExpression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.defaultExportExpression",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.hasNamedExports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.hasNamedExports",
    "index": 10,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.namedExports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.namedExports",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.hasCommonJSExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.hasCommonJSExport",
    "index": 12,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.commonJSExportExpression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.commonJSExportExpression",
    "index": 13,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.importCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.importCount",
    "index": 14,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.exportCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.exportCount",
    "index": 15,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.isTest",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.isTest",
    "index": 16,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.isTypeDefinition",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.isTypeDefinition",
    "index": 17,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.isModule",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.isModule",
    "index": 18,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.isEntry",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.isEntry",
    "index": 19,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:File->self:InterfaceProperty:src/schema/nodes.ts:File.parentDirectory",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:File",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:File.parentDirectory",
    "index": 20,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Module",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Module"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Module->self:InterfaceProperty:src/schema/nodes.ts:Module.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Module",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Module.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Module->self:InterfaceProperty:src/schema/nodes.ts:Module.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Module",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Module.path",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Module->self:InterfaceProperty:src/schema/nodes.ts:Module.isInternal",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Module",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Module.isInternal",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Module->self:InterfaceProperty:src/schema/nodes.ts:Module.isThirdParty",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Module",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Module.isThirdParty",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Module->self:InterfaceProperty:src/schema/nodes.ts:Module.sourceFile",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Module",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Module.sourceFile",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Namespace",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Namespace"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Namespace->self:InterfaceProperty:src/schema/nodes.ts:Namespace.isGlobal",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Namespace",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Namespace.isGlobal",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Namespace->self:InterfaceProperty:src/schema/nodes.ts:Namespace.isAmbient",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Namespace",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Namespace.isAmbient",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Class",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Class"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.isAbstract",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.isAbstract",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.isGeneric",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.isGeneric",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.hasConstructor",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.hasConstructor",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.constructorParams",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.constructorParams",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.methodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.methodCount",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.propertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.propertyCount",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.staticMethodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.staticMethodCount",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.staticPropertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.staticPropertyCount",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.privateMethodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.privateMethodCount",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.privatePropertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.privatePropertyCount",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.protectedMethodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.protectedMethodCount",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.protectedPropertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.protectedPropertyCount",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.publicMethodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.publicMethodCount",
    "index": 12,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.publicPropertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.publicPropertyCount",
    "index": 13,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.implementsCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.implementsCount",
    "index": 14,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.extendsClass",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.extendsClass",
    "index": 15,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.implementsInterfaces",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.implementsInterfaces",
    "index": 16,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.isExported",
    "index": 17,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.isDefaultExport",
    "index": 18,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Class->self:InterfaceProperty:src/schema/nodes.ts:Class.hasDecorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Class",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Class.hasDecorators",
    "index": 19,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Interface",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Interface"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.isGeneric",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.isGeneric",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.methodCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.methodCount",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.propertyCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.propertyCount",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.extendsCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.extendsCount",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.extendsInterfaces",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.extendsInterfaces",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.isExported",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Interface->self:InterfaceProperty:src/schema/nodes.ts:Interface.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Interface",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Interface.isDefaultExport",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Enum",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Enum"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Enum->self:InterfaceProperty:src/schema/nodes.ts:Enum.isConst",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Enum",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Enum.isConst",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Enum->self:InterfaceProperty:src/schema/nodes.ts:Enum.members",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Enum",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Enum.members",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Enum->self:InterfaceProperty:src/schema/nodes.ts:Enum.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Enum",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Enum.isExported",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Enum->self:InterfaceProperty:src/schema/nodes.ts:Enum.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Enum",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Enum.isDefaultExport",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:EnumMember",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:EnumMember"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:EnumMember->self:InterfaceProperty:src/schema/nodes.ts:EnumMember.value",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:EnumMember",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:EnumMember.value",
    "index": 0,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:EnumMember->self:InterfaceProperty:src/schema/nodes.ts:EnumMember.isComputed",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:EnumMember",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:EnumMember.isComputed",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:TypeAlias",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.definition",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.definition",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isGeneric",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isGeneric",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isUnion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isUnion",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isIntersection",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isIntersection",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isExported",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.isDefaultExport",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeAlias->self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.referencedTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeAlias",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeAlias.referencedTypes",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Function",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Function"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.parameterCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.parameterCount",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.isExported",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.isDefaultExport",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.isGenerator",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.isGenerator",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.isArrowFunction",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.isArrowFunction",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.isFunctionExpression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.isFunctionExpression",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.hasRestParameter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.hasRestParameter",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.hasOptionalParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.hasOptionalParameters",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.hasTypeParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.hasTypeParameters",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.callExpressions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.callExpressions",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.referencedVariables",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.referencedVariables",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.referencedFunctions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.referencedFunctions",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Function->self:InterfaceProperty:src/schema/nodes.ts:Function.referencedTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Function",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Function.referencedTypes",
    "index": 12,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Method",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Method"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.isStatic",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.isStatic",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.visibility",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.visibility",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.isAbstract",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.isAbstract",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.isGenerator",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.isGenerator",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.isGetter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.isGetter",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.isSetter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.isSetter",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.parameterCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.parameterCount",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.hasRestParameter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.hasRestParameter",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.hasOptionalParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.hasOptionalParameters",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.hasTypeParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.hasTypeParameters",
    "index": 9,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.callExpressions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.callExpressions",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.referencedVariables",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.referencedVariables",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.referencedFunctions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.referencedFunctions",
    "index": 12,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.referencedTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.referencedTypes",
    "index": 13,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.overrides",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.overrides",
    "index": 14,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Method->self:InterfaceProperty:src/schema/nodes.ts:Method.overridesMethod",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Method",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Method.overridesMethod",
    "index": 15,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Constructor",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Constructor"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.visibility",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.visibility",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.parameterCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.parameterCount",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasRestParameter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasRestParameter",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasOptionalParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasOptionalParameters",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasParameterProperties",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.hasParameterProperties",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.callExpressions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.callExpressions",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedVariables",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedVariables",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedFunctions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedFunctions",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Constructor->self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Constructor",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Constructor.referencedTypes",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Property",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Property"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.isStatic",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.isStatic",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.visibility",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.visibility",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.isReadonly",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.isReadonly",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.isOptional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.isOptional",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.typeString",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.typeString",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.initializer",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.initializer",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.isParameterProperty",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.isParameterProperty",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.hasDecorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.hasDecorators",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Property->self:InterfaceProperty:src/schema/nodes.ts:Property.decorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Property",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Property.decorators",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Variable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Variable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isConstant",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isConstant",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.scope",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.scope",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.typeString",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.typeString",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.initializer",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.initializer",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isExported",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isDefaultExport",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isDestructured",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isDestructured",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isArray",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isArray",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.isObject",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.isObject",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedVariables",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedVariables",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedFunctions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedFunctions",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Variable->self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Variable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Variable.referencedTypes",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Parameter",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Parameter"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.index",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.index",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.isOptional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.isOptional",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.isRest",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.isRest",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.typeString",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.typeString",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.initializer",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.initializer",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.isParameterProperty",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.isParameterProperty",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.hasDecorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.hasDecorators",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Parameter->self:InterfaceProperty:src/schema/nodes.ts:Parameter.decorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Parameter",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Parameter.decorators",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:JsxElement",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:JsxElement"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.tagName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.tagName",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.isComponent",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.isComponent",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.isSelfClosing",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.isSelfClosing",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.hasChildren",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.hasChildren",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.attributes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.attributes",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.parentElement",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.parentElement",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxElement->self:InterfaceProperty:src/schema/nodes.ts:JsxElement.childElements",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxElement",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxElement.childElements",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:JsxAttribute",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:JsxAttribute"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxAttribute->self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.value",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxAttribute",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.value",
    "index": 0,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxAttribute->self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.isSpread",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxAttribute",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.isSpread",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:JsxAttribute->self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.isExpression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:JsxAttribute",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:JsxAttribute.isExpression",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Test",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Test"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Test->self:InterfaceProperty:src/schema/nodes.ts:Test.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Test",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Test.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Test->self:InterfaceProperty:src/schema/nodes.ts:Test.framework",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Test",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Test.framework",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Test->self:InterfaceProperty:src/schema/nodes.ts:Test.testTarget",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Test",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Test.testTarget",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Test->self:InterfaceProperty:src/schema/nodes.ts:Test.assertions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Test",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Test.assertions",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Test->self:InterfaceProperty:src/schema/nodes.ts:Test.isAsync",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Test",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Test.isAsync",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Component",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Component"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.framework",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.framework",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.isFunction",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.isFunction",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.isClass",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.isClass",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.hasProps",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.hasProps",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.hasState",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.hasState",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.propsInterface",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.propsInterface",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.stateInterface",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.stateInterface",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.isExported",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.isDefaultExport",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.hasJsx",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.hasJsx",
    "index": 9,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.hasHooks",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.hasHooks",
    "index": 10,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Component->self:InterfaceProperty:src/schema/nodes.ts:Component.hooks",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Component",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Component.hooks",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Dependency",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Dependency"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.version",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.version",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.isDevDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.isDevDependency",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.isPeerDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.isPeerDependency",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.isOptionalDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.isOptionalDependency",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.isDirectDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.isDirectDependency",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.isTransitiveDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.isTransitiveDependency",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Dependency->self:InterfaceProperty:src/schema/nodes.ts:Dependency.importCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Dependency",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Dependency.importCount",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:TypeDefinition",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:TypeDefinition"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeDefinition->self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.source",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeDefinition",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.source",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeDefinition->self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.packageName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeDefinition",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.packageName",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeDefinition->self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeDefinition",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.isExported",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:TypeDefinition->self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:TypeDefinition",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:TypeDefinition.isDefaultExport",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.nodeType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.nodeType",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.nodeKind",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.nodeKind",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.startPos",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.startPos",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.endPos",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.endPos",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.parentNode",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.parentNode",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.childNodes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.childNodes",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ASTNodeInfo->self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.flags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ASTNodeInfo",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ASTNodeInfo.flags",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Hypothesis",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.title",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.description",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.confidence",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.confidence",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.status",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.status",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.createdBy",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.evidence",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.evidence",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Hypothesis->self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Hypothesis",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Hypothesis.tags",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Reflection",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Reflection"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.title",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.content",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.depth",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.depth",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.perspective",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.perspective",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.createdBy",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Reflection->self:InterfaceProperty:src/schema/nodes.ts:Reflection.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Reflection",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Reflection.tags",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Insight",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Insight"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.title",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.content",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.novelty",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.novelty",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.actionability",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.actionability",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.impact",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.impact",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.createdBy",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Insight->self:InterfaceProperty:src/schema/nodes.ts:Insight.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Insight",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Insight.tags",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Question",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Question"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.text",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.text",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.status",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.status",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.complexity",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.complexity",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.createdBy",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.answer",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.answer",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Question->self:InterfaceProperty:src/schema/nodes.ts:Question.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Question",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Question.tags",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Decision",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Decision"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.title",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.description",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.status",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.status",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.rationale",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.rationale",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.createdBy",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.alternatives",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.alternatives",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Decision->self:InterfaceProperty:src/schema/nodes.ts:Decision.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Decision",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Decision.tags",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Pattern",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Pattern"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.description",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.frequency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.frequency",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.intentionality",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.intentionality",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.quality",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.quality",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.createdBy",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.examples",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.examples",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Pattern->self:InterfaceProperty:src/schema/nodes.ts:Pattern.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Pattern",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Pattern.tags",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Task",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Task"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.title",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.description",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.status",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.status",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.priority",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.priority",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.effort",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.effort",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.assignedTo",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.assignedTo",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.dueDate",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.dueDate",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.createdBy",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.completedAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.completedAt",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Task->self:InterfaceProperty:src/schema/nodes.ts:Task.tags",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Task",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Task.tags",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Subtask",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Subtask"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.title",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.description",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.status",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.status",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.createdAt",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Subtask->self:InterfaceProperty:src/schema/nodes.ts:Subtask.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Subtask",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Subtask.createdBy",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Agent",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Agent"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Agent->self:InterfaceProperty:src/schema/nodes.ts:Agent.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Agent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Agent.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Agent->self:InterfaceProperty:src/schema/nodes.ts:Agent.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Agent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Agent.name",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Agent->self:InterfaceProperty:src/schema/nodes.ts:Agent.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Agent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Agent.type",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Agent->self:InterfaceProperty:src/schema/nodes.ts:Agent.capabilities",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Agent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Agent.capabilities",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Agent->self:InterfaceProperty:src/schema/nodes.ts:Agent.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Agent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Agent.createdAt",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Verification",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Verification"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Verification->self:InterfaceProperty:src/schema/nodes.ts:Verification.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Verification",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Verification.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Verification->self:InterfaceProperty:src/schema/nodes.ts:Verification.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Verification",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Verification.title",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Verification->self:InterfaceProperty:src/schema/nodes.ts:Verification.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Verification",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Verification.description",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Verification->self:InterfaceProperty:src/schema/nodes.ts:Verification.method",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Verification",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Verification.method",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Verification->self:InterfaceProperty:src/schema/nodes.ts:Verification.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Verification",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Verification.createdAt",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Result",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Result"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Result->self:InterfaceProperty:src/schema/nodes.ts:Result.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Result",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Result.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Result->self:InterfaceProperty:src/schema/nodes.ts:Result.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Result",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Result.title",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Result->self:InterfaceProperty:src/schema/nodes.ts:Result.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Result",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Result.description",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Result->self:InterfaceProperty:src/schema/nodes.ts:Result.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Result",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Result.content",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Result->self:InterfaceProperty:src/schema/nodes.ts:Result.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Result",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Result.createdBy",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Orientation",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Orientation"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Orientation->self:InterfaceProperty:src/schema/nodes.ts:Orientation.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Orientation",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Orientation.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Orientation->self:InterfaceProperty:src/schema/nodes.ts:Orientation.title",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Orientation",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Orientation.title",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Orientation->self:InterfaceProperty:src/schema/nodes.ts:Orientation.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Orientation",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Orientation.content",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Orientation->self:InterfaceProperty:src/schema/nodes.ts:Orientation.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Orientation",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Orientation.createdAt",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Orientation->self:InterfaceProperty:src/schema/nodes.ts:Orientation.createdBy",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Orientation",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Orientation.createdBy",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.name",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.typeString",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.typeString",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.description",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.isOptional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.isOptional",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:InterfaceProperty->self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.defaultValue",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:InterfaceProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:InterfaceProperty.defaultValue",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:VueComponent",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:VueComponent"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.path",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.absolutePath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.absolutePath",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.name",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasTemplate",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasTemplate",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasScript",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasScript",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasScriptSetup",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasScriptSetup",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasStyle",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.hasStyle",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.styleCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.styleCount",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isAsync",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isAsync",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isExported",
    "index": 9,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:VueComponent->self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:VueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:VueComponent.isDefaultExport",
    "index": 10,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentTemplate->self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.content",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentTemplate->self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.lang",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.lang",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentTemplate->self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.componentId",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentTemplate->self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.hasSlots",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.hasSlots",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentTemplate->self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.slotCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentTemplate",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentTemplate.slotCount",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:ComponentScript",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.lang",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.lang",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.componentId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.isSetup",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.isSetup",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineProps",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineProps",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineEmits",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineEmits",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineExpose",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineExpose",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentScript->self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineOptions",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentScript",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentScript.hasDefineOptions",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:ComponentStyle",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:ComponentStyle"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentStyle->self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.lang",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentStyle",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.lang",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentStyle->self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentStyle",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.componentId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentStyle->self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.isScoped",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentStyle",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.isScoped",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ComponentStyle->self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.isModule",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ComponentStyle",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ComponentStyle.isModule",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Prop",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Prop"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.componentId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.type",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.isRequired",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.isRequired",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.hasDefault",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.hasDefault",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Prop->self:InterfaceProperty:src/schema/nodes.ts:Prop.defaultValue",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Prop",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Prop.defaultValue",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Emit",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Emit"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Emit->self:InterfaceProperty:src/schema/nodes.ts:Emit.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Emit",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Emit.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Emit->self:InterfaceProperty:src/schema/nodes.ts:Emit.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Emit",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Emit.componentId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Emit->self:InterfaceProperty:src/schema/nodes.ts:Emit.payloadType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Emit",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Emit.payloadType",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:Composable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:Composable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.file",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.file",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.startLine",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.startLine",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.endLine",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.endLine",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.isAsync",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.isAsync",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.description",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.returnTypes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.returnTypes",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:Composable->self:InterfaceProperty:src/schema/nodes.ts:Composable.dependencies",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:Composable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:Composable.dependencies",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:ReactiveState",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.composableId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.composableId",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.componentId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.componentId",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.type",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.reactivityType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.reactivityType",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:ReactiveState->self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.initialValue",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:ReactiveState",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:ReactiveState.initialValue",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:SassVariable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:SassVariable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassVariable->self:InterfaceProperty:src/schema/nodes.ts:SassVariable.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassVariable.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassVariable->self:InterfaceProperty:src/schema/nodes.ts:SassVariable.value",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassVariable.value",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassVariable->self:InterfaceProperty:src/schema/nodes.ts:SassVariable.file",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassVariable.file",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassVariable->self:InterfaceProperty:src/schema/nodes.ts:SassVariable.isPrivate",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassVariable.isPrivate",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassVariable->self:InterfaceProperty:src/schema/nodes.ts:SassVariable.usageCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassVariable.usageCount",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:SassMixin",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:SassMixin"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassMixin->self:InterfaceProperty:src/schema/nodes.ts:SassMixin.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassMixin.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassMixin->self:InterfaceProperty:src/schema/nodes.ts:SassMixin.parameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassMixin.parameters",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassMixin->self:InterfaceProperty:src/schema/nodes.ts:SassMixin.content",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassMixin.content",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassMixin->self:InterfaceProperty:src/schema/nodes.ts:SassMixin.file",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassMixin.file",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassMixin->self:InterfaceProperty:src/schema/nodes.ts:SassMixin.usageCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassMixin.usageCount",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts->self:Interface:src/schema/nodes.ts:SassModule",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/nodes.ts",
    "endNodeId": "self:Interface:src/schema/nodes.ts:SassModule"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.path",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.absolutePath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.absolutePath",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.name",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.isPartial",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.isPartial",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.variableCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.variableCount",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.mixinCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.mixinCount",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/nodes.ts:SassModule->self:InterfaceProperty:src/schema/nodes.ts:SassModule.functionCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/nodes.ts:SassModule",
    "endNodeId": "self:InterfaceProperty:src/schema/nodes.ts:SassModule.functionCount",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "imports": [
      "Relationship"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "./types",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/types.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportRelationship",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.imports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.imports",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.importCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.importCount",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasDefaultImport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasDefaultImport",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasNamedImports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasNamedImports",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasNamespaceImport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.hasNamespaceImport",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isTypeOnly",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isTypeOnly",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.importPath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.importPath",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isRelative",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isRelative",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isResolved",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.isResolved",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.resolvedPath",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportRelationship.resolvedPath",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ExportRelationship",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.exports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.exports",
    "index": 0,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.exportCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.exportCount",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.hasNamedExports",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.hasNamedExports",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.hasNamespaceExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.hasNamespaceExport",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.isTypeOnly",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.isTypeOnly",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportRelationship->self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.isReExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportRelationship.isReExport",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Imports",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Imports"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Imports->self:InterfaceProperty:src/schema/relationships.ts:Imports.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Imports",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Imports.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:Imports->self:Interface:src/schema/relationships.ts:ImportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Imports",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.packageName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.packageName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.packageVersion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.packageVersion",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.isDevDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.isDevDependency",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.isPeerDependency",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsFromPackage.isPeerDependency",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ImportsFromPackage->self:Interface:src/schema/relationships.ts:ImportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsFromPackage",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportsTypes",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypes"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypes->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypes.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypes",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypes.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypes->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypes.typeNames",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypes",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypes.typeNames",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ImportsTypes->self:Interface:src/schema/relationships.ts:ImportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypes",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.packageName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.packageName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.packageVersion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.packageVersion",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.typeNames",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsTypesFromPackage.typeNames",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage->self:Interface:src/schema/relationships.ts:ImportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsTypesFromPackage",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ExportsLocal",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportsLocal"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsLocal->self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsLocal",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsLocal->self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.exportNames",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsLocal",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.exportNames",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsLocal->self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.exportKinds",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsLocal",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsLocal.exportKinds",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ExportsLocal->self:Interface:src/schema/relationships.ts:ExportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsLocal",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ExportsDefault",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportsDefault"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsDefault->self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsDefault",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsDefault->self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.export",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsDefault",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.export",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsDefault->self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.expression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsDefault",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.expression",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExportsDefault->self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.exportKind",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExportsDefault",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExportsDefault.exportKind",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Reexports",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Reexports"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Reexports->self:InterfaceProperty:src/schema/relationships.ts:Reexports.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Reexports",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Reexports.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Reexports->self:InterfaceProperty:src/schema/relationships.ts:Reexports.sourceFile",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Reexports",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Reexports.sourceFile",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Reexports->self:InterfaceProperty:src/schema/relationships.ts:Reexports.exportNames",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Reexports",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Reexports.exportNames",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:Reexports->self:Interface:src/schema/relationships.ts:ExportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Reexports",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.packageName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.packageName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.packageVersion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.packageVersion",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsFromPackage->self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.exportNames",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsFromPackage.exportNames",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ReexportsFromPackage->self:Interface:src/schema/relationships.ts:ExportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsFromPackage",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ReexportsAll",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ReexportsAll"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsAll->self:InterfaceProperty:src/schema/relationships.ts:ReexportsAll.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsAll",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsAll.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReexportsAll->self:InterfaceProperty:src/schema/relationships.ts:ReexportsAll.sourceFile",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsAll",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReexportsAll.sourceFile",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/relationships.ts:ReexportsAll->self:Interface:src/schema/relationships.ts:ExportRelationship",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReexportsAll",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExportRelationship",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Extends",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Extends"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Extends->self:InterfaceProperty:src/schema/relationships.ts:Extends.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Extends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Extends.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Extends->self:InterfaceProperty:src/schema/relationships.ts:Extends.isDirectExtension",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Extends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Extends.isDirectExtension",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Extends->self:InterfaceProperty:src/schema/relationships.ts:Extends.inheritanceLevel",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Extends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Extends.inheritanceLevel",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Extends->self:InterfaceProperty:src/schema/relationships.ts:Extends.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Extends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Extends.typeArguments",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:InterfaceExtends",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:InterfaceExtends"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceExtends->self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceExtends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceExtends->self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.isDirectExtension",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceExtends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.isDirectExtension",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceExtends->self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.inheritanceLevel",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceExtends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.inheritanceLevel",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceExtends->self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceExtends",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceExtends.typeArguments",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Implements",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Implements"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Implements->self:InterfaceProperty:src/schema/relationships.ts:Implements.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Implements",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Implements.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Implements->self:InterfaceProperty:src/schema/relationships.ts:Implements.isPartial",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Implements",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Implements.isPartial",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Implements->self:InterfaceProperty:src/schema/relationships.ts:Implements.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Implements",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Implements.typeArguments",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Calls",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Calls"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.callCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.callCount",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.callLocationLines",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.callLocationLines",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.callLocationColumns",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.callLocationColumns",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.arguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.arguments",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.isAsync",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.isAsync",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.isAwait",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.isAwait",
    "index": 6,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.isChained",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.isChained",
    "index": 7,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Calls->self:InterfaceProperty:src/schema/relationships.ts:Calls.isConditional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Calls",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Calls.isConditional",
    "index": 8,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Contains",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Contains"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contains->self:InterfaceProperty:src/schema/relationships.ts:Contains.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contains",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contains.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contains->self:InterfaceProperty:src/schema/relationships.ts:Contains.containerType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contains",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contains.containerType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contains->self:InterfaceProperty:src/schema/relationships.ts:Contains.containmentType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contains",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contains.containmentType",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contains->self:InterfaceProperty:src/schema/relationships.ts:Contains.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contains",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contains.isExported",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:HasMethod",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:HasMethod"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.methodType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.methodType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.visibility",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.visibility",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isGetter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isGetter",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isSetter",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isSetter",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasMethod->self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isOverride",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasMethod",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasMethod.isOverride",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:HasParameter",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:HasParameter"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.index",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.index",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isOptional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isOptional",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isRest",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isRest",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.hasDefaultValue",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.hasDefaultValue",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:HasParameter->self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isDestructured",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:HasParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:HasParameter.isDestructured",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:InterfaceHasProperty",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:InterfaceHasProperty"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceHasProperty->self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceHasProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceHasProperty->self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.index",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceHasProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.index",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:InterfaceHasProperty->self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.isOptional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:InterfaceHasProperty",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:InterfaceHasProperty.isOptional",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ReferencesType",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.referenceType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.referenceType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isArray",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isArray",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isUnion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isUnion",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isIntersection",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isIntersection",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isGeneric",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.isGeneric",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesType->self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesType",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesType.typeArguments",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesVariable->self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesVariable->self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesVariable->self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceCount",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesVariable->self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceLocationLines",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceLocationLines",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ReferencesVariable->self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceLocationColumns",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ReferencesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ReferencesVariable.referenceLocationColumns",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:DependsOn",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:DependsOn"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DependsOn->self:InterfaceProperty:src/schema/relationships.ts:DependsOn.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DependsOn.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DependsOn->self:InterfaceProperty:src/schema/relationships.ts:DependsOn.dependencyType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DependsOn.dependencyType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DependsOn->self:InterfaceProperty:src/schema/relationships.ts:DependsOn.isStrong",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DependsOn.isStrong",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DependsOn->self:InterfaceProperty:src/schema/relationships.ts:DependsOn.isWeak",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DependsOn.isWeak",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DependsOn->self:InterfaceProperty:src/schema/relationships.ts:DependsOn.weight",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DependsOn.weight",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:IsDecoratedBy",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:IsDecoratedBy"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IsDecoratedBy->self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IsDecoratedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IsDecoratedBy->self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.decoratorName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IsDecoratedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.decoratorName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IsDecoratedBy->self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.decoratorArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IsDecoratedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.decoratorArguments",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IsDecoratedBy->self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.targetType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IsDecoratedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IsDecoratedBy.targetType",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Tests",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Tests"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Tests->self:InterfaceProperty:src/schema/relationships.ts:Tests.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Tests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Tests.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Tests->self:InterfaceProperty:src/schema/relationships.ts:Tests.testType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Tests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Tests.testType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Tests->self:InterfaceProperty:src/schema/relationships.ts:Tests.framework",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Tests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Tests.framework",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Tests->self:InterfaceProperty:src/schema/relationships.ts:Tests.assertionCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Tests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Tests.assertionCount",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Renders",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Renders"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.renderCount",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.renderCount",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.renderLocationLines",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.renderLocationLines",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.renderLocationColumns",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.renderLocationColumns",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.isConditional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.isConditional",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Renders->self:InterfaceProperty:src/schema/relationships.ts:Renders.props",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Renders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Renders.props",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:UsesHook",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:UsesHook"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesHook->self:InterfaceProperty:src/schema/relationships.ts:UsesHook.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesHook",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesHook.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesHook->self:InterfaceProperty:src/schema/relationships.ts:UsesHook.hookName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesHook",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesHook.hookName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesHook->self:InterfaceProperty:src/schema/relationships.ts:UsesHook.hookArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesHook",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesHook.hookArguments",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesHook->self:InterfaceProperty:src/schema/relationships.ts:UsesHook.isCustomHook",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesHook",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesHook.isCustomHook",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ASTParentChild",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.childIndex",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.childIndex",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.nodeKind",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.nodeKind",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isStatement",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isStatement",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isExpression",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isExpression",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ASTParentChild->self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isDeclaration",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ASTParentChild",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ASTParentChild.isDeclaration",
    "index": 5,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Suggests",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Suggests"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Suggests->self:InterfaceProperty:src/schema/relationships.ts:Suggests.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Suggests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Suggests.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Suggests->self:InterfaceProperty:src/schema/relationships.ts:Suggests.confidence",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Suggests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Suggests.confidence",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Suggests->self:InterfaceProperty:src/schema/relationships.ts:Suggests.reasoning",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Suggests",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Suggests.reasoning",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:BasedOn",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:BasedOn"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:BasedOn->self:InterfaceProperty:src/schema/relationships.ts:BasedOn.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:BasedOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:BasedOn.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:BasedOn->self:InterfaceProperty:src/schema/relationships.ts:BasedOn.relevance",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:BasedOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:BasedOn.relevance",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:BasedOn->self:InterfaceProperty:src/schema/relationships.ts:BasedOn.context",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:BasedOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:BasedOn.context",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:LeadsTo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:LeadsTo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:LeadsTo->self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:LeadsTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:LeadsTo->self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.strength",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:LeadsTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.strength",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:LeadsTo->self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.reasoning",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:LeadsTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:LeadsTo.reasoning",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Answers",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Answers"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Answers->self:InterfaceProperty:src/schema/relationships.ts:Answers.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Answers",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Answers.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Answers->self:InterfaceProperty:src/schema/relationships.ts:Answers.completeness",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Answers",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Answers.completeness",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Answers->self:InterfaceProperty:src/schema/relationships.ts:Answers.explanation",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Answers",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Answers.explanation",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Contradicts",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Contradicts"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contradicts->self:InterfaceProperty:src/schema/relationships.ts:Contradicts.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contradicts",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contradicts.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contradicts->self:InterfaceProperty:src/schema/relationships.ts:Contradicts.degree",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contradicts",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contradicts.degree",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Contradicts->self:InterfaceProperty:src/schema/relationships.ts:Contradicts.explanation",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Contradicts",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Contradicts.explanation",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Refines",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Refines"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Refines->self:InterfaceProperty:src/schema/relationships.ts:Refines.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Refines",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Refines.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Refines->self:InterfaceProperty:src/schema/relationships.ts:Refines.improvement",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Refines",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Refines.improvement",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Refines->self:InterfaceProperty:src/schema/relationships.ts:Refines.aspect",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Refines",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Refines.aspect",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Identifies",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Identifies"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Identifies->self:InterfaceProperty:src/schema/relationships.ts:Identifies.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Identifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Identifies.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Identifies->self:InterfaceProperty:src/schema/relationships.ts:Identifies.confidence",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Identifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Identifies.confidence",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Identifies->self:InterfaceProperty:src/schema/relationships.ts:Identifies.reasoning",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Identifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Identifies.reasoning",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:EvolvesTo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:EvolvesTo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:EvolvesTo->self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:EvolvesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:EvolvesTo->self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.evolutionType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:EvolvesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.evolutionType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:EvolvesTo->self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.reasoning",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:EvolvesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:EvolvesTo.reasoning",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:AppliesTo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:AppliesTo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:AppliesTo->self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:AppliesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:AppliesTo->self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.strength",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:AppliesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.strength",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:AppliesTo->self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.explanation",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:AppliesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:AppliesTo.explanation",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Implements->self:InterfaceProperty:src/schema/relationships.ts:Implements.completeness",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Implements",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Implements.completeness",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Implements->self:InterfaceProperty:src/schema/relationships.ts:Implements.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Implements",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Implements.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Addresses",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Addresses"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Addresses->self:InterfaceProperty:src/schema/relationships.ts:Addresses.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Addresses",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Addresses.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Addresses->self:InterfaceProperty:src/schema/relationships.ts:Addresses.approach",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Addresses",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Addresses.approach",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Addresses->self:InterfaceProperty:src/schema/relationships.ts:Addresses.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Addresses",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Addresses.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Resolves",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Resolves"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Resolves->self:InterfaceProperty:src/schema/relationships.ts:Resolves.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Resolves",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Resolves.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Resolves->self:InterfaceProperty:src/schema/relationships.ts:Resolves.completeness",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Resolves",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Resolves.completeness",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Resolves->self:InterfaceProperty:src/schema/relationships.ts:Resolves.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Resolves",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Resolves.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Applies",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Applies"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Applies->self:InterfaceProperty:src/schema/relationships.ts:Applies.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Applies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Applies.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Applies->self:InterfaceProperty:src/schema/relationships.ts:Applies.approach",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Applies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Applies.approach",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Applies->self:InterfaceProperty:src/schema/relationships.ts:Applies.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Applies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Applies.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:Modifies",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:Modifies"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Modifies->self:InterfaceProperty:src/schema/relationships.ts:Modifies.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Modifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Modifies.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Modifies->self:InterfaceProperty:src/schema/relationships.ts:Modifies.changeType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Modifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Modifies.changeType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:Modifies->self:InterfaceProperty:src/schema/relationships.ts:Modifies.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:Modifies",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:Modifies.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:TaskDependsOn",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:TaskDependsOn"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskDependsOn->self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskDependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskDependsOn->self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.dependencyType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskDependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.dependencyType",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskDependsOn->self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.notes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskDependsOn",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskDependsOn.notes",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:TaskBlockedBy",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:TaskBlockedBy"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskBlockedBy->self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskBlockedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskBlockedBy->self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.severity",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskBlockedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.severity",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:TaskBlockedBy->self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.reason",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:TaskBlockedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:TaskBlockedBy.reason",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:DecomposesTo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:DecomposesTo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DecomposesTo->self:InterfaceProperty:src/schema/relationships.ts:DecomposesTo.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DecomposesTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DecomposesTo.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ExecutedBy",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ExecutedBy"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ExecutedBy->self:InterfaceProperty:src/schema/relationships.ts:ExecutedBy.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ExecutedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ExecutedBy.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:VerifiedBy",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:VerifiedBy"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:VerifiedBy->self:InterfaceProperty:src/schema/relationships.ts:VerifiedBy.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:VerifiedBy",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:VerifiedBy.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ComponentRenders",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ComponentRenders"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ComponentRenders->self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ComponentRenders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ComponentRenders->self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.isConditional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ComponentRenders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.isConditional",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ComponentRenders->self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.isLoop",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ComponentRenders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.isLoop",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ComponentRenders->self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.key",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ComponentRenders",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ComponentRenders.key",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ProvidesProps",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ProvidesProps"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ProvidesProps->self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ProvidesProps",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ProvidesProps->self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.props",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ProvidesProps",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.props",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ProvidesProps->self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.bindings",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ProvidesProps",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ProvidesProps.bindings",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ListensTo",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ListensTo"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ListensTo->self:InterfaceProperty:src/schema/relationships.ts:ListensTo.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ListensTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ListensTo.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ListensTo->self:InterfaceProperty:src/schema/relationships.ts:ListensTo.events",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ListensTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ListensTo.events",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ListensTo->self:InterfaceProperty:src/schema/relationships.ts:ListensTo.handlers",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ListensTo",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ListensTo.handlers",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:UsesSlot",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:UsesSlot"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesSlot->self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesSlot",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesSlot->self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesSlot",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.name",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesSlot->self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.isScoped",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesSlot",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.isScoped",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesSlot->self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.hasDefaultContent",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesSlot",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesSlot.hasDefaultContent",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:DefinesVueComponent",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:DefinesVueComponent"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:DefinesVueComponent->self:InterfaceProperty:src/schema/relationships.ts:DefinesVueComponent.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:DefinesVueComponent",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:DefinesVueComponent.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:UsesComposable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:UsesComposable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesComposable->self:InterfaceProperty:src/schema/relationships.ts:UsesComposable.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesComposable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesComposable.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportsAuto",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsAuto->self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsAuto->self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.symbol",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.symbol",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsAuto->self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.source",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.source",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsAuto->self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.isGlobal",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.isGlobal",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsAuto->self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.pluginName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsAuto.pluginName",
    "index": 4,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:RegistersAuto",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:RegistersAuto"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:RegistersAuto->self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:RegistersAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:RegistersAuto->self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.componentName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:RegistersAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.componentName",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:RegistersAuto->self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.source",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:RegistersAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.source",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:RegistersAuto->self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.pluginName",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:RegistersAuto",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:RegistersAuto.pluginName",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:ImportsSass",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:ImportsSass"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsSass->self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsSass",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsSass->self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.path",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsSass",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.path",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsSass->self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.isPartial",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsSass",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.isPartial",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:ImportsSass->self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.namespace",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:ImportsSass",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:ImportsSass.namespace",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:UsesVariable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:UsesVariable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesVariable->self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesVariable->self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.variable",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.variable",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesVariable->self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.context",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.context",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:UsesVariable->self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.isOverride",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:UsesVariable",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:UsesVariable.isOverride",
    "index": 3,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts->self:Interface:src/schema/relationships.ts:IncludesMixin",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/relationships.ts",
    "endNodeId": "self:Interface:src/schema/relationships.ts:IncludesMixin"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IncludesMixin->self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IncludesMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IncludesMixin->self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.mixin",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IncludesMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.mixin",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/relationships.ts:IncludesMixin->self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.parameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/relationships.ts:IncludesMixin",
    "endNodeId": "self:InterfaceProperty:src/schema/relationships.ts:IncludesMixin.parameters",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:GraphEntity",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:GraphEntity"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:GraphEntity->self:InterfaceProperty:src/schema/types.ts:GraphEntity.nodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:GraphEntity",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:GraphEntity.nodeId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:GraphEntity->self:InterfaceProperty:src/schema/types.ts:GraphEntity.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:GraphEntity",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:GraphEntity.codebaseId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:Node",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:Node"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Node->self:InterfaceProperty:src/schema/types.ts:Node.labels",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Node",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Node.labels",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Node->self:InterfaceProperty:src/schema/types.ts:Node.hash",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Node",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Node.hash",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Node->self:InterfaceProperty:src/schema/types.ts:Node.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Node",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Node.createdAt",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Node->self:InterfaceProperty:src/schema/types.ts:Node.updatedAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Node",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Node.updatedAt",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:Node->self:Interface:src/schema/types.ts:GraphEntity",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:Node",
    "endNodeId": "self:Interface:src/schema/types.ts:GraphEntity",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:Relationship",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:Relationship"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.type",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.type",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.startNodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.startNodeId",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.endNodeId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.endNodeId",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.hash",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.hash",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.createdAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.createdAt",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.updatedAt",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.updatedAt",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.isCrossCodebase",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.isCrossCodebase",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.sourceCodebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.sourceCodebaseId",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.targetCodebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.targetCodebaseId",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedComponent",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedComponent",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedComposable",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedComposable",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedImport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship.unresolvedImport",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Relationship->self:InterfaceProperty:src/schema/types.ts:Relationship._schemaVersion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Relationship._schemaVersion",
    "index": 12,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:Relationship->self:Interface:src/schema/types.ts:GraphEntity",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:Relationship",
    "endNodeId": "self:Interface:src/schema/types.ts:GraphEntity",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:CodeLocation",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:CodeLocation"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.file",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.file",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.startLine",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.startLine",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.endLine",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.endLine",
    "index": 2,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.startColumn",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.startColumn",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.endColumn",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.endColumn",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.offset",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.offset",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeLocation->self:InterfaceProperty:src/schema/types.ts:CodeLocation.length",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeLocation.length",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:CodeElement",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:CodeElement"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.documentation",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.documentation",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.sourceCode",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.sourceCode",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.isExported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.isExported",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.isDefaultExport",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.isDefaultExport",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:CodeElement->self:InterfaceProperty:src/schema/types.ts:CodeElement.visibility",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:CodeElement.visibility",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:CodeElement->self:Interface:src/schema/types.ts:Node",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:Interface:src/schema/types.ts:Node",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:CodeElement->self:Interface:src/schema/types.ts:CodeLocation",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "endNodeId": "self:Interface:src/schema/types.ts:CodeLocation",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:NamedType",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:NamedType"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:NamedType->self:InterfaceProperty:src/schema/types.ts:NamedType.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:NamedType",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:NamedType.description",
    "index": 0,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:NamedType->self:InterfaceProperty:src/schema/types.ts:NamedType.typeParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:NamedType",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:NamedType.typeParameters",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:NamedType->self:InterfaceProperty:src/schema/types.ts:NamedType.decorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:NamedType",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:NamedType.decorators",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:NamedType->self:Interface:src/schema/types.ts:CodeElement",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:NamedType",
    "endNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:Callable",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:Callable"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.isAsync",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.isAsync",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.description",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.description",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.returnType",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.returnType",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.typeParameters",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.typeParameters",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.decorators",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.decorators",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.complexity",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.complexity",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Callable->self:InterfaceProperty:src/schema/types.ts:Callable.loc",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Callable.loc",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:INTERFACE_EXTENDS:self:Interface:src/schema/types.ts:Callable->self:Interface:src/schema/types.ts:CodeElement",
    "codebaseId": "self",
    "type": "INTERFACE_EXTENDS",
    "startNodeId": "self:Interface:src/schema/types.ts:Callable",
    "endNodeId": "self:Interface:src/schema/types.ts:CodeElement",
    "isDirectExtension": true,
    "inheritanceLevel": 1
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:TypeParameter",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:TypeParameter"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeParameter->self:InterfaceProperty:src/schema/types.ts:TypeParameter.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeParameter.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeParameter->self:InterfaceProperty:src/schema/types.ts:TypeParameter.constraint",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeParameter.constraint",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeParameter->self:InterfaceProperty:src/schema/types.ts:TypeParameter.default",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeParameter",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeParameter.default",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:Decorator",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:Decorator"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Decorator->self:InterfaceProperty:src/schema/types.ts:Decorator.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Decorator",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Decorator.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Decorator->self:InterfaceProperty:src/schema/types.ts:Decorator.arguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Decorator",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Decorator.arguments",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Decorator->self:InterfaceProperty:src/schema/types.ts:Decorator.sourceCode",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Decorator",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Decorator.sourceCode",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:TypeReference",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:TypeReference"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.name",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.name",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.typeArguments",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.typeArguments",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isArray",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isArray",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isUnion",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isUnion",
    "index": 3,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isIntersection",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isIntersection",
    "index": 4,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isLiteral",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isLiteral",
    "index": 5,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isTuple",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isTuple",
    "index": 6,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isFunction",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isFunction",
    "index": 7,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isConditional",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isConditional",
    "index": 8,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isIndexed",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isIndexed",
    "index": 9,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isKeyof",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isKeyof",
    "index": 10,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isTypeof",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isTypeof",
    "index": 11,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.isImported",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.isImported",
    "index": 12,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:TypeReference->self:InterfaceProperty:src/schema/types.ts:TypeReference.sourceModule",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:TypeReference",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:TypeReference.sourceModule",
    "index": 13,
    "isOptional": true
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts->self:Interface:src/schema/types.ts:Neo4jMetadata",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/types.ts",
    "endNodeId": "self:Interface:src/schema/types.ts:Neo4jMetadata"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Neo4jMetadata->self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.indexProperties",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Neo4jMetadata",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.indexProperties",
    "index": 0,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Neo4jMetadata->self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.searchProperties",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Neo4jMetadata",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.searchProperties",
    "index": 1,
    "isOptional": true
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/schema/types.ts:Neo4jMetadata->self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.queryHints",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/schema/types.ts:Neo4jMetadata",
    "endNodeId": "self:InterfaceProperty:src/schema/types.ts:Neo4jMetadata.queryHints",
    "index": 2,
    "isOptional": true
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Package:path",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Package:path",
    "imports": [
      "path"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "path",
    "isRelative": false,
    "isResolved": true,
    "packageName": "path"
  },
  {
    "nodeId": "self:IMPORTS_FROM_PACKAGE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Package:fs",
    "codebaseId": "self",
    "type": "IMPORTS_FROM_PACKAGE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Package:fs",
    "imports": [
      "fs"
    ],
    "importCount": 1,
    "hasDefaultImport": false,
    "hasNamedImports": false,
    "hasNamespaceImport": true,
    "isTypeOnly": false,
    "importPath": "fs",
    "isRelative": false,
    "isResolved": true,
    "packageName": "fs"
  },
  {
    "nodeId": "self:IMPORTS:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "codebaseId": "self",
    "type": "IMPORTS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/schema/index.ts",
    "imports": [
      "Node",
      "Relationship",
      "DependsOn"
    ],
    "importCount": 3,
    "hasDefaultImport": false,
    "hasNamedImports": true,
    "hasNamespaceImport": false,
    "isTypeOnly": false,
    "importPath": "../schema/index",
    "isRelative": true,
    "isResolved": true,
    "resolvedPath": "/Users/zach/Dev/SAGE/cli/src/schema/index.ts"
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/transformer/graph-transformer.ts:TransformResult->self:InterfaceProperty:src/transformer/graph-transformer.ts:TransformResult.nodes",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "endNodeId": "self:InterfaceProperty:src/transformer/graph-transformer.ts:TransformResult.nodes",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/transformer/graph-transformer.ts:TransformResult->self:InterfaceProperty:src/transformer/graph-transformer.ts:TransformResult.relationships",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "endNodeId": "self:InterfaceProperty:src/transformer/graph-transformer.ts:TransformResult.relationships",
    "index": 1,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_INTERFACE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "codebaseId": "self",
    "type": "DEFINES_INTERFACE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig->self:InterfaceProperty:src/transformer/graph-transformer.ts:GraphTransformerConfig.codebaseId",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "endNodeId": "self:InterfaceProperty:src/transformer/graph-transformer.ts:GraphTransformerConfig.codebaseId",
    "index": 0,
    "isOptional": false
  },
  {
    "nodeId": "self:DEFINES_CLASS:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "codebaseId": "self",
    "type": "DEFINES_CLASS",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer"
  },
  {
    "nodeId": "self:HAS_PROPERTY:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config",
    "codebaseId": "self",
    "type": "HAS_PROPERTY",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config"
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config->self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "referenceType": "property",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "referenceType": "variable",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      979
    ],
    "arguments": [
      "`Transformed to ${uniqueNodes.length} nodes and ${enhancedRelationships.length} relationships`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      979
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      436
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:nodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodes"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:relationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:nodes.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      517
    ],
    "arguments": [
      "...result.nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      517
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      574
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:relationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      552
    ],
    "arguments": [
      "...result.relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      552
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deduplicateNodes",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deduplicateNodes",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      675
    ],
    "arguments": [
      "nodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:uniqueNodes->self:Variable:src/transformer/graph-transformer.ts:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      697
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deduplicateRelationships",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deduplicateRelationships",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      737
    ],
    "arguments": [
      "relationships"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships->self:Variable:src/transformer/graph-transformer.ts:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      767
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deriveAdditionalRelationships",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deriveAdditionalRelationships",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      900
    ],
    "arguments": [
      "uniqueRelationships",
      "uniqueNodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      935
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      956
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1009
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1266
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNodes"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.ensureNodeLabels",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.ensureNodeLabels",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1163
    ],
    "arguments": [
      "uniqueNodes"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:enhancedNodes->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1185
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1230
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeMap"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1472
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:nodeMap.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodeMap.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1487
    ],
    "arguments": [
      "node.nodeId",
      "node"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1552
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1512
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:Array.from",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.from",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1541
    ],
    "arguments": [
      "nodeMap.values()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:nodeMap.values",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodeMap.values",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1552
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:relationshipMap",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipMap"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1812
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipMap.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipMap.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1835
    ],
    "arguments": [
      "relationship.nodeId",
      "relationship"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1924
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Variable:src/transformer/graph-transformer.ts:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1876
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:Array.from",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.from",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1913
    ],
    "arguments": [
      "relationshipMap.values()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipMap.values",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipMap.values",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1924
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_TYPE:self:Parameter:src/transformer/graph-transformer.ts:validate:result->self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "codebaseId": "self",
    "type": "REFERENCES_TYPE",
    "startNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "referenceType": "parameter",
    "isArray": false,
    "isUnion": false,
    "isIntersection": false,
    "isGeneric": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9276
    ],
    "arguments": [
      "'Graph model validation successful'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9276
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidNodes"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.nodes.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.nodes.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2186
    ],
    "arguments": [
      "node => !this.isValidNode(node)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:invalidNodes->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2186
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2385
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.error",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.error",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2731
    ],
    "arguments": [
      "'First invalid relationship:'",
      "invalidRelationships[0]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidRelationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.relationships.filter",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.relationships.filter",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      4411
    ],
    "arguments": [
      "rel => {\n      // Skip validation for all IMPORTS_FROM_PACKAGE relationships\n      if (rel.type === 'IMPORTS_FROM_PACKAGE') {\n        return false;\n      }\n      \n      // Skip validation for EXPORTS_LOCAL relationships with endNodeId 'local'\n      if (rel.type === 'EXPORTS_LOCAL' && rel.endNodeId === 'local') {\n        return false;\n      }\n      \n      // Skip validation for EXTENDS and IMPLEMENTS relationships that reference types by name\n      if ((rel.type === 'EXTENDS' || rel.type === 'IMPLEMENTS' || rel.type === 'INTERFACE_EXTENDS') &&\n          (typeof rel.endNodeId === 'string' && !rel.endNodeId.startsWith(`${rel.codebaseId}:`))) {\n        return false;\n      }\n      \n      // Skip validation for REFERENCES_VARIABLE and REFERENCES_TYPE relationships\n      // These might reference global variables or types from external libraries\n      if (rel.type === 'REFERENCES_VARIABLE' || rel.type === 'REFERENCES_TYPE') {\n        // For simplicity, we'll skip validation for all REFERENCES_VARIABLE and REFERENCES_TYPE relationships\n        // This is because they might reference variables or types from external libraries,\n        // or variables that are not explicitly declared in the codebase (like globals)\n        return false;\n      }\n      \n      // Skip validation for DEPENDS_ON relationships derived from other relationships\n      if (rel.type === 'DEPENDS_ON') {\n        return false;\n      }\n      \n      // Handle relationships with unresolved references\n      if (rel.unresolvedComponent || rel.unresolvedComposable || rel.unresolvedImport) {\n        console.log(`Skipping validation for unresolved reference: ${rel.type} ${rel.nodeId}`);\n        return false;\n      }\n      \n      // Skip validation for IMPORTS relationships that reference directories or non-code files\n      if (rel.type === 'IMPORTS' &&\n          typeof rel.endNodeId === 'string') {\n        \n        // Skip if not a node ID format (doesn't start with codebaseId)\n        if (!rel.endNodeId.startsWith(`${rel.codebaseId}:`)) {\n          return false;\n        }\n        \n        // Get the file path from the node ID (skip codebaseId and type)\n        const parts = rel.endNodeId.split(':');\n        const filePath = parts.length > 2 ? parts.slice(2).join(':') : '';\n        \n        // Skip if no file extension (likely a directory)\n        if (!path.extname(filePath)) {\n          return false;\n        }\n        \n        // Check if the path exists as a directory\n        try {\n          if (fs.existsSync(filePath) && fs.statSync(filePath).isDirectory()) {\n            return false;\n          }\n        } catch (e) {\n          // Ignore errors\n        }\n        \n        // Skip if JSON or other non-code files\n        const ext = path.extname(filePath).toLowerCase();\n        if (['.json', '.css', '.scss', '.less', '.svg', '.png', '.jpg', '.jpeg', '.gif'].includes(ext)) {\n          return false;\n        }\n        \n        // Handle directory imports that were resolved to .ts files\n        // Use type assertion since importPath is not in the base Relationship type\n        const importRel = rel as any;\n        if (ext === '.ts' && importRel.importPath && !importRel.importPath.endsWith('.ts')) {\n          const importPath = importRel.importPath;\n          if (importPath.startsWith('.') && !importPath.includes('.')) {\n            // This is likely a directory import\n            return false;\n          }\n        }\n      }\n      \n      // Check if start node exists\n      const startNodeExists = nodeIds.has(rel.startNodeId);\n      \n      // Check if end node exists, with flexible extension matching for File nodes\n      let endNodeExists = nodeIds.has(rel.endNodeId);\n      \n      // If end node doesn't exist directly, try flexible matching for File nodes\n      if (!endNodeExists && rel.endNodeId.includes(':File:')) {\n        const parts = rel.endNodeId.split(':');\n        const filePath = parts.length > 2 ? parts.slice(2).join(':') : ''; // Remove 'codebaseId:File:' prefix\n        const mappedNodeId = filePathToNodeId.get(filePath);\n        endNodeExists = !!mappedNodeId;\n        \n        // Update the relationship's endNodeId to use the correct node ID\n        if (endNodeExists && mappedNodeId) {\n          rel.endNodeId = mappedNodeId;\n        }\n      }\n      \n      return !startNodeExists || !endNodeExists;\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:invalidRelationships->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2531
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2776
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.nodes.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.nodes.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      2923
    ],
    "arguments": [
      "node => node.nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:nodeIds->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      2923
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3137
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:node.nodeId.startsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:node.nodeId.startsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3163
    ],
    "arguments": [
      "'File:'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3710
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:node.nodeId.substring",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:node.nodeId.substring",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3223
    ],
    "arguments": [
      "5"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:filePath->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3223
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePathToNodeId.set",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePathToNodeId.set",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3681
    ],
    "arguments": [
      "tsPath",
      "node.nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3681
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3584
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePath.endsWith",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePath.endsWith",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3584
    ],
    "arguments": [
      "'.js'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:jsPath"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePath.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePath.replace",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      3637
    ],
    "arguments": [
      "/\\.js$/",
      "'.ts'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:jsPath->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3478
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3543
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:tsPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:tsPath->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3637
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      3702
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:builtInModules",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:builtInModules"
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      4411
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6016
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:parts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:parts"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:filePath->self:Variable:src/transformer/graph-transformer.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8363
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6970
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:statSync",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:statSync",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      6961
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:ext",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:ext"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:ext->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:ext",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7184
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:ext",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:ext",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7560
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:importRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:importRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7602
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:importPath",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importPath"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:importPath->self:Variable:src/transformer/graph-transformer.ts:importRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:importPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7671
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:importPath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importPath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7738
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:startNodeExists"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:startNodeExists->self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      7944
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:endNodeExists"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:endNodeExists->self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8090
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8758
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:mappedNodeId->self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8459
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:mappedNodeId->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8480
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8685
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8738
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      8987
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.warn",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.warn",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      8942
    ],
    "arguments": [
      "'First dangling relationship:'",
      "danglingRelationships[0]"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode->self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode->self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9542
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode->self:Method:src/transformer/graph-transformer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.isArray",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9506
    ],
    "arguments": [
      "node.labels"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Method:src/transformer/graph-transformer.ts:nodes.map",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.map",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      9768
    ],
    "arguments": [
      "node => {\n      // Create a new node object to avoid modifying the original\n      const enhancedNode = { ...node };\n      \n      // Ensure labels is an array\n      if (!Array.isArray(enhancedNode.labels)) {\n        enhancedNode.labels = [];\n      }\n      \n      // Add CodeElement label to nodes that implement the CodeElement interface\n      if ('name' in node && 'file' in node && 'startLine' in node && 'endLine' in node) {\n        if (!enhancedNode.labels.includes('CodeElement')) {\n          enhancedNode.labels.push('CodeElement');\n        }\n      }\n      \n      return enhancedNode;\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9768
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNode"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:enhancedNode->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      9886
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10354
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10197
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship->self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship->self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      10654
    ]
  },
  {
    "nodeId": "self:HAS_METHOD:self:Class:src/transformer/graph-transformer.ts:GraphTransformer->self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "codebaseId": "self",
    "type": "HAS_METHOD",
    "startNodeId": "self:Class:src/transformer/graph-transformer.ts:GraphTransformer",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16584
    ],
    "arguments": [
      "`Total relationships after derivation: ${enhancedRelationships.length}`"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16584
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11155
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:nodes.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11262
    ],
    "arguments": [
      "node => nodeMap.set(node.nodeId, node)"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11262
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11284
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:node",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:node",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11309
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationships.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationships.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11450
    ],
    "arguments": [
      "rel => {\n      const relType = rel.type;\n      if (!relationshipsByType.has(relType)) {\n        relationshipsByType.set(relType, []);\n      }\n      relationshipsByType.get(relType)?.push(rel);\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11450
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:relType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relType"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:relType->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:relType",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11503
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15061
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:relType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11644
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11659
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      11760
    ],
    "arguments": [
      "(rels, type) => {\n      console.log(`  ${type}: ${rels.length}`);\n    }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:type",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:type",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11829
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rels",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rels",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      11838
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.has",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.has",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15061
    ],
    "arguments": [
      "'REFERENCES_VARIABLE'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:callsRelationships"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.get",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.get",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15152
    ],
    "arguments": [
      "'REFERENCES_VARIABLE'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:callsRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12013
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12249
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnMap"
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:callsRelationships.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:callsRelationships.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      12249
    ],
    "arguments": [
      "callsRel => {\n        const dependsOnId = `${this.config.codebaseId}:DEPENDS_ON:${callsRel.startNodeId}->${callsRel.endNodeId}`;\n        \n        if (!dependsOnMap.has(dependsOnId)) {\n          const dependsOnRel: DependsOn = {\n            nodeId: dependsOnId,\n            codebaseId: this.config.codebaseId,\n            type: 'DEPENDS_ON',\n            startNodeId: callsRel.startNodeId,\n            endNodeId: callsRel.endNodeId,\n            dependencyType: 'call',\n            isStrong: true,\n            isWeak: false,\n            weight: 1\n          };\n          dependsOnMap.set(dependsOnId, dependsOnRel);\n        } else {\n          // Increment the weight if the relationship already exists\n          const existingRel = dependsOnMap.get(dependsOnId);\n          if (existingRel && 'weight' in existingRel) {\n            (existingRel as any).weight += 1;\n          }\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:dependsOnId->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12383
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16490
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16038
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15701
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      12687
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16051
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:existingRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16182
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:existingRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16199
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16282
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:enhancedRelationships.push",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:enhancedRelationships.push",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16409
    ],
    "arguments": [
      "...dependsOnMap.values()"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      16681
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:dependsOnMap.values",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:dependsOnMap.values",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      16439
    ],
    "arguments": [],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13552
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      13817
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:referencesTypeRelationships.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:referencesTypeRelationships.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      13817
    ],
    "arguments": [
      "refRel => {\n        const dependsOnId = `${this.config.codebaseId}:DEPENDS_ON:${refRel.startNodeId}->${refRel.endNodeId}`;\n        \n        if (!dependsOnMap.has(dependsOnId)) {\n          const dependsOnRel: DependsOn = {\n            nodeId: dependsOnId,\n            codebaseId: this.config.codebaseId,\n            type: 'DEPENDS_ON',\n            startNodeId: refRel.startNodeId,\n            endNodeId: refRel.endNodeId,\n            dependencyType: 'reference',\n            isStrong: false,\n            isWeak: true,\n            weight: 1\n          };\n          dependsOnMap.set(dependsOnId, dependsOnRel);\n        } else {\n          // Increment the weight if the relationship already exists\n          const existingRel = dependsOnMap.get(dependsOnId);\n          if (existingRel && 'weight' in existingRel) {\n            (existingRel as any).weight += 1;\n          }\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:dependsOnId->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15562
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15862
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts->self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/transformer/graph-transformer.ts",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships"
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15152
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      15424
    ]
  },
  {
    "nodeId": "self:CALLS:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:referencesVarRelationships.forEach",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:referencesVarRelationships.forEach",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      15424
    ],
    "arguments": [
      "refRel => {\n        const dependsOnId = `${this.config.codebaseId}:DEPENDS_ON:${refRel.startNodeId}->${refRel.endNodeId}`;\n        \n        if (!dependsOnMap.has(dependsOnId)) {\n          const dependsOnRel: DependsOn = {\n            nodeId: dependsOnId,\n            codebaseId: this.config.codebaseId,\n            type: 'DEPENDS_ON',\n            startNodeId: refRel.startNodeId,\n            endNodeId: refRel.endNodeId,\n            dependencyType: 'reference',\n            isStrong: false,\n            isWeak: true,\n            weight: 1\n          };\n          dependsOnMap.set(dependsOnId, dependsOnRel);\n        } else {\n          // Increment the weight if the relationship already exists\n          const existingRel = dependsOnMap.get(dependsOnId);\n          if (existingRel && 'weight' in existingRel) {\n            (existingRel as any).weight += 1;\n          }\n        }\n      }"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": true
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Function:src/utils/id-generator.ts:generateNodeId",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:generateNodeId->self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:generateNodeId->self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:generateNodeId->self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "index": 2,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:codebaseId.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:codebaseId.replace",
    "callCount": 1,
    "callLocationLines": [
      18
    ],
    "callLocationColumns": [
      43
    ],
    "arguments": [
      "/:/g",
      "'_'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId->self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      18
    ],
    "referenceLocationColumns": [
      43
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedNodeType"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:nodeType.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeType.replace",
    "callCount": 1,
    "callLocationLines": [
      19
    ],
    "callLocationColumns": [
      48
    ],
    "arguments": [
      "/:/g",
      "'_'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:sanitizedNodeType->self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      19
    ],
    "referenceLocationColumns": [
      48
    ]
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedIdentifier"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:uniqueIdentifier.replace",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:uniqueIdentifier.replace",
    "callCount": 1,
    "callLocationLines": [
      20
    ],
    "callLocationColumns": [
      32
    ],
    "arguments": [
      "/:/g",
      "'_'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:sanitizedIdentifier->self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      20
    ],
    "referenceLocationColumns": [
      32
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      77
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      100
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      121
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:extractCodebaseId->self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:DEFINES_VARIABLE:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "DEFINES_VARIABLE",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts"
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:extractCodebaseId->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      371
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      371
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:extractCodebaseId->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      399
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Function:src/utils/id-generator.ts:extractNodeType",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:extractNodeType->self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:extractNodeType->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      630
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      630
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:extractNodeType->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      658
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      913
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      913
    ]
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:parts.slice(2).join",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:parts.slice(2).join",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1018
    ],
    "arguments": [
      "':'"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:parts.slice",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:parts.slice",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1018
    ],
    "arguments": [
      "2"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": true,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1018
    ]
  },
  {
    "nodeId": "self:DEFINES_FUNCTION:self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts->self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "codebaseId": "self",
    "type": "DEFINES_FUNCTION",
    "startNodeId": "self:File:/Users/zach/Dev/SAGE/cli/src/utils/id-generator.ts",
    "endNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase"
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "index": 0,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:HAS_PARAMETER:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "codebaseId": "self",
    "type": "HAS_PARAMETER",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "index": 1,
    "isOptional": false,
    "isRest": false,
    "hasDefaultValue": false,
    "isDestructured": false
  },
  {
    "nodeId": "self:CALLS:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "codebaseId": "self",
    "type": "CALLS",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "callCount": 1,
    "callLocationLines": [
      21
    ],
    "callLocationColumns": [
      1365
    ],
    "arguments": [
      "nodeId"
    ],
    "isAsync": false,
    "isAwait": false,
    "isChained": false,
    "isConditional": false
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1383
    ]
  },
  {
    "nodeId": "self:REFERENCES_VARIABLE:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "codebaseId": "self",
    "type": "REFERENCES_VARIABLE",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "referenceType": "read",
    "referenceCount": 1,
    "referenceLocationLines": [
      21
    ],
    "referenceLocationColumns": [
      1395
    ]
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:record.labels.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:record.labels.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Method:scripts/analyze-codebase-relationships.ts:queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Method:scripts/cleanup-codebase.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Method:scripts/cleanup-codebase.ts:queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Method:scripts/fix-cross-codebase-relationships.ts:queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:fs.existsSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:JSON.parse",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:JSON.parse",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:fs.readFileSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:nodes.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:nodes.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:record.get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:record.get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:relsByType[rel.type].push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:relsByType[rel.type].push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:rels.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:rels.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:batch.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:batch.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Method:scripts/import-json-to-neo4j.ts:queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Function:src/cli.ts:analyzeProject",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:analyzeProject",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Method:src/cli.ts:args.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:args.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Function:src/cli.ts:ingestProject",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:ingestProject",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Function:src/cli.ts:queryGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:queryGraph",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:printUsage->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:printUsage",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:args.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:args.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:args.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:args.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.resolve",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:process.cwd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:process.cwd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:fs.existsSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.process",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:codeGraph.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Function:src/cli.ts:printUsage",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Function:src/cli.ts:printUsage",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:args.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:args.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:process.cwd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:process.cwd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('nodeCount').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('nodeCount').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('deletedCount').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('deletedCount').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('deletedRelCount').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('deletedRelCount').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:analysisCodeGraph.process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:analysisCodeGraph.process",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:analysisCodeGraph.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:analysisCodeGraph.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:codeGraph.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:fs.existsSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:JSON.parse",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:JSON.parse",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:fs.readFileSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:nodes.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:nodes.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:batch.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:batch.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:record.get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:record.get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:relsByType[rel.type].push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:relsByType[rel.type].push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Method:src/cli.ts:rels.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Method:src/cli.ts:rels.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.argv.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.argv.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.resolve",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:process.cwd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:process.cwd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.process",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:record.labels.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:record.labels.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Method:src/examples/analyze-project.ts:codeGraph.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Method:src/examples/analyze-project.ts:codeGraph.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.findSourceFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.findSourceFiles",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:sourceFiles.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:sourceFiles.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.tsParser.initialize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.tsParser.initialize",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:performance.now",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:performance.now",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:file.endsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:file.endsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.vueParser.parseFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.vueParser.parseFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.tsParser.parseFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.tsParser.parseFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:parseResults.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:parseResults.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - parseStart ).toFixed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - parseStart ).toFixed",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.resolveComponentReferences",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.resolveComponentReferences",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - resolveStart ).toFixed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - resolveStart ).toFixed",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.transformer.transform",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.transformer.transform",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.transformer.validate",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.transformer.validate",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - transformStart ).toFixed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - transformStart ).toFixed",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.packageParser.parseAllPackageJsonFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.packageParser.parseAllPackageJsonFiles",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:( performance.now() - packageStart ).toFixed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:( performance.now() - packageStart ).toFixed",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.saveResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.saveResults",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Method:src/index.ts:this.importToNeo4j",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Method:src/index.ts:this.importToNeo4j",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:fs.readdirSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:fs.readdirSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.isDirectory",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.isDirectory",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.name.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.name.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Function:src/index.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Function:src/index.ts:walk",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.isFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.isFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:entry.name.endsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:entry.name.endsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:walk->self:Method:src/index.ts:files.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:walk",
    "endNodeId": "self:Method:src/index.ts:files.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Function:src/index.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Function:src/index.ts:walk",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:fs.writeFileSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:fs.writeFileSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:importer.import",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:importer.import",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:record.labels.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:record.labels.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Method:src/index.ts:importer.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Method:src/index.ts:importer.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:node.labels.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:node.labels.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:componentRegistry.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:componentRegistry.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:['RENDERS', 'PROVIDES_PROPS', 'LISTENS_TO', 'USES_SLOT'].includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:['RENDERS', 'PROVIDES_PROPS', 'LISTENS_TO', 'USES_SLOT'].includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:relationship.endNodeId.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:relationship.endNodeId.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:componentRegistry.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:componentRegistry.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Method:src/index.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Method:src/index.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Method:src/index.ts:this.queryExecutor.executeCodebaseScopedQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeCodebaseScopedQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Method:src/index.ts:this.queryExecutor.executeCrossCodebaseQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeCrossCodebaseQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.close->self:Method:src/index.ts:this.queryExecutor.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.close",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Method:src/index.ts:this.queryExecutor.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:process.argv.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.argv.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:process.exit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.exit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:path.resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.resolve",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:process.cwd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:process.cwd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Method:src/index.ts:codeGraph.process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Method:src/index.ts:codeGraph.process",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:createSchemaConstraints",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:createSchemaConstraints",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:verifySchemaConstraints",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:verifySchemaConstraints",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:verifySession.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:verifySession.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.isMigrationNeeded",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.isMigrationNeeded",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.createBackup",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.createBackup",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:SchemaMigration.migrateAllToCurrentVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SchemaMigration.migrateAllToCurrentVersion",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:migrationSession.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:migrationSession.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Function:src/neo4j/importer.ts:createCodebaseSchema",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Function:src/neo4j/importer.ts:createCodebaseSchema",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:codebaseSession.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:codebaseSession.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.importNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importNodes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.importRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importRelationships",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.updateNodeProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.updateNodeProperties",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.linkInsightsToCodebases",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.linkInsightsToCodebases",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Method:src/neo4j/importer.ts:this.driver.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:Math.ceil",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.ceil",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:Math.min",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.min",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:nodes.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:nodes.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Method:src/neo4j/importer.ts:this.importNodeBatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importNodeBatch",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:nodes.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:nodes.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:createNodesResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:this.prepareNodeForImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareNodeForImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Math.ceil",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.ceil",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:relationships.find",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:relationships.find",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:Math.min",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Math.min",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:relationships.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:relationships.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Method:src/neo4j/importer.ts:this.importRelationshipBatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.importRelationshipBatch",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.groupRelationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.groupRelationshipsByType",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:rels.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:rels.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.prepareRelationshipForImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareRelationshipForImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:this.prepareRelationshipPropertiesForImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.prepareRelationshipPropertiesForImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:groups[rel.type].push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:groups[rel.type].push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Method:src/neo4j/importer.ts:Object.entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.entries",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:labels.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:labels.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:labels.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:labels.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:node.nodeId.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:node.nodeId.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:SCHEMA_METADATA.relationshipTypes.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:SCHEMA_METADATA.relationshipTypes.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Method:src/neo4j/importer.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:obj.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:obj.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.from(obj).map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.from(obj).map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.from",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.from",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:obj.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:obj.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:Object.prototype.hasOwnProperty.call",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Object.prototype.hasOwnProperty.call",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.convertComplexPropertiesToPrimitives",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Method:src/neo4j/importer.ts:this.checkForMapObjects",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.checkForMapObjects",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:codebaseResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:codebaseResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:importCountResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:importCountResult.records[0].get('updatedNodes').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:importCountResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:importCountResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get('updatedNodes').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:exportCountResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get('updatedNodes').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get('updatedNodes').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:crossCodebaseImportResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession->self:Method:src/neo4j/importer.ts:this.driver.session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.getSession",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.session",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:insightId.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:insightId.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Method:src/neo4j/importer.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Method:src/neo4j/importer.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.close->self:Method:src/neo4j/importer.ts:this.driver.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.close",
    "endNodeId": "self:Method:src/neo4j/importer.ts:this.driver.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:Date.now",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Date.now",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:result.records.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.records.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Method:src/neo4j/query-executor.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:this.getSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.getSession",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:Date.now",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Date.now",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:session.beginTransaction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.beginTransaction",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:result.records.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.records.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:result.summary.counters.updates",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:results.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:results.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.commit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.commit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:tx.rollback",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:tx.rollback",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Method:src/neo4j/query-executor.ts:session.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:session.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Method:src/neo4j/query-executor.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.convertNeo4jValue",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.identity.toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.identity.toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isRelationship",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.start.toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.start.toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.end.toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.end.toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:neo4j.isPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:neo4j.isPath",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.segments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.segments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:value.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:value.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Method:src/neo4j/query-executor.ts:Object.keys",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:Object.keys",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession->self:Method:src/neo4j/query-executor.ts:this.driver.session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.getSession",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.driver.session",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.close->self:Method:src/neo4j/query-executor.ts:this.driver.close",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.close",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.driver.close",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:/\\bWHERE\\b/i.test",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:/\\bWHERE\\b/i.test",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:scopedCypher.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:scopedCypher.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Method:src/neo4j/query-executor.ts:this.executeQuery",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map(label => `'${label}'`).join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map(label => `'${label}'`).join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map(prop => `'${prop}'`).join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map(prop => `'${prop}'`).join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.labels.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:ftIndex.properties.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:record.get('type').includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get('type').includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:record.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:record.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:labelsAndProperties.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:labelsAndProperties.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get('deletedCount').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get('deletedCount').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:deleteResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:Object.keys",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:Object.keys",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:sampleRecord.toObject",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:sampleRecord.toObject",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:constraintsResult.records.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:constraintsResult.records.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:indexesResult.records.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:indexesResult.records.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:constraints.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:constraints.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:indexes.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:indexes.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:proceduresResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Method:src/neo4j/schema-constraints.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Method:src/neo4j/schema-constraints.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:result.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:result.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:result.records.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:result.records.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:session.beginTransaction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.beginTransaction",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeLabelResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:relResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:remainingNodesResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get('count').toNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get('count').toNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:nodeResult.records[0].get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.commit",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.commit",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:tx.rollback",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:tx.rollback",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:this.getCurrentVersions",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:this.getCurrentVersions",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:this.migrateSchema",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:this.migrateSchema",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Method:src/neo4j/schema-migration.ts:results.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:results.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:new Date().toISOString().replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:new Date().toISOString().replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:new Date().toISOString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:new Date().toISOString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:session.run",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:session.run",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Method:src/neo4j/schema-migration.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Method:src/neo4j/schema-migration.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:fs.readdirSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:fs.readdirSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:path.join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.isDirectory",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.isDirectory",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.name.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.name.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Function:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:entry.isFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:entry.isFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/package-parser.ts:walk->self:Method:src/parser/package-parser.ts:packageJsonFiles.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageJsonFiles.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Function:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Function:src/parser/package-parser.ts:walk",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.has",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.has",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:fs.readFileSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:JSON.parse",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.parse",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.dirname",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.parseDependencies",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.parseDependencies",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:this.packageCache.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.packageCache.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Method:src/parser/package-parser.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:path.dirname",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:Object.entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:Object.entries",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Method:src/parser/package-parser.ts:relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.findPackageJsonFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.findPackageJsonFiles",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.parsePackageJson",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.parsePackageJson",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:allNodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:allNodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:allRelationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:allRelationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Method:src/parser/package-parser.ts:this.linkDependenciesToImports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.linkDependenciesToImports",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:nodes.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.has",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.has",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:packageMap.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageMap.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:packageMap.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:packageMap.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:relationships.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:relationships.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:this.extractPackageNameFromImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:this.extractPackageNameFromImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Method:src/parser/package-parser.ts:dependencyMap.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Method:src/parser/package-parser.ts:dependencyMap.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Method:src/parser/package-parser.ts:importPath.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Method:src/parser/package-parser.ts:importPath.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Method:src/parser/package-parser.ts:importPath.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Method:src/parser/package-parser.ts:importPath.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Method:src/parser/ts-parser.ts:ts.createProgram",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.createProgram",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Method:src/parser/ts-parser.ts:this.program.getTypeChecker",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getTypeChecker",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.extname(filePath).substring",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname(filePath).substring",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:path.extname",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.getFileSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getFileSize",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.hasDefaultExport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.hasDefaultExport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.getDefaultExportExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getDefaultExportExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Method:src/parser/ts-parser.ts:this.visitNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.visitNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractClass",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractClass",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractInterface",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractInterface",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractTypeAlias",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractTypeAlias",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractFunction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractFunction",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractMethod",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractMethod",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractProperty",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractProperty",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractVariableStatement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractVariableStatement",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractExport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractExport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractFunctionCall",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractFunctionCall",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractTypeReference",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractTypeReference",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:this.extractVariableReference",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractVariableReference",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.members.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:node.members.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.members.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.heritageClauses.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.heritageClauses.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:node.members.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.members.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.expression.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:type.typeArguments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:typeNode.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:typeNode.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.type.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:ts.isTypeLiteralNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeLiteralNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Method:src/parser/ts-parser.ts:node.type.members.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.members.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getJsDocComment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.parameters.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.extractParameters",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVisibility",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.type.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.type.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:node.initializer.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.initializer.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.getEnd",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getEnd",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:this.getVariableScope",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableScope",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.type.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.type.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:declaration.initializer.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.initializer.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Method:src/parser/ts-parser.ts:parameters.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parameters.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:ts.isNamedImports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamedImports",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:ts.isNamespaceImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamespaceImport",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:imports.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:imports.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:importClause.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:importClause.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:element.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:element.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:importClause.namedBindings.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:importClause.namedBindings.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:ts.isNamedExports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isNamedExports",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.exportClause.elements.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.exportClause.elements.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText().replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.moduleSpecifier.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:moduleSpecifier.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveImportPath",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.forEachChild",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:ts.getJSDocCommentsAndTags",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.getJSDocCommentsAndTags",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:jsDocComments.map(comment => comment.getText()).join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:jsDocComments.map(comment => comment.getText()).join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Method:src/parser/ts-parser.ts:jsDocComments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:jsDocComments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.modifiers.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Method:src/parser/ts-parser.ts:ts.isSourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isSourceFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Method:src/parser/ts-parser.ts:ts.isFunctionLike",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionLike",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.isAbsolute",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.isAbsolute",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.resolve",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.dirname",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.dirname",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:path.extname",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.extname",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:resolvedPath.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:resolvedPath.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Method:src/parser/ts-parser.ts:fs.existsSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:fs.existsSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Method:src/parser/ts-parser.ts:fs.statSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:fs.statSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Method:src/parser/ts-parser.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getSourceFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.program.getRootFileNames",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:sourceFile.getLineAndCharacterOfPosition",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:symbol.getDeclarations",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:symbol.getDeclarations",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:declaration.getSourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.getSourceFile",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.findCallerContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findCallerContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getCallerNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getCallerNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getCalleeInfo",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getCalleeInfo",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.generateCalleeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateCalleeNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:node.arguments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.arguments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:ts.isAwaitExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isAwaitExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:this.isInConditionalContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isInConditionalContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:callerNode.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:callerNode.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrowFunction",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isPropertyAssignment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAssignment",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyAccessExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.expression.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.expression.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Method:src/parser/ts-parser.ts:expression.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:expression.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isIfStatement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIfStatement",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isConditionalExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isConditionalExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.resolveTypeNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:ts.isTypeParameterDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeParameterDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isArrayType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isArrayType",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isUnionType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isUnionType",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:this.isIntersectionType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isIntersectionType",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:node.typeArguments.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeArguments.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.isDeclarationIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.isDeclarationIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getReferenceContextNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:node.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.typeChecker.getSymbolAtLocation",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getVariableNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getVariableReferenceType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getVariableReferenceType",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getLineNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:node.getStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.getStart",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.getColumnNumber",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertySignature",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:context.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:context.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:declaration.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:this.findReferenceContext",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:parent.name.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isVariableDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isParameter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isFunctionDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isClassDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isInterfaceDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isTypeAliasDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPropertyDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isMethodDeclaration",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isBinaryExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isPrefixUnaryExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPrefixUnaryExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:ts.isPostfixUnaryExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isPostfixUnaryExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Method:src/parser/ts-parser.ts:[\n        ts.SyntaxKind.PlusEqualsToken,\n        ts.SyntaxKind.MinusEqualsToken,\n        ts.SyntaxKind.AsteriskEqualsToken,\n        ts.SyntaxKind.SlashEqualsToken,\n        ts.SyntaxKind.PercentEqualsToken,\n        ts.SyntaxKind.AmpersandEqualsToken,\n        ts.SyntaxKind.BarEqualsToken,\n        ts.SyntaxKind.CaretEqualsToken,\n        ts.SyntaxKind.LessThanLessThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken\n      ].includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:[\n        ts.SyntaxKind.PlusEqualsToken,\n        ts.SyntaxKind.MinusEqualsToken,\n        ts.SyntaxKind.AsteriskEqualsToken,\n        ts.SyntaxKind.SlashEqualsToken,\n        ts.SyntaxKind.PercentEqualsToken,\n        ts.SyntaxKind.AmpersandEqualsToken,\n        ts.SyntaxKind.BarEqualsToken,\n        ts.SyntaxKind.CaretEqualsToken,\n        ts.SyntaxKind.LessThanLessThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanEqualsToken,\n        ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken\n      ].includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:node.typeName.getText",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Method:src/parser/ts-parser.ts:ts.isArrayTypeNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isArrayTypeNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isUnionType->self:Method:src/parser/ts-parser.ts:ts.isUnionTypeNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isUnionTypeNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType->self:Method:src/parser/ts-parser.ts:ts.isIntersectionTypeNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "endNodeId": "self:Method:src/parser/ts-parser.ts:ts.isIntersectionTypeNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:fs.readFileSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:fs.readFileSync",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Function:src/parser/vue-parser.ts:parseVue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:parseVue",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.createFileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.createFileNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.createComponentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.createComponentNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseTemplate",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseTemplate",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.extractComponentReferences",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractComponentReferences",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseScript",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseScript",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Method:src/parser/vue-parser.ts:this.parseStyles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.parseStyles",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:path.basename",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.basename",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Method:src/parser/vue-parser.ts:content.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:content.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:template.content.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:template.content.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Method:src/parser/vue-parser.ts:template.content.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:template.content.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Function:src/parser/vue-parser.ts:parseTemplate",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:parseTemplate",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:isNativeTag->self:Method:src/parser/vue-parser.ts:/^[a-z]/.test",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:isNativeTag",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:/^[a-z]/.test",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Method:src/parser/vue-parser.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:/^[A-Z]/.test",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:/^[A-Z]/.test",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.hasConditionalDirective",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.hasConditionalDirective",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractProps",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.nodeToString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.nodeToString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractEventListeners",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractEventListeners",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.extractSlots",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractSlots",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.processSlotElement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processSlotElement",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.processTemplateNode",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Method:src/parser/vue-parser.ts:node.props.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Method:src/parser/vue-parser.ts:node.props.some",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.some",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode->self:Method:src/parser/vue-parser.ts:node.props.find",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.find",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Method:src/parser/vue-parser.ts:node.props.find",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:node.props.find",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute->self:Method:src/parser/vue-parser.ts:tagContent.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:tagContent.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:props.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:props.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:staticPropRegex.exec",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:staticPropRegex.exec",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:propName.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propName.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:JSON.stringify",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:JSON.stringify",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:eventRegex.exec",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:eventRegex.exec",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:events.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:events.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:script.content.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:script.content.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:babelParser.parse",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:babelParser.parse",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Function:src/parser/vue-parser.ts:traverse",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Function:src/parser/vue-parser.ts:traverse",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractDefinePropsFromAST",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefinePropsFromAST",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractDefineEmitsFromAST",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmitsFromAST",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:callee.name.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:callee.name.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:this.extractComposableUsage",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractComposableUsage",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:CallExpression->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:CallExpression",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:ImportDeclaration->self:Method:src/parser/vue-parser.ts:this.extractImportFromAST",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:ImportDeclaration",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractImportFromAST",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:ImportDeclaration->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:ImportDeclaration",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:['ref', 'reactive', 'computed', 'shallowRef', 'shallowReactive', 'readonly'].includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:['ref', 'reactive', 'computed', 'shallowRef', 'shallowReactive', 'readonly'].includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:this.extractReactiveStateFromAST",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractReactiveStateFromAST",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/parser/vue-parser.ts:VariableDeclarator->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/parser/vue-parser.ts:VariableDeclarator",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propRegex.exec",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propType.trim",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propType.trim",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propType.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propType.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:propsContent.includes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propsContent.includes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:this.extractDefaultValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefaultValue",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Method:src/parser/vue-parser.ts:propsContent.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propsContent.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Method:src/parser/vue-parser.ts:defaultMatch[1].trim",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:defaultMatch[1].trim",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isObjectProperty",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectProperty",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:propOption.value.value.toString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:propOption.value.value.toString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrowFunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrowFunctionExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isFunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isFunctionExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineProps",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getNodeSource",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.extractDefineEmits",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportDefaultSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportDefaultSpecifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:importedSpecifiers.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:importedSpecifiers.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportNamespaceSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportNamespaceSpecifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:t.isImportSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isImportSpecifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isIdentifier",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:this.getInitialValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.getInitialValue",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isCallExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isStringLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNumericLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:arg.value.toString",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:arg.value.toString",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isBooleanLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isNullLiteral",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isObjectExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:t.isArrayExpression",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:scriptContent.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitsContent.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitsContent.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitsContent.match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitsContent.match",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitNames.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitNames.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:emitRegex.exec",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:emitRegex.exec",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:this.generateNodeId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:payloadType.trim",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:payloadType.trim",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:result.nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Method:src/parser/vue-parser.ts:path.relative",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:path.relative",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Method:src/parser/vue-parser.ts:styles.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Method:src/parser/vue-parser.ts:styles.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:nodes.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:relationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deduplicateNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deduplicateNodes",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deduplicateRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deduplicateRelationships",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.deriveAdditionalRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.deriveAdditionalRelationships",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Method:src/transformer/graph-transformer.ts:this.ensureNodeLabels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:this.ensureNodeLabels",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:nodeMap.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodeMap.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:Array.from",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.from",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Method:src/transformer/graph-transformer.ts:nodeMap.values",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodeMap.values",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipMap.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipMap.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:Array.from",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.from",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipMap.values",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipMap.values",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.nodes.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.nodes.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.error",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.relationships.filter",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.relationships.filter",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:result.nodes.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:result.nodes.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:node.nodeId.startsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:node.nodeId.startsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:node.nodeId.substring",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:node.nodeId.substring",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePathToNodeId.set",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePathToNodeId.set",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePath.endsWith",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePath.endsWith",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:filePath.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:filePath.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Method:src/transformer/graph-transformer.ts:console.warn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.warn",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode->self:Method:src/transformer/graph-transformer.ts:Array.isArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:Array.isArray",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Method:src/transformer/graph-transformer.ts:nodes.map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.map",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:console.log",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:console.log",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:nodes.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:nodes.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationships.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationships.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.has",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.has",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:relationshipsByType.get",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:relationshipsByType.get",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:callsRelationships.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:callsRelationships.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:enhancedRelationships.push",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:enhancedRelationships.push",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:dependsOnMap.values",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:dependsOnMap.values",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:referencesTypeRelationships.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:referencesTypeRelationships.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Method:src/transformer/graph-transformer.ts:referencesVarRelationships.forEach",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Method:src/transformer/graph-transformer.ts:referencesVarRelationships.forEach",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:codebaseId.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:codebaseId.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:nodeType.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeType.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Method:src/utils/id-generator.ts:uniqueIdentifier.replace",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:uniqueIdentifier.replace",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractCodebaseId->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractNodeType->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:nodeId.split",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:nodeId.split",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:parts.slice(2).join",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:parts.slice(2).join",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Method:src/utils/id-generator.ts:parts.slice",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Method:src/utils/id-generator.ts:parts.slice",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "dependencyType": "call",
    "isStrong": true,
    "isWeak": false,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/index.ts:TSCodeGraph.config->self:Interface:src/index.ts:Config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/index.ts:TSCodeGraph.config",
    "endNodeId": "self:Interface:src/index.ts:Config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:config->self:Interface:src/index.ts:Config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:config",
    "endNodeId": "self:Interface:src/index.ts:Config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/neo4j/importer.ts:Neo4jImporter.config->self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/neo4j/importer.ts:Neo4jImporter.config",
    "endNodeId": "self:Interface:src/neo4j/importer.ts:Neo4jImporterConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/neo4j/query-executor.ts:QueryExecutor.config->self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/neo4j/query-executor.ts:QueryExecutor.config",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryExecutorConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:results->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:results",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.close->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.close",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Interface:src/neo4j/query-executor.ts:QueryResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:results->self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:results",
    "endNodeId": "self:Interface:src/neo4j/schema-migration.ts:MigrationResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es5.d.ts:Promise",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/parser/package-parser.ts:PackageParser.config->self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.config",
    "endNodeId": "self:Interface:src/parser/package-parser.ts:PackageParserConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/parser/package-parser.ts:PackageParser.packageCache->self:Interface:node_modules/typescript/lib/lib.es2015.collection.d.ts:Map",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/parser/package-parser.ts:PackageParser.packageCache",
    "endNodeId": "self:Interface:node_modules/typescript/lib/lib.es2015.collection.d.ts:Map",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions->self:Interface:node_modules/typescript/lib/typescript.d.ts:CompilerOptions",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.compilerOptions",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CompilerOptions",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/parser/ts-parser.ts:TSParser.program->self:Interface:node_modules/typescript/lib/typescript.d.ts:Program",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.program",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Program",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/parser/ts-parser.ts:TSParser.typeChecker->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeChecker",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/parser/ts-parser.ts:TSParser.typeChecker",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeChecker",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:visitNode:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:visitNode:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractClass:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ClassDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractClass:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ClassImplements",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractInterface:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:InterfaceDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractInterface:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertySignature",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertySignature",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeAliasDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractFunction:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractFunction:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractMethod:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractMethod:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractProperty:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractProperty:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters->self:Interface:node_modules/typescript/lib/typescript.d.ts:NodeArray",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:NodeArray",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters->self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractParameters:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractImport:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ImportDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractImport:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractExport:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ExportDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractExport:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile->self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile->self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:SourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVisibility:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVisibility:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:PropertyDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVariableScope:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableStatement",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:hasNodeDecorators:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression->self:Interface:node_modules/typescript/lib/typescript.d.ts:Expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:findCallerContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:current->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:MethodDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ArrowFunction",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode->self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:FunctionExpression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:CallExpression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result->self:Interface:src/parser/ts-parser.ts:ParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "endNodeId": "self:Interface:src/parser/ts-parser.ts:ParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration->self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:VariableDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration->self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:ParameterDeclaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:isArrayType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:TypeReferenceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:isUnionType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node->self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "endNodeId": "self:Interface:node_modules/typescript/lib/typescript.d.ts:Node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/parser/vue-parser.ts:processSlotElement:result->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:result",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Interface:src/parser/vue-parser.ts:VueParseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config->self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Property:src/transformer/graph-transformer.ts:GraphTransformer.config",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:GraphTransformerConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Parameter:src/transformer/graph-transformer.ts:validate:result->self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "endNodeId": "self:Interface:src/transformer/graph-transformer.ts:TransformResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig->self:Variable:scripts/analyze-codebase-relationships.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor->self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:codebasesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:nodeTypesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:currentCodebase",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:crossRelResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:dependenciesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:fileDepResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships->self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/analyze-codebase-relationships.ts:analyzeCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/analyze-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:neo4jConfig->self:Variable:scripts/cleanup-codebase.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:queryExecutor->self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:countResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:countResult->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:nodeCount->self:Variable:scripts/cleanup-codebase.ts:countResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:countResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:nodeCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:resolve",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:deleteResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:deleteResult->self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "endNodeId": "self:Parameter:scripts/cleanup-codebase.ts:cleanupCodebase:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:deletedCount->self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deleteResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:cleanupResult->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:deletedRelCount->self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:cleanupResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:deletedRelCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:relError",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:relError",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/cleanup-codebase.ts:cleanupCodebase->self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/cleanup-codebase.ts:cleanupCodebase",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/cleanup-codebase.ts:codebaseId->self:Variable:scripts/cleanup-codebase.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/cleanup-codebase.ts:codebaseId",
    "endNodeId": "self:Variable:scripts/cleanup-codebase.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig->self:Variable:scripts/fix-cross-codebase-relationships.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor->self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:countResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:relCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updateResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:updatedCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount->self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:checkResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:crossCodebaseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships->self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/fix-cross-codebase-relationships.ts:fixCrossCodebaseRelationships",
    "endNodeId": "self:Variable:scripts/fix-cross-codebase-relationships.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor->self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:nodesPath->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath->self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "endNodeId": "self:Parameter:scripts/import-json-to-neo4j.ts:importJsonToNeo4j:jsonDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:nodes->self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodesPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:relationships->self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationshipsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:query",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:query",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:record->self:Variable:scripts/import-json-to-neo4j.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:record",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:count",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:count",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:importedNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:rels->self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:rels->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:batch->self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:rels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:transformed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformed",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch->self:Variable:scripts/import-json-to-neo4j.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:query->self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:query",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:result->self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:result",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:transformedBatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:importedRels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:importedRels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j->self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:scripts/import-json-to-neo4j.ts:importJsonToNeo4j",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:jsonDir->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:jsonDir",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:scripts/import-json-to-neo4j.ts:codebaseId->self:Variable:scripts/import-json-to-neo4j.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:codebaseId",
    "endNodeId": "self:Variable:scripts/import-json-to-neo4j.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:args->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:args",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:command->self:Variable:src/cli.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:command",
    "endNodeId": "self:Variable:src/cli.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:command",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:command",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:main->self:Variable:src/cli.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:main",
    "endNodeId": "self:Variable:src/cli.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:printUsage->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:printUsage",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:skipValidation->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:skipValidation",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:cleanArgs->self:Parameter:src/cli.ts:analyzeProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "endNodeId": "self:Parameter:src/cli.ts:analyzeProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:projectPath->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:projectPath",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:codebaseId->self:Variable:src/cli.ts:cleanArgs",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Variable:src/cli.ts:cleanArgs",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:codebaseId->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:neo4jConfig->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:config->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:config",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:config->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:config",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:codeGraph->self:Variable:src/cli.ts:config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:codeGraph",
    "endNodeId": "self:Variable:src/cli.ts:config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:analyzeProject->self:Variable:src/cli.ts:skipValidation",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:analyzeProject",
    "endNodeId": "self:Variable:src/cli.ts:skipValidation",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:codebaseId->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:cypherQuery->self:Parameter:src/cli.ts:queryGraph:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "endNodeId": "self:Parameter:src/cli.ts:queryGraph:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:cypherQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:cypherQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:cypherQuery",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:queryGraph->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:queryGraph",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:codebaseId->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:codebaseId",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:skipValidation->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:skipValidation",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:noCleanup->self:Parameter:src/cli.ts:ingestProject:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:noCleanup",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:projectPath->self:Variable:src/cli.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:projectPath",
    "endNodeId": "self:Variable:src/cli.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:outputDir->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:outputDir",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:noCleanup",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:noCleanup",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:queryExecutor->self:Variable:src/cli.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "endNodeId": "self:Variable:src/cli.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:countResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:countResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:countResult->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:countResult",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:countResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:countResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:countResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:countResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodeCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodeCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Parameter:src/cli.ts:ingestProject:resolve",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Parameter:src/cli.ts:ingestProject:resolve",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:deleteResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:deleteResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:deleteResult->self:Variable:src/cli.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:deleteResult",
    "endNodeId": "self:Variable:src/cli.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deleteResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:deleteResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deletedCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:cleanupResult->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:cleanupResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:cleanupResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:cleanupResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:deletedRelCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:deletedRelCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relError",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relError",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:analysisConfig->self:Variable:src/cli.ts:config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:analysisConfig",
    "endNodeId": "self:Variable:src/cli.ts:config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:analysisCodeGraph->self:Variable:src/cli.ts:analysisConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:analysisCodeGraph",
    "endNodeId": "self:Variable:src/cli.ts:analysisConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:analysisCodeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:analysisCodeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:skipValidation",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:skipValidation",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:nodesPath->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:nodesPath",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:relationshipsPath->self:Variable:src/cli.ts:outputDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "endNodeId": "self:Variable:src/cli.ts:outputDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodesPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:nodes->self:Variable:src/cli.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:nodes",
    "endNodeId": "self:Variable:src/cli.ts:nodesPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:relationships->self:Variable:src/cli.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:relationships",
    "endNodeId": "self:Variable:src/cli.ts:relationshipsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:processed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:processed",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:mapObj",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:mapObj",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:processedBatch->self:Variable:src/cli.ts:e",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:processedBatch",
    "endNodeId": "self:Variable:src/cli.ts:e",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:queryExecutor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:queryExecutor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:query",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:query",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:processedBatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:processedBatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:record->self:Variable:src/cli.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:record",
    "endNodeId": "self:Variable:src/cli.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:count",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:count",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:importedNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:importedNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:rels->self:Variable:src/cli.ts:relsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:rels",
    "endNodeId": "self:Variable:src/cli.ts:relsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:rels->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:rels",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:rels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:rels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:batch->self:Variable:src/cli.ts:rels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:batch",
    "endNodeId": "self:Variable:src/cli.ts:rels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:transformed",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:transformed",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:mapObj",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:mapObj",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:transformedBatch->self:Variable:src/cli.ts:e",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "endNodeId": "self:Variable:src/cli.ts:e",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:query->self:Variable:src/cli.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:query",
    "endNodeId": "self:Variable:src/cli.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/cli.ts:result->self:Variable:src/cli.ts:transformedBatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/cli.ts:result",
    "endNodeId": "self:Variable:src/cli.ts:transformedBatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/cli.ts:ingestProject->self:Variable:src/cli.ts:importedRels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/cli.ts:ingestProject",
    "endNodeId": "self:Variable:src/cli.ts:importedRels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:args->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:projectPath->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:outputDir->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:outputDir->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:codebaseId->self:Variable:src/examples/analyze-project.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:codebaseId->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:outputDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:outputDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:neo4jConfig->self:Variable:src/examples/analyze-project.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:config->self:Variable:src/examples/analyze-project.ts:projectPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:projectPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:config->self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:neo4jConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:codeGraph->self:Variable:src/examples/analyze-project.ts:config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:nodeCountsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:nodeCountsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:relCountsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:relCountsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:complexClassesResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:complexClassesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:circularDepsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:circularDepsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/examples/analyze-project.ts:unusedExportsResult->self:Variable:src/examples/analyze-project.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:unusedExportsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/examples/analyze-project.ts:main->self:Variable:src/examples/analyze-project.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/examples/analyze-project.ts:main",
    "endNodeId": "self:Variable:src/examples/analyze-project.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:codebaseNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:codebaseNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:vueFileCount->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:vueFileCount",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:tsFileCount->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:tsFileCount",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:tsFileCount->self:Variable:src/index.ts:vueFileCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:tsFileCount",
    "endNodeId": "self:Variable:src/index.ts:vueFileCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:tsFileCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:tsFileCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:vueFileCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:vueFileCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:sourceFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:sourceFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:parseStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:parseStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:file",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:file",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:parseResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:parseResults",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:parseStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:parseStart",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:resolveStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:resolveStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:resolveStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:resolveStart",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:transformStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:transformStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:transformResult->self:Variable:src/index.ts:parseResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:transformResult",
    "endNodeId": "self:Variable:src/index.ts:parseResults",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Parameter:src/index.ts:process:skipValidation",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Parameter:src/index.ts:process:skipValidation",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:isValid->self:Variable:src/index.ts:transformResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:isValid",
    "endNodeId": "self:Variable:src/index.ts:transformResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:isValid",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:isValid",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:transformStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:transformStart",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:packageStart->self:Variable:src/index.ts:performance",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:packageStart",
    "endNodeId": "self:Variable:src/index.ts:performance",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:packageStart",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:packageStart",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.process->self:Variable:src/index.ts:packageResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.process",
    "endNodeId": "self:Variable:src/index.ts:packageResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:entries",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:fullPath->self:Variable:src/index.ts:entry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:fullPath",
    "endNodeId": "self:Variable:src/index.ts:entry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:entry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:entry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:walk",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:fullPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:fullPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:walk->self:Variable:src/index.ts:files",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:walk",
    "endNodeId": "self:Variable:src/index.ts:files",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Variable:src/index.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Variable:src/index.ts:walk",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Parameter:src/index.ts:findSourceFiles:dir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Parameter:src/index.ts:findSourceFiles:dir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findSourceFiles->self:Variable:src/index.ts:files",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findSourceFiles",
    "endNodeId": "self:Variable:src/index.ts:files",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:nodesPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:nodesPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:relationshipsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:relationshipsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Parameter:src/index.ts:saveResults:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Parameter:src/index.ts:saveResults:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.saveResults->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.saveResults",
    "endNodeId": "self:Variable:src/index.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:importer",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:importer",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Parameter:src/index.ts:importToNeo4j:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Parameter:src/index.ts:importToNeo4j:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.importToNeo4j->self:Variable:src/index.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.importToNeo4j",
    "endNodeId": "self:Variable:src/index.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Parameter:src/index.ts:resolveComponentReferences:parseResults",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:componentRegistry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:componentRegistry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:componentName->self:Variable:src/index.ts:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:componentName",
    "endNodeId": "self:Variable:src/index.ts:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:resolvedNodeId->self:Variable:src/index.ts:componentRegistry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "endNodeId": "self:Variable:src/index.ts:componentRegistry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:resolvedNodeId->self:Variable:src/index.ts:componentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "endNodeId": "self:Variable:src/index.ts:componentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:resolvedNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:resolvedNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences->self:Variable:src/index.ts:componentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.resolveComponentReferences",
    "endNodeId": "self:Variable:src/index.ts:componentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeQuery->self:Parameter:src/index.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery->self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCodebaseScopedQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery->self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/index.ts:executeCrossCodebaseQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.listCodebases->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.listCodebases",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCrossCodebaseRelationships",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies->self:Variable:src/index.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/index.ts:TSCodeGraph.findCodebaseDependencies",
    "endNodeId": "self:Variable:src/index.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:args->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:args",
    "endNodeId": "self:Variable:src/index.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Variable:src/index.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:rootDir->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:rootDir",
    "endNodeId": "self:Variable:src/index.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:outputDir->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:outputDir",
    "endNodeId": "self:Variable:src/index.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:outputDir->self:Variable:src/index.ts:process",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:outputDir",
    "endNodeId": "self:Variable:src/index.ts:process",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:codebaseId->self:Variable:src/index.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:codebaseId",
    "endNodeId": "self:Variable:src/index.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:codebaseId->self:Variable:src/index.ts:rootDir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:codebaseId",
    "endNodeId": "self:Variable:src/index.ts:rootDir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/index.ts:codeGraph->self:Variable:src/index.ts:config",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/index.ts:codeGraph",
    "endNodeId": "self:Variable:src/index.ts:config",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/index.ts:main->self:Variable:src/index.ts:codeGraph",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/index.ts:main",
    "endNodeId": "self:Variable:src/index.ts:codeGraph",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:verified->self:Variable:src/neo4j/importer.ts:verifySession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:verified",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verifySession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:verifySession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verifySession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:verified",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:verified",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:migrationNeeded->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationNeeded",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:migrationResults->self:Variable:src/neo4j/importer.ts:migrationSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:migrationResults",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationSession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:migrationResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:migrationResults",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:codebaseId->self:Parameter:src/neo4j/importer.ts:import:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:codebaseSession",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseSession",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Parameter:src/neo4j/importer.ts:import:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:import:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.import->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.import",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batches->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batches->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:batches",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:start->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:start->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:end->self:Variable:src/neo4j/importer.ts:start",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:end->self:Variable:src/neo4j/importer.ts:batchSize",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batchSize",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:end->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batch->self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodes:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batch->self:Variable:src/neo4j/importer.ts:start",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:start",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batch->self:Variable:src/neo4j/importer.ts:end",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes->self:Variable:src/neo4j/importer.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodes",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:createNodesResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:createNodesResult->self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:createNodesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importNodeBatch:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:prepared->self:Variable:src/neo4j/importer.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:value",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:e",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:e",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch->self:Variable:src/neo4j/importer.ts:processedCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importNodeBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batches->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:batches",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batches",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:typeCounts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:typeCounts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:defineVueComponentRel->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:defineVueComponentRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:end->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:end",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:batch->self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships->self:Variable:src/neo4j/importer.ts:batch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationships",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:batch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:relationshipsByType->self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:importRelationshipBatch:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relationshipsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:resolvedRels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:resolvedRels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:prepared->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:value",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:e",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:e",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:prepared",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:prepared",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:result->self:Variable:src/neo4j/importer.ts:safeProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeProps",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:count",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:count",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:unresolvedRels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:unresolvedRels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:nodeName->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:createNodeQuery->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:nodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:safeNodeProps->self:Variable:src/neo4j/importer.ts:nodeName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createNodeQuery",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:nodeName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeNodeProps",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:relProperties->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:relProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:value->self:Variable:src/neo4j/importer.ts:relProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:value",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:relProperties",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:safeRelProps",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:safeRelProps",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:createRelQuery",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:createRelQuery",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch->self:Variable:src/neo4j/importer.ts:totalCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.importRelationshipBatch",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:totalCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:groupRelationshipsByType:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:groups",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:groups",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:typeCounts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:typeCounts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.groupRelationshipsByType",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:labels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:labels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:originalNodeId->self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:originalNodeId",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareNodeForImport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:originalNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:originalNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:nodeWithVersion->self:Variable:src/neo4j/importer.ts:processedProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedProperties",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:nodeWithVersion->self:Variable:src/neo4j/importer.ts:labels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:labels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport->self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareNodeForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:nodeWithVersion",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:relForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipForImport:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:propertiesWithVersion->self:Variable:src/neo4j/importer.ts:processedProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:processedProperties",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport->self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:relForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:relForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:prepareRelationshipPropertiesForImport:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport->self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.prepareRelationshipPropertiesForImport",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:propertiesWithVersion",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:obj",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:mapObj",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:mapObj",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:value",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:value",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:item",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:convertComplexPropertiesToPrimitives:item",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives->self:Variable:src/neo4j/importer.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.convertComplexPropertiesToPrimitives",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:obj",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Parameter:src/neo4j/importer.ts:checkForMapObjects:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:i",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:i",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects->self:Variable:src/neo4j/importer.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.checkForMapObjects",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:codebaseResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:codebaseId->self:Variable:src/neo4j/importer.ts:codebaseResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:importCountResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:importCountResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:exportCountResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:exportCountResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:importNodesUpdated->self:Variable:src/neo4j/importer.ts:importCountResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importCountResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:exportNodesUpdated->self:Variable:src/neo4j/importer.ts:exportCountResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportCountResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated->self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossCodebaseImportResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:importNodesUpdated",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:exportNodesUpdated",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:crossImportNodesUpdated",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.updateNodeProperties",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:insightId->self:Variable:src/neo4j/importer.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:codebaseId->self:Variable:src/neo4j/importer.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:insightId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/importer.ts:parts->self:Variable:src/neo4j/importer.ts:insightId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/importer.ts:parts",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:insightId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases->self:Variable:src/neo4j/importer.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/importer.ts:Neo4jImporter.linkInsightsToCodebases",
    "endNodeId": "self:Variable:src/neo4j/importer.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:txConfig->self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:timeout",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:txConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:executionTime->self:Variable:src/neo4j/query-executor.ts:startTime",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:executionTime",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:startTime",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:records->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:stats->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:records",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:stats",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:txConfig->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:timeout",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:tx->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:tx->self:Variable:src/neo4j/query-executor.ts:txConfig",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:txConfig",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeTransaction:queries",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:result->self:Variable:src/neo4j/query-executor.ts:query",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:query",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:results",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:results",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:records",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:records",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:stats",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:stats",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:executionTime",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:executionTime",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction->self:Variable:src/neo4j/query-executor.ts:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeTransaction",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:value->self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:recordToObject:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:value->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject->self:Variable:src/neo4j/query-executor.ts:value",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.recordToObject",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:value",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:value",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:segment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:segment",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:item",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:convertNeo4jValue:item",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Variable:src/neo4j/query-executor.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue->self:Variable:src/neo4j/query-executor.ts:key",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.convertNeo4jValue",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:key",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:hasWhere->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:hasWhere",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:scopedCypher->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:scopedCypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:match",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:match",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:parts->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:nodePattern",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:varName->self:Variable:src/neo4j/query-executor.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:varName",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/query-executor.ts:labels->self:Variable:src/neo4j/query-executor.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/query-executor.ts:labels",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:labels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:labels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:varName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:varName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:paramsWithCodebase",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery->self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCodebaseScopedQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCodebaseScopedQuery:timeout",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Variable:src/neo4j/query-executor.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Variable:src/neo4j/query-executor.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:cypher",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery->self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/query-executor.ts:QueryExecutor.executeCrossCodebaseQuery",
    "endNodeId": "self:Parameter:src/neo4j/query-executor.ts:executeCrossCodebaseQuery:timeout",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:query",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:index",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:index",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:index",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:index",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:proceduresResult->self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createSchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:query->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:query",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:constraintsResult->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:name->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropSchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:ftIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropSchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:createCodebaseSchema:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:commonNodeTypes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:nodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:nodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:createCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelsAndProperties",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:deleteResult->self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:dropCodebaseSchema:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:deletedCount->self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deleteResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:deletedCount",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:dropCodebaseSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:constraintsResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:sampleRecord->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:sampleRecord",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:constraints->self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:indexesResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:indexes->self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraints",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:labelMatch->self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:labelMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:propertyMatch->self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:propertyMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:typeMatch->self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredConstraint",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:labelMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:propertyMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintLabel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:constraintProperty",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:typeMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:found",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:indexes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:proceduresResult->self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "endNodeId": "self:Parameter:src/neo4j/schema-constraints.ts:verifySchemaConstraints:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:fullTextIndexAvailable",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:proceduresResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-constraints.ts:found->self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-constraints.ts:found",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints->self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/neo4j/schema-constraints.ts:verifySchemaConstraints",
    "endNodeId": "self:Variable:src/neo4j/schema-constraints.ts:requiredFTIndex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:isMigrationNeeded:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:count->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:count",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:count",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:count",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.isMigrationNeeded",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:record",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:getCurrentVersions:record",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.getCurrentVersions",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:fromVersion",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:toVersion",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:tx->self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateSchema:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodesMigrated",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodesMigrated",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeLabelResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:relResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:relResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relationshipsMigrated",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:relResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:relResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:remainingNodesResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:nodeResult->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:nodeResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:tx",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:tx",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateSchema",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:versions->self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:versions",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:versions",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:versions",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:version",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:version",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:result->self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:migrateAllToCurrentVersion:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:result->self:Variable:src/neo4j/schema-migration.ts:version",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:version",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:results",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:results",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion->self:Variable:src/neo4j/schema-migration.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.migrateAllToCurrentVersion",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:backupFileName->self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:backupName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/neo4j/schema-migration.ts:backupFileName->self:Variable:src/neo4j/schema-migration.ts:timestamp",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:timestamp",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:backupFileName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Parameter:src/neo4j/schema-migration.ts:createBackup:session",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup->self:Variable:src/neo4j/schema-migration.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/neo4j/schema-migration.ts:SchemaMigration.createBackup",
    "endNodeId": "self:Variable:src/neo4j/schema-migration.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:entries",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entries",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:fullPath->self:Variable:src/parser/package-parser.ts:entry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:fullPath",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:entry",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:entry",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:fullPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:fullPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:walk->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Variable:src/parser/package-parser.ts:walk",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:walk",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.findPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:content->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:content",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageJson->self:Variable:src/parser/package-parser.ts:content",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:content",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNode->self:Variable:src/parser/package-parser.ts:packageJson",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNode->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:dependencies->self:Variable:src/parser/package-parser.ts:packageJson",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJson",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:dependencies->self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parsePackageJson:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:packageNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:dependencies",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencies",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson->self:Variable:src/parser/package-parser.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parsePackageJson",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageName->self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageName->self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseDependencies:packageJson",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies->self:Variable:src/parser/package-parser.ts:packageNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseDependencies",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageJsonFiles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:result->self:Variable:src/parser/package-parser.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:allNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:allRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:combinedNodes->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:combinedNodes->self:Variable:src/parser/package-parser.ts:allNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:combinedRelationships->self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:parseAllPackageJsonFiles:existingRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:combinedRelationships->self:Variable:src/parser/package-parser.ts:allRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:allRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:combinedNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles->self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.parseAllPackageJsonFiles",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:combinedRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:dependencyNodes->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNodes->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodes",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dependencyMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:dep",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dep",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:builtInModules",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:builtInModules",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:depNode->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:depNode->self:Variable:src/parser/package-parser.ts:moduleName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:moduleName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:depNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:depNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:pkg",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:pkg",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:packageMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageNodeId->self:Variable:src/parser/package-parser.ts:dep",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dep",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:importRelationships->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:importRelationships",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:importRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:importRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:packageName->self:Variable:src/parser/package-parser.ts:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:dependencyMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:dependencyMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:depNodeId->self:Variable:src/parser/package-parser.ts:packageName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:depNodeId",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:packageName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports->self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.linkDependenciesToImports",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:linkDependenciesToImports:nodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/package-parser.ts:parts->self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/package-parser.ts:parts",
    "endNodeId": "self:Parameter:src/parser/package-parser.ts:extractPackageNameFromImport:importPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport->self:Variable:src/parser/package-parser.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/package-parser.ts:PackageParser.extractPackageNameFromImport",
    "endNodeId": "self:Variable:src/parser/package-parser.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.initialize->self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.initialize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:initialize:filePaths",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:sourceFile->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:fileNode->self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:fileNode->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.parseFile->self:Variable:src/parser/ts-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.parseFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.visitNode->self:Parameter:src/parser/ts-parser.ts:visitNode:child",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.visitNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:visitNode:child",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:classNode->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:classNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:classNode->self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:clause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:clause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseClassName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseClassNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseClassNodeId->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseClassNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:extendsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:extendsRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:extendsRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceNodeId->self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractClass:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:classNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:classNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:implementsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractClass->self:Variable:src/parser/ts-parser.ts:implementsRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractClass",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:implementsRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceNode->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:member",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:member",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Parameter:src/parser/ts-parser.ts:extractInterface:index",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:index",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:clause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:clause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseInterfaceName->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId->self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterface:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:baseInterfaceNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel->self:Variable:src/parser/ts-parser.ts:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterface->self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterface",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:interfaceExtendsRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeString->self:Variable:src/parser/ts-parser.ts:typeNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeString",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:description->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:description",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:isOptional->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isOptional",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:relationship->self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractInterfaceProperty:interfaceNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:relationship->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty->self:Variable:src/parser/ts-parser.ts:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractInterfaceProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeAliasNode->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeAliasNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:member",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:member",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias->self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:index",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeAlias",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeAlias:index",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:functionNode->self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:functionNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:functionNode->self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Variable:src/parser/ts-parser.ts:functionNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:functionNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunction->self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunction",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunction:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parentName->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodNode->self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodNode->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodNode->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:methodNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractMethod->self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractMethod",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractMethod:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propertyNode->self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:propertyNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propertyNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parentNodeId->self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractProperty:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractProperty->self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractProperty",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNode->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNode->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNode->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Variable:src/parser/ts-parser.ts:variableNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement->self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableStatement",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableStatement:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parameters",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:name->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:paramNode->self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:paramNode->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:paramNode->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Variable:src/parser/ts-parser.ts:paramNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Variable:src/parser/ts-parser.ts:paramNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasParamRel->self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractParameters:param",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractParameters->self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractParameters",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasParamRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:moduleSpecifier->self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importClause->self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasDefaultImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasNamedImports->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:hasNamespaceImport->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:isTypeOnly->self:Variable:src/parser/ts-parser.ts:importClause",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isTypeOnly",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importClause",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefaultImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:imports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:imports",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamedImports",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:element",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:element",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasNamespaceImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:isPackageImport->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:relationshipType->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:isPackageImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:relationshipType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importRel->self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:imports",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:imports",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:importRel->self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractImport:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractImport->self:Variable:src/parser/ts-parser.ts:importRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractImport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:importRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:exportRel->self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:exportRel->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractExport->self:Variable:src/parser/ts-parser.ts:exportRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractExport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:moduleSpecifier->self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:moduleSpecifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:targetNodeId->self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractExport:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:exportRel->self:Variable:src/parser/ts-parser.ts:relationshipType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relationshipType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:exportRel->self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:exportRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:targetNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:m",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:hasDefaultExport:m",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport->self:Variable:src/parser/ts-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.hasDefaultExport",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:hasDefault",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getDefaultExportExpression:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getDefaultExportExpression",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber->self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getLineNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getLineNumber:pos",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:jsDocComments->self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:jsDocComments",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment->self:Parameter:src/parser/ts-parser.ts:getJsDocComment:comment",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getJsDocComment",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getJsDocComment:comment",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVisibility->self:Parameter:src/parser/ts-parser.ts:getVisibility:m",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVisibility",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVisibility:m",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope->self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableScope",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableScope:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:absoluteFilePath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:dir->self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:dir",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:absoluteFilePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:resolvedPath->self:Variable:src/parser/ts-parser.ts:dir",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:dir",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:resolvedPath->self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveImportPath:importPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:ext->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:ext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:ext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:ext",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:tsPath->self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:tsPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:resolvedPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath->self:Variable:src/parser/ts-parser.ts:tsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveImportPath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:tsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId->self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateNodeId:identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:stats->self:Variable:src/parser/ts-parser.ts:statSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:statSync",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:stats->self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:stats",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:stats",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getFileSize:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getFileSize->self:Variable:src/parser/ts-parser.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getFileSize",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber->self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getColumnNumber",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getColumnNumber:pos",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:symbol->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:declarations->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:declarations",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:declaration->self:Variable:src/parser/ts-parser.ts:declarations",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declarations",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:resolveTypeNodeId:expectedType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:sourceFile->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:filePath->self:Variable:src/parser/ts-parser.ts:sourceFile",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:filePath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:sourceFile",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:relativePath->self:Variable:src/parser/ts-parser.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:relativePath",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId->self:Variable:src/parser/ts-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.resolveTypeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callerNode->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callerNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callerNodeId->self:Variable:src/parser/ts-parser.ts:callerNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callerNodeId->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:calleeInfo->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:calleeNodeId->self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeInfo",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:calleeNodeId->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callLocationLine->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callLocationColumn->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callerNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:calleeNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationLine",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callLocationColumn",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:callsRelationship->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractFunctionCall:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall->self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractFunctionCall",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:callsRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findCallerContext:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findCallerContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodName->self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCallerNodeId:callerNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId->self:Variable:src/parser/ts-parser.ts:methodName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCallerNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:expression->self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getCalleeInfo:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:object->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:object",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:property->self:Variable:src/parser/ts-parser.ts:expression",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:property",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:expression",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:object",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:object",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo->self:Variable:src/parser/ts-parser.ts:property",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getCalleeInfo",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:property",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:calleeInfo",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId->self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.generateCalleeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:generateCalleeNodeId:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isInConditionalContext:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isInConditionalContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:context->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeName->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:typeNodeId->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:referenceType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:typeNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesTypeRel->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractTypeReference:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference->self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractTypeReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesTypeRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:context->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:contextNodeId->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableName->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:symbol->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:declaration->self:Variable:src/parser/ts-parser.ts:symbol",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:symbol",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNodeId->self:Variable:src/parser/ts-parser.ts:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:variableNodeId->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referenceType->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referenceLocationLine->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referenceLocationColumn->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:contextNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:variableNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationLine",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:referencesVarRel->self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referenceLocationColumn",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:extractVariableReference:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference->self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.extractVariableReference",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:referencesVarRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:current->self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:findReferenceContext:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext->self:Variable:src/parser/ts-parser.ts:current",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.findReferenceContext",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:current",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:methodName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:methodName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:methodName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:paramName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:paramName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:propName->self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:propName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getReferenceContextNodeId:context",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId->self:Variable:src/parser/ts-parser.ts:propName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getReferenceContextNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:propName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:paramName->self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableNodeId:declaration",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:parentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId->self:Variable:src/parser/ts-parser.ts:paramName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableNodeId",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:paramName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier->self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isDeclarationIdentifier",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isDeclarationIdentifier:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/ts-parser.ts:parent->self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Variable:src/parser/ts-parser.ts:parent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Variable:src/parser/ts-parser.ts:parent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType->self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.getVariableReferenceType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:getVariableReferenceType:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isArrayType->self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isArrayType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isArrayType:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isUnionType->self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isUnionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isUnionType:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType->self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/ts-parser.ts:TSParser.isIntersectionType",
    "endNodeId": "self:Parameter:src/parser/ts-parser.ts:isIntersectionType:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:content->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:content",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:fileNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:fileNode->self:Variable:src/parser/vue-parser.ts:content",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:content",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:fileNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:fileNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:componentNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:templateNode->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:templateNode->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:templateNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:templateNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:componentRefs->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:componentRefs",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:componentRefs",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentRefs",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptResult->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptResult->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:scriptResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:styleNodes->self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseFile:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:styleNodes->self:Variable:src/parser/vue-parser.ts:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseFile->self:Variable:src/parser/vue-parser.ts:styleNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseFile",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:styleNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:name->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode->self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createComponentNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createComponentNode:descriptor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.createFileNode->self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.createFileNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:createFileNode:content",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:template",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate->self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseTemplate",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseTemplate:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:ast->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:templateContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:ast",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComponentReferences:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences->self:Variable:src/parser/vue-parser.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComponentReferences",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:elementNode->self:Variable:src/parser/vue-parser.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:tagName->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:rendersRelationship->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:rendersRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:propsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:eventsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:eventsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:slotsResult->self:Variable:src/parser/vue-parser.ts:tagName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:tagName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:slotsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Variable:src/parser/vue-parser.ts:elementNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:elementNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode->self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processTemplateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processTemplateNode:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective->self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasConditionalDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasConditionalDirective:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective->self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.hasLoopDirective",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:hasLoopDirective:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:keyProp->self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:keyProp",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyFromNode:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode->self:Variable:src/parser/vue-parser.ts:keyProp",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyFromNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyProp",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:nameProp->self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:nameProp",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:processSlotElement:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Variable:src/parser/vue-parser.ts:nameProp",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:nameProp",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement->self:Variable:src/parser/vue-parser.ts:slotName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.processSlotElement",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:slotName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:result->self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:nodeToString:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:dirName->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:dirName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:argStr->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:argStr",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:valueStr->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:valueStr",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:argStr",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:argStr",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:dirName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:dirName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.nodeToString->self:Variable:src/parser/vue-parser.ts:valueStr",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.nodeToString",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:valueStr",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:keyMatch->self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:keyMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractKeyAttribute:tagContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute->self:Variable:src/parser/vue-parser.ts:keyMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractKeyAttribute",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:keyMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propRegex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propRegex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:tagContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propValue->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:props",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:props",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:bindings",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:bindings",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:propValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:staticPropRegex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropRegex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propValue->self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:staticPropMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:providesPropsRelationship->self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:fromNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:providesPropsRelationship->self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractProps:toComponentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractProps->self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:providesPropsRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventRegex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventRegex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:tagContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:eventName->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:eventName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:handlerValue->self:Variable:src/parser/vue-parser.ts:eventMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:handlerValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:events",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:events",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:eventName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:eventName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:handlers",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlers",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:handlerValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:handlerValue",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:listensToRelationship->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:fromNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:listensToRelationship->self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractEventListeners:toComponentName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners->self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractEventListeners",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:listensToRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractSlots->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractSlots",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:script->self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:isSetup->self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:isSetup",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:descriptor",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptNode->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:scriptNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:ast->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:ast",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:ast",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:callee->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:propsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:emitsResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:composableResult->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:composableResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:composableResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:composableResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:importResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:importResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:importResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:init->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:init",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:callee->self:Variable:src/parser/vue-parser.ts:init",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:init",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:path",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Variable:src/parser/vue-parser.ts:callee",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:callee",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateResult->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseScript:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseScript->self:Variable:src/parser/vue-parser.ts:error",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseScript",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:error",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsResult->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitsResult->self:Variable:src/parser/vue-parser.ts:script",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:script",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsMatch->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:scriptContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propsMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propsContent->self:Variable:src/parser/vue-parser.ts:propsMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propRegex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propRegex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propsContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propType->self:Variable:src/parser/vue-parser.ts:propMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propNode->self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineProps:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propNode->self:Variable:src/parser/vue-parser.ts:propsContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propsContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps->self:Variable:src/parser/vue-parser.ts:propNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineProps",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:defaultMatch->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propsContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:defaultMatch->self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefaultValue:propName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue->self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefaultValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:args->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:arg->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:prop",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:prop",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:isRequired",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:isRequired",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propOption",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propOption",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:hasDefault",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefault",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:defaultValue",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:defaultValue",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propNode->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:propNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:propNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:propName->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:propName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptContent->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefinePropsFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST->self:Variable:src/parser/vue-parser.ts:simpleResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefinePropsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:args->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:args",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:args",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitName->self:Variable:src/parser/vue-parser.ts:element",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:element",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNode->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:emitName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:emitNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:scriptContent->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:scriptContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:scriptContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:simpleResult->self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmitsFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST->self:Variable:src/parser/vue-parser.ts:simpleResult",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmitsFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:simpleResult",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:usesComposableRelationship->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:usesComposableRelationship->self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractComposableUsage:composableName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage->self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractComposableUsage",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:usesComposableRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:source->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:source",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:specifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:specifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:hasDefaultImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasDefaultImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:importedSpecifiers",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importedSpecifiers",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:hasNamespaceImport",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:hasNamespaceImport",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:importsRelationship->self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractImportFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:importsRelationship->self:Variable:src/parser/vue-parser.ts:source",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:source",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST->self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractImportFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:importsRelationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:stateName->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:stateName",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Variable:src/parser/vue-parser.ts:stateName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:stateName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:reactivityType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:reactiveStateNode->self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractReactiveStateFromAST:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST->self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractReactiveStateFromAST",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:reactiveStateNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:arg->self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:getInitialValue:init",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue->self:Variable:src/parser/vue-parser.ts:arg",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.getInitialValue",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:arg",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitsMatch->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:scriptContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitsContent->self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitsContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNames->self:Variable:src/parser/vue-parser.ts:emitsContent",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNames",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitsContent",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitNames",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNames",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:name->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:emitName",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:emitName",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNode->self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:extractDefineEmits:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:name",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:name",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits->self:Variable:src/parser/vue-parser.ts:emitRegex",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.extractDefineEmits",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitRegex",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitName->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitName",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:payloadType->self:Variable:src/parser/vue-parser.ts:emitMatch",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:payloadType",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:emitMatch",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:emitNode->self:Variable:src/parser/vue-parser.ts:payloadType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:emitNode",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:payloadType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/parser/vue-parser.ts:relativePath->self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:styles",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Variable:src/parser/vue-parser.ts:relativePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Variable:src/parser/vue-parser.ts:relativePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:index",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:index",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:style",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:style",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.parseStyles->self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.parseStyles",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:parseStyles:componentNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId->self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/parser/vue-parser.ts:VueParser.generateNodeId",
    "endNodeId": "self:Parameter:src/parser/vue-parser.ts:generateNodeId:identifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/schema/index.ts:SCHEMA_METADATA->self:Variable:src/schema/index.ts:SCHEMA_VERSION",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/schema/index.ts:SCHEMA_METADATA",
    "endNodeId": "self:Variable:src/schema/index.ts:SCHEMA_VERSION",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:transform:parseResults",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:uniqueNodes->self:Variable:src/transformer/graph-transformer.ts:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships->self:Variable:src/transformer/graph-transformer.ts:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:enhancedNodes->self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:uniqueNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform->self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.transform",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateNodes:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateNodes",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deduplicateRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships->self:Variable:src/transformer/graph-transformer.ts:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deduplicateRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:invalidNodes->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidNodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:invalidRelationships->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:invalidRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:nodeIds->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:filePath->self:Variable:src/transformer/graph-transformer.ts:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:jsPath->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:jsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:tsPath->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:tsPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:validate:result",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:filePath->self:Variable:src/transformer/graph-transformer.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:statSync",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:statSync",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:ext->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:ext",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:ext",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:ext",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:importRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:importPath->self:Variable:src/transformer/graph-transformer.ts:importRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:importPath",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:importPath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:importPath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:startNodeExists->self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:endNodeExists->self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeIds",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:endNodeExists",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:mappedNodeId->self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePathToNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:mappedNodeId->self:Variable:src/transformer/graph-transformer.ts:filePath",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:filePath",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:mappedNodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:danglingRelationships->self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:startNodeExists",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate->self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.validate",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:danglingRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode->self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidNode",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidNode:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:enhancedNode->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedNode",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels->self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.ensureNodeLabels",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:ensureNodeLabels:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship->self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.isValidRelationship",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:isValidRelationship:relationship",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:console",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:console",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:nodes",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:nodeMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:node",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:node",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:relationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:relType->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:relType",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:relType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:type",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:type",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rels",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:rels",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:callsRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:callsRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:dependsOnId->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:callsRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:existingRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnMap",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:existingRel->self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:existingRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:enhancedRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesTypeRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:dependsOnId->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnId",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:dependsOnRel->self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:dependsOnRel",
    "endNodeId": "self:Parameter:src/transformer/graph-transformer.ts:deriveAdditionalRelationships:refRel",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships->self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:relationshipsByType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships->self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Method:src/transformer/graph-transformer.ts:GraphTransformer.deriveAdditionalRelationships",
    "endNodeId": "self:Variable:src/transformer/graph-transformer.ts:referencesVarRelationships",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId->self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:sanitizedNodeType->self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:nodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:sanitizedIdentifier->self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:generateNodeId:uniqueIdentifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedCodebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedNodeType",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:generateNodeId->self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:generateNodeId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:sanitizedIdentifier",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractCodebaseId:nodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractCodebaseId->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractCodebaseId",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractNodeType:nodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractNodeType->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractNodeType",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Variable:src/utils/id-generator.ts:parts->self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:extractUniqueIdentifier:nodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:extractUniqueIdentifier->self:Variable:src/utils/id-generator.ts:parts",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:extractUniqueIdentifier",
    "endNodeId": "self:Variable:src/utils/id-generator.ts:parts",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:nodeId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:DEPENDS_ON:self:Function:src/utils/id-generator.ts:isNodeFromCodebase->self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "codebaseId": "self",
    "type": "DEPENDS_ON",
    "startNodeId": "self:Function:src/utils/id-generator.ts:isNodeFromCodebase",
    "endNodeId": "self:Parameter:src/utils/id-generator.ts:isNodeFromCodebase:codebaseId",
    "dependencyType": "reference",
    "isStrong": false,
    "isWeak": true,
    "weight": 1
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@babel/parser",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@babel/parser",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@babel/traverse",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@babel/traverse",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@babel/types",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@babel/types",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@vue/compiler-dom",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@vue/compiler-dom",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@vue/compiler-sfc",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@vue/compiler-sfc",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:neo4j-driver",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:neo4j-driver",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:postcss",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:postcss",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:postcss-scss",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:postcss-scss",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:sass",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:sass",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:typescript",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:typescript",
    "dependencyType": "regular",
    "isStrong": true,
    "isWeak": false,
    "weight": 1,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@types/jest",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@types/jest",
    "dependencyType": "dev",
    "isStrong": false,
    "isWeak": true,
    "weight": 0.5,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:@types/node",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:@types/node",
    "dependencyType": "dev",
    "isStrong": false,
    "isWeak": true,
    "weight": 0.5,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:jest",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:jest",
    "dependencyType": "dev",
    "isStrong": false,
    "isWeak": true,
    "weight": 0.5,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:ts-jest",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:ts-jest",
    "dependencyType": "dev",
    "isStrong": false,
    "isWeak": true,
    "weight": 0.5,
    "codebaseId": "self"
  },
  {
    "nodeId": "self:depends_on:@sage/cli:ts-node",
    "type": "DEPENDS_ON",
    "startNodeId": "self:package:@sage/cli",
    "endNodeId": "self:dependency:ts-node",
    "dependencyType": "dev",
    "isStrong": false,
    "isWeak": true,
    "weight": 0.5,
    "codebaseId": "self"
  }
]