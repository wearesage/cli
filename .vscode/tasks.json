{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Cleanup Self Codebase",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "scripts/cleanup-codebase.ts",
        "self"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Delete all nodes and relationships for the 'self' codebase from Neo4j",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "justdontask"
        }
      }
    },
    {
      "label": "Analyze Self",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "src/cli.ts",
        "analyze",
        "${workspaceFolder}",
        "${workspaceFolder}/output/self-analysis",
        "self"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Analyze this codebase using its own code analysis tools",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "justdontask"
        }
      }
    },
    {
      "label": "Clean and Analyze Self",
      "dependsOrder": "sequence",
      "dependsOn": ["Cleanup Self Codebase", "Analyze Self"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Clean up existing 'self' codebase data and then analyze the codebase again"
    },
    {
      "label": "Analyze Self (JSON Only)",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "src/cli.ts",
        "analyze",
        "${workspaceFolder}",
        "${workspaceFolder}/output/self-analysis",
        "self"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Analyze this codebase without importing to Neo4j (JSON output only)"
    },
    {
      "label": "Import JSON to Neo4j",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "scripts/import-json-to-neo4j.ts",
        "${input:jsonDir}",
        "${input:codebaseId}"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Import JSON files to Neo4j with special handling for complex properties",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "justdontask"
        }
      }
    },
    {
      "label": "Analyze Self (Improved)",
      "dependsOrder": "sequence",
      "dependsOn": [
        {
          "type": "shell",
          "command": "npx ts-node src/cli.ts analyze ${workspaceFolder} ${workspaceFolder}/output/self-analysis self",
          "options": {
            "cwd": "${workspaceFolder}"
          }
        },
        {
          "type": "shell",
          "command": "npx ts-node scripts/import-json-to-neo4j.ts ${workspaceFolder}/output/self-analysis self",
          "options": {
            "cwd": "${workspaceFolder}",
            "env": {
              "NEO4J_URI": "neo4j://localhost:7687",
              "NEO4J_USERNAME": "neo4j",
              "NEO4J_PASSWORD": "justdontask"
            }
          }
        }
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Analyze this codebase and import to Neo4j with improved handling of complex properties"
    },
    {
      "label": "Clean and Analyze Self (Improved)",
      "dependsOrder": "sequence",
      "dependsOn": ["Cleanup Self Codebase", "Analyze Self (Improved)"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Clean up existing 'self' codebase data and then analyze with improved Neo4j import"
    },
    {
      "label": "Query Self Analysis",
      "type": "shell",
      "command": "ts-node",
      "args": [
        "src/cli.ts",
        "query",
        "self",
        "${input:cypherQuery}"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Run a Cypher query against the self-analysis graph in Neo4j",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "password"
        }
      }
    },
    {
      "label": "Generate Schema Report",
      "type": "shell",
      "command": "ts-node",
      "args": [
        "-e",
        "const report = require('./src/schema/index.ts'); console.log(JSON.stringify(report.SCHEMA_METADATA, null, 2));"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Generate a report of the current schema metadata"
    },
    {
      "label": "Analyze Codebase Relationships",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "scripts/analyze-codebase-relationships.ts"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Analyze relationships between multiple codebases in Neo4j",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "justdontask"
        }
      }
    },
    {
      "label": "Fix Cross-Codebase Relationships",
      "type": "shell",
      "command": "npx",
      "args": [
        "ts-node",
        "scripts/fix-cross-codebase-relationships.ts"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": [],
      "detail": "Fix cross-codebase relationship properties in Neo4j",
      "options": {
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "justdontask"
        }
      }
    }
  ],
  "inputs": [
    {
      "id": "cypherQuery",
      "description": "Cypher query to run against the Neo4j database",
      "default": "MATCH (n:CodeElement) RETURN n.name, labels(n) LIMIT 10",
      "type": "promptString"
    },
    {
      "id": "jsonDir",
      "description": "Directory containing JSON files to import",
      "default": "${workspaceFolder}/output/self-analysis",
      "type": "promptString"
    },
    {
      "id": "codebaseId",
      "description": "Codebase ID for the imported data",
      "default": "self",
      "type": "promptString"
    }
  ]
}